{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "router",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "feeToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "router",
          "type": "address"
        }
      ],
      "name": "InvalidRouter",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferRequested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "pingPongCount",
          "type": "uint256"
        }
      ],
      "name": "Ping",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "pingPongCount",
          "type": "uint256"
        }
      ],
      "name": "Pong",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "messageId",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "sourceChainSelector",
              "type": "uint64"
            },
            {
              "internalType": "bytes",
              "name": "sender",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Client.EVMTokenAmount[]",
              "name": "destTokenAmounts",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Client.Any2EVMMessage",
          "name": "message",
          "type": "tuple"
        }
      ],
      "name": "ccipReceive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCounterpartAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCounterpartChainSelector",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRouter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "counterpartChainSelector",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "counterpartAddress",
          "type": "address"
        }
      ],
      "name": "setCounterpart",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "setCounterpartAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "chainSelector",
          "type": "uint64"
        }
      ],
      "name": "setCounterpartChainSelector",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "pause",
          "type": "bool"
        }
      ],
      "name": "setPaused",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startPingPong",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "488:2535:107:-:0;;;908:177;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;291:10:250;;345:1:248;966:6:107;-1:-1:-1;;;;;538:20:105;;534:58;;567:25;;-1:-1:-1;;;567:25:105;;589:1;567:25;;;703:51:351;676:18;;567:25:105;;;;;;;;534:58;-1:-1:-1;;;;;598:17:105;;;;;537:22:249;;529:59;;;;-1:-1:-1;;;529:59:249;;967:2:351;529:59:249;;;949:21:351;1006:2;986:18;;;979:30;1045:26;1025:18;;;1018:54;1089:18;;529:59:249;765:348:351;529:59:249;595:7;:18;;-1:-1:-1;;;;;;595:18:249;-1:-1:-1;;;;;595:18:249;;;;;;;;;;623:26;;;619:79;;659:32;678:12;659:18;:32::i;:::-;-1:-1:-1;;980:10:107::1;:18:::0;;-1:-1:-1;;;;980:18:107::1;::::0;;-1:-1:-1;1004:10:107::1;:21:::0;;-1:-1:-1;;;;;;1004:21:107::1;-1:-1:-1::0;;;;;1004:21:107;;::::1;::::0;;::::1;::::0;;;1031:49:::1;::::0;-1:-1:-1;;;1031:49:107;;1395:32:351;;;1031:49:107::1;::::0;::::1;1377:51:351::0;-1:-1:-1;;1444:18:351;;;1437:34;1004:21:107;1031:18:::1;::::0;1350::351;;1031:49:107::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;908:177:::0;;488:2535;;1482:188:249;1550:10;-1:-1:-1;;;;;1544:16:249;;;1536:52;;;;-1:-1:-1;;;1536:52:249;;1966:2:351;1536:52:249;;;1948:21:351;2005:2;1985:18;;;1978:30;2044:25;2024:18;;;2017:53;2087:18;;1536:52:249;1764:347:351;1536:52:249;1595:14;:19;;-1:-1:-1;;;;;;1595:19:249;-1:-1:-1;;;;;1595:19:249;;;;;;;;;-1:-1:-1;1653:7:249;;1626:39;;1595:19;;1653:7;;1626:39;;-1:-1:-1;1626:39:249;1482:188;:::o;14:131:351:-;-1:-1:-1;;;;;89:31:351;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:402::-;246:6;254;307:2;295:9;286:7;282:23;278:32;275:52;;;323:1;320;313:12;275:52;355:9;349:16;374:31;399:5;374:31;:::i;:::-;474:2;459:18;;453:25;424:5;;-1:-1:-1;487:33:351;453:25;487:33;:::i;:::-;539:7;529:17;;;150:402;;;;;:::o;1482:277::-;1549:6;1602:2;1590:9;1581:7;1577:23;1573:32;1570:52;;;1618:1;1615;1608:12;1570:52;1650:9;1644:16;1703:5;1696:13;1689:21;1682:5;1679:32;1669:60;;1725:1;1722;1715:12;1669:60;1748:5;1482:277;-1:-1:-1;;;1482:277:351:o;1764:347::-;488:2535:107;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638da5cb5b1161008c578063b187bd2611610066578063b187bd26146101f8578063b5a110111461021b578063bee518a41461022e578063f2fde38b1461026c57600080fd5b80638da5cb5b146101a15780639d2aede5146101bf578063b0f479a1146101d257600080fd5b80632874d8bf116100c85780632874d8bf1461013f5780632b6e5d631461014757806379ba50971461018657806385572ffb1461018e57600080fd5b806301ffc9a7146100ef57806316c38b3c146101175780631892b9061461012c575b600080fd5b6101026100fd366004610b10565b61027f565b60405190151581526020015b60405180910390f35b61012a610125366004610b59565b610318565b005b61012a61013a366004610b98565b61036a565b61012a6103c5565b60025473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161010e565b61012a610401565b61012a61019c366004610bb3565b610503565b60005473ffffffffffffffffffffffffffffffffffffffff16610161565b61012a6101cd366004610c12565b610588565b7f0000000000000000000000000000000000000000000000000000000000000000610161565b60025474010000000000000000000000000000000000000000900460ff16610102565b61012a610229366004610c2d565b6105d7565b60015474010000000000000000000000000000000000000000900467ffffffffffffffff1660405167ffffffffffffffff909116815260200161010e565b61012a61027a366004610c12565b610679565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f85572ffb00000000000000000000000000000000000000000000000000000000148061031257507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b61032061068a565b6002805491151574010000000000000000000000000000000000000000027fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff909216919091179055565b61037261068a565b6001805467ffffffffffffffff90921674010000000000000000000000000000000000000000027fffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff909216919091179055565b6103cd61068a565b600280547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1690556103ff600161070b565b565b60015473ffffffffffffffffffffffffffffffffffffffff163314610487576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4d7573742062652070726f706f736564206f776e65720000000000000000000060448201526064015b60405180910390fd5b60008054337fffffffffffffffffffffffff00000000000000000000000000000000000000008083168217845560018054909116905560405173ffffffffffffffffffffffffffffffffffffffff90921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610574576040517fd7f7333400000000000000000000000000000000000000000000000000000000815233600482015260240161047e565b61058561058082610e63565b6109c5565b50565b61059061068a565b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6105df61068a565b6001805467ffffffffffffffff90931674010000000000000000000000000000000000000000027fffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff909316929092179091556002805473ffffffffffffffffffffffffffffffffffffffff9092167fffffffffffffffffffffffff0000000000000000000000000000000000000000909216919091179055565b61068161068a565b61058581610a1b565b60005473ffffffffffffffffffffffffffffffffffffffff1633146103ff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000604482015260640161047e565b8060011660010361074e576040518181527f48257dc961b6f792c2b78a080dacfed693b660960a702de21cee364e20270e2f9060200160405180910390a1610782565b6040518181527f58b69f57828e6962d216502094c54f6562f3bf082ba758966c3454f9e37b15259060200160405180910390a15b60008160405160200161079791815260200190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815260a08301825260025473ffffffffffffffffffffffffffffffffffffffff1660c0808501919091528251808503909101815260e08401835283526020808401829052825160008082529181018452919450929182019083610845565b604080518082019091526000808252602082015281526020019060019003908161081e5790505b50815260035473ffffffffffffffffffffffffffffffffffffffff1660208083019190915260408051808301825262030d4090819052815160248082019290925282518082039092018252604401825291820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f97a657c900000000000000000000000000000000000000000000000000000000179052909101526001546040517f96f4e9f90000000000000000000000000000000000000000000000000000000081529192507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16916396f4e9f99161097c917401000000000000000000000000000000000000000090910467ffffffffffffffff16908590600401610f74565b6020604051808303816000875af115801561099b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bf9190611086565b50505050565b600081606001518060200190518101906109df9190611086565b60025490915074010000000000000000000000000000000000000000900460ff16610a1757610a17610a1282600161109f565b61070b565b5050565b3373ffffffffffffffffffffffffffffffffffffffff821603610a9a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000604482015260640161047e565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b600060208284031215610b2257600080fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114610b5257600080fd5b9392505050565b600060208284031215610b6b57600080fd5b81358015158114610b5257600080fd5b803567ffffffffffffffff81168114610b9357600080fd5b919050565b600060208284031215610baa57600080fd5b610b5282610b7b565b600060208284031215610bc557600080fd5b813567ffffffffffffffff811115610bdc57600080fd5b820160a08185031215610b5257600080fd5b803573ffffffffffffffffffffffffffffffffffffffff81168114610b9357600080fd5b600060208284031215610c2457600080fd5b610b5282610bee565b60008060408385031215610c4057600080fd5b610c4983610b7b565b9150610c5760208401610bee565b90509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715610cb257610cb2610c60565b60405290565b60405160a0810167ffffffffffffffff81118282101715610cb257610cb2610c60565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610d2257610d22610c60565b604052919050565b600082601f830112610d3b57600080fd5b813567ffffffffffffffff811115610d5557610d55610c60565b610d8660207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601610cdb565b818152846020838601011115610d9b57600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f830112610dc957600080fd5b8135602067ffffffffffffffff821115610de557610de5610c60565b610df3818360051b01610cdb565b82815260069290921b84018101918181019086841115610e1257600080fd5b8286015b84811015610e585760408189031215610e2f5760008081fd5b610e37610c8f565b610e4082610bee565b81528185013585820152835291830191604001610e16565b509695505050505050565b600060a08236031215610e7557600080fd5b610e7d610cb8565b82358152610e8d60208401610b7b565b6020820152604083013567ffffffffffffffff80821115610ead57600080fd5b610eb936838701610d2a565b60408401526060850135915080821115610ed257600080fd5b610ede36838701610d2a565b60608401526080850135915080821115610ef757600080fd5b50610f0436828601610db8565b60808301525092915050565b6000815180845260005b81811015610f3657602081850181015186830182015201610f1a565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6000604067ffffffffffffffff8516835260208181850152845160a083860152610fa160e0860182610f10565b9050818601517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc080878403016060880152610fdc8383610f10565b88860151888203830160808a01528051808352908601945060009350908501905b8084101561103c578451805173ffffffffffffffffffffffffffffffffffffffff16835286015186830152938501936001939093019290860190610ffd565b50606089015173ffffffffffffffffffffffffffffffffffffffff1660a08901526080890151888203830160c08a015295506110788187610f10565b9a9950505050505050505050565b60006020828403121561109857600080fd5b5051919050565b80820180821115610312577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea164736f6c6343000815000a",
    "sourceMap": "488:2535:107:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1397:209:105;;;;;;:::i;:::-;;:::i;:::-;;;516:14:351;;509:22;491:41;;479:2;464:18;1397:209:105;;;;;;;;2942:79:107;;;;;;:::i;:::-;;:::i;:::-;;2513:131;;;;;;:::i;:::-;;:::i;1308:90::-;;;:::i;2648:103::-;2726:20;;;;2648:103;;;1494:42:351;1482:55;;;1464:74;;1452:2;1437:18;2648:103:107;1318:226:351;1001:265:249;;;:::i;1652:130:105:-;;;;;;:::i;:::-;;:::i;1317:81:249:-;1364:7;1386;;;1317:81;;2755:102:107;;;;;;:::i;:::-;;:::i;2194:86:105:-;2266:8;2194:86;;2861:77:107;2923:10;;;;;;;2861:77;;1089:215;;;;;;:::i;:::-;;:::i;2395:114::-;2478:26;;;;;;;2395:114;;2778:18:351;2766:31;;;2748:50;;2736:2;2721:18;2395:114:107;2604:200:351;811:98:249;;;;;;:::i;:::-;;:::i;1397:209:105:-;1482:4;1501:56;;;1516:41;1501:56;;:100;;-1:-1:-1;1561:40:105;;;1576:25;1561:40;1501:100;1494:107;1397:209;-1:-1:-1;;1397:209:105:o;2942:79:107:-;1941:20:249;:18;:20::i;:::-;2998:10:107::1;:18:::0;;;::::1;;::::0;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;2942:79::o;2513:131::-;1941:20:249;:18;:20::i;:::-;2597:26:107::1;:42:::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;2513:131::o;1308:90::-;1941:20:249;:18;:20::i;:::-;1358:10:107::1;:18:::0;;;::::1;::::0;;1382:11:::1;1358:18:::0;1382:8:::1;:11::i;:::-;1308:90::o:0;1001:265:249:-;1074:14;;;;1060:10;:28;1052:63;;;;;;;3011:2:351;1052:63:249;;;2993:21:351;3050:2;3030:18;;;3023:30;3089:24;3069:18;;;3062:52;3131:18;;1052:63:249;;;;;;;;;1122:16;1141:7;;1164:10;1154:20;;;;;;;;-1:-1:-1;1180:27:249;;;;;;;1219:42;;1141:7;;;;;1164:10;;1141:7;;1219:42;;;1046:220;1001:265::o;1652:130:105:-;2412:10;:31;2434:8;2412:31;;2408:69;;2452:25;;;;;2466:10;2452:25;;;1464:74:351;1437:18;;2452:25:105;1318:226:351;2408:69:105;1756:21:::1;;1769:7:::0;1756:21:::1;:::i;:::-;:12;:21::i;:::-;1652:130:::0;:::o;2755:102:107:-;1941:20:249;:18;:20::i;:::-;2825::107::1;:27:::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;2755:102::o;1089:215::-;1941:20:249;:18;:20::i;:::-;1199:26:107::1;:53:::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;;1258:20:::1;:41:::0;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;1089:215::o;811:98:249:-;1941:20;:18;:20::i;:::-;882:22:::1;901:2;882:18;:22::i;1715:111::-:0;1787:7;;;;1773:10;:21;1765:56;;;;;;;7019:2:351;1765:56:249;;;7001:21:351;7058:2;7038:18;;;7031:30;7097:24;7077:18;;;7070:52;7139:18;;1765:56:249;6817:346:351;1402:614:107;1461:13;1477:1;1461:17;1482:1;1461:22;1457:112;;1498:19;;7314:25:351;;;1498:19:107;;7302:2:351;7287:18;1498:19:107;;;;;;;1457:112;;;1543:19;;7314:25:351;;;1543:19:107;;7302:2:351;7287:18;1543:19:107;;;;;;;1457:112;1575:17;1606:13;1595:25;;;;;;7314::351;;7302:2;7287:18;;7168:177;1595:25:107;;;;;;;;;;;1665:268;;;;;1716:20;;;;1705:32;;;;1464:74:351;;;;1705:32:107;;;;;;;;;;1437:18:351;;;1705:32:107;;1665:268;;1705:32;1665:268;;;;;;1777:30;;1626:36;1777:30;;;;;;;;1595:25;;-1:-1:-1;1626:36:107;1595:25;1665:268;;;1626:36;1777:30;;;-1:-1:-1;;;;;;;;;;;;;;;;;1777:30:107;;;;;;;;;;;;;;;-1:-1:-1;1665:268:107;;1915:10;;;;1665:268;;;;;;;;;1846:42;;;;;;;1879:7;1846:42;;;;1394:56:122;;;;;;10756:32:351;;;;1394:56:122;;;;;;;;;;10729:18:351;;1394:56:122;;;;;;;;;1417:21;1394:56;;;1665:268:107;;;;1975:26;;1939:72;;;;;1626:307;;-1:-1:-1;2266:8:105;1939:35:107;;;;;:72;;1975:26;;;;;;;1626:307;;1939:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1451:565;;1402:614;:::o;2020:212::-;2104:21;2139:7;:12;;;2128:35;;;;;;;;;;;;:::i;:::-;2174:10;;2104:59;;-1:-1:-1;2174:10:107;;;;;2169:59;;2194:27;2203:17;:13;2219:1;2203:17;:::i;:::-;2194:8;:27::i;:::-;2098:134;2020:212;:::o;1482:188:249:-;1550:10;1544:16;;;;1536:52;;;;;;;10394:2:351;1536:52:249;;;10376:21:351;10433:2;10413:18;;;10406:30;10472:25;10452:18;;;10445:53;10515:18;;1536:52:249;10192:347:351;1536:52:249;1595:14;:19;;;;;;;;;;;;;;-1:-1:-1;1653:7:249;;1626:39;;1595:19;;1653:7;;1626:39;;-1:-1:-1;1626:39:249;1482:188;:::o;14:332:351:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:66;223:5;219:78;212:5;209:89;199:117;;312:1;309;302:12;199:117;335:5;14:332;-1:-1:-1;;;14:332:351:o;543:273::-;599:6;652:2;640:9;631:7;627:23;623:32;620:52;;;668:1;665;658:12;620:52;707:9;694:23;760:5;753:13;746:21;739:5;736:32;726:60;;782:1;779;772:12;821:171;888:20;;948:18;937:30;;927:41;;917:69;;982:1;979;972:12;917:69;821:171;;;:::o;997:184::-;1055:6;1108:2;1096:9;1087:7;1083:23;1079:32;1076:52;;;1124:1;1121;1114:12;1076:52;1147:28;1165:9;1147:28;:::i;1549:395::-;1643:6;1696:2;1684:9;1675:7;1671:23;1667:32;1664:52;;;1712:1;1709;1702:12;1664:52;1752:9;1739:23;1785:18;1777:6;1774:30;1771:50;;;1817:1;1814;1807:12;1771:50;1840:22;;1896:3;1878:16;;;1874:26;1871:46;;;1913:1;1910;1903:12;1949:196;2017:20;;2077:42;2066:54;;2056:65;;2046:93;;2135:1;2132;2125:12;2150:186;2209:6;2262:2;2250:9;2241:7;2237:23;2233:32;2230:52;;;2278:1;2275;2268:12;2230:52;2301:29;2320:9;2301:29;:::i;2341:258::-;2408:6;2416;2469:2;2457:9;2448:7;2444:23;2440:32;2437:52;;;2485:1;2482;2475:12;2437:52;2508:28;2526:9;2508:28;:::i;:::-;2498:38;;2555;2589:2;2578:9;2574:18;2555:38;:::i;:::-;2545:48;;2341:258;;;;;:::o;3160:184::-;3212:77;3209:1;3202:88;3309:4;3306:1;3299:15;3333:4;3330:1;3323:15;3349:257;3421:4;3415:11;;;3453:17;;3500:18;3485:34;;3521:22;;;3482:62;3479:88;;;3547:18;;:::i;:::-;3583:4;3576:24;3349:257;:::o;3611:253::-;3683:2;3677:9;3725:4;3713:17;;3760:18;3745:34;;3781:22;;;3742:62;3739:88;;;3807:18;;:::i;3869:334::-;3940:2;3934:9;3996:2;3986:13;;4001:66;3982:86;3970:99;;4099:18;4084:34;;4120:22;;;4081:62;4078:88;;;4146:18;;:::i;:::-;4182:2;4175:22;3869:334;;-1:-1:-1;3869:334:351:o;4208:589::-;4250:5;4303:3;4296:4;4288:6;4284:17;4280:27;4270:55;;4321:1;4318;4311:12;4270:55;4357:6;4344:20;4383:18;4379:2;4376:26;4373:52;;;4405:18;;:::i;:::-;4449:114;4557:4;4488:66;4481:4;4477:2;4473:13;4469:86;4465:97;4449:114;:::i;:::-;4588:2;4579:7;4572:19;4634:3;4627:4;4622:2;4614:6;4610:15;4606:26;4603:35;4600:55;;;4651:1;4648;4641:12;4600:55;4716:2;4709:4;4701:6;4697:17;4690:4;4681:7;4677:18;4664:55;4764:1;4739:16;;;4757:4;4735:27;4728:38;;;;4743:7;4208:589;-1:-1:-1;;;4208:589:351:o;4802:992::-;4870:5;4923:3;4916:4;4908:6;4904:17;4900:27;4890:55;;4941:1;4938;4931:12;4890:55;4977:6;4964:20;5003:4;5026:18;5022:2;5019:26;5016:52;;;5048:18;;:::i;:::-;5088:36;5120:2;5115;5112:1;5108:10;5104:19;5088:36;:::i;:::-;5158:15;;;5244:1;5240:10;;;;5228:23;;5224:32;;;5189:12;;;;5268:15;;;5265:35;;;5296:1;5293;5286:12;5265:35;5332:2;5324:6;5320:15;5344:421;5360:6;5355:3;5352:15;5344:421;;;5438:4;5432:3;5427;5423:13;5419:24;5416:114;;;5484:1;5513:2;5509;5502:14;5416:114;5556:22;;:::i;:::-;5605:23;5624:3;5605:23;:::i;:::-;5591:38;;5678:12;;;5665:26;5649:14;;;5642:50;5705:18;;5743:12;;;;5386:4;5377:14;5344:421;;;-1:-1:-1;5783:5:351;4802:992;-1:-1:-1;;;;;;4802:992:351:o;5799:1013::-;5917:9;5976:4;5968:5;5952:14;5948:26;5944:37;5941:57;;;5994:1;5991;5984:12;5941:57;6022:22;;:::i;:::-;6082:5;6069:19;6060:7;6053:36;6123:33;6152:2;6145:5;6141:14;6123:33;:::i;:::-;6118:2;6109:7;6105:16;6098:59;6204:2;6197:5;6193:14;6180:28;6227:18;6268:2;6260:6;6257:14;6254:34;;;6284:1;6281;6274:12;6254:34;6322:52;6359:14;6350:6;6343:5;6339:18;6322:52;:::i;:::-;6317:2;6308:7;6304:16;6297:78;6424:2;6417:5;6413:14;6400:28;6384:44;;6453:2;6443:8;6440:16;6437:36;;;6469:1;6466;6459:12;6437:36;6507:54;6546:14;6535:8;6528:5;6524:20;6507:54;:::i;:::-;6502:2;6493:7;6489:16;6482:80;6611:3;6604:5;6600:15;6587:29;6571:45;;6641:2;6631:8;6628:16;6625:36;;;6657:1;6654;6647:12;6625:36;;6696:80;6761:14;6750:8;6743:5;6739:20;6696:80;:::i;:::-;6690:3;6677:17;;6670:107;-1:-1:-1;6681:7:351;5799:1013;-1:-1:-1;;5799:1013:351:o;7350:481::-;7391:3;7429:5;7423:12;7456:6;7451:3;7444:19;7481:1;7491:162;7505:6;7502:1;7499:13;7491:162;;;7567:4;7623:13;;;7619:22;;7613:29;7595:11;;;7591:20;;7584:59;7520:12;7491:162;;;7495:3;7698:1;7691:4;7682:6;7677:3;7673:16;7669:27;7662:38;7820:4;7750:66;7745:2;7737:6;7733:15;7729:88;7724:3;7720:98;7716:109;7709:116;;;7350:481;;;;:::o;7836:1689::-;8020:4;8049:2;8090:18;8082:6;8078:31;8067:9;8060:50;8129:2;8167;8162;8151:9;8147:18;8140:30;8205:6;8199:13;8248:4;8243:2;8232:9;8228:18;8221:32;8276:51;8322:3;8311:9;8307:19;8293:12;8276:51;:::i;:::-;8262:65;;8376:2;8368:6;8364:15;8358:22;8399:66;8529:2;8517:9;8509:6;8505:22;8501:31;8496:2;8485:9;8481:18;8474:59;8556:40;8589:6;8573:14;8556:40;:::i;:::-;8633:15;;;8627:22;8690;;;8686:31;;8680:3;8665:19;;8658:60;8767:21;;8797:22;;;8873:23;;;;-1:-1:-1;8914:1:351;;-1:-1:-1;8835:15:351;;;;8924:303;8938:6;8935:1;8932:13;8924:303;;;8997:13;;9039:9;;9050:42;9035:58;9023:71;;9134:11;;9128:18;9114:12;;;9107:40;9202:15;;;;8960:1;8953:9;;;;;9167:12;;;;8924:303;;;-1:-1:-1;9276:2:351;9264:15;;9258:22;1263:42;1252:54;9339:4;9324:20;;1240:67;9394:3;9382:16;;9376:23;9440:19;;;9436:28;;9430:3;9415:19;;9408:57;9376:23;-1:-1:-1;9482:37:351;9444:3;9376:23;9482:37;:::i;:::-;9474:45;7836:1689;-1:-1:-1;;;;;;;;;;7836:1689:351:o;9530:184::-;9600:6;9653:2;9641:9;9632:7;9628:23;9624:32;9621:52;;;9669:1;9666;9659:12;9621:52;-1:-1:-1;9692:16:351;;9530:184;-1:-1:-1;9530:184:351:o;9908:279::-;9973:9;;;9994:10;;;9991:190;;;10037:77;10034:1;10027:88;10138:4;10135:1;10128:15;10166:4;10163:1;10156:15",
    "linkReferences": {},
    "immutableReferences": {
      "69902": [
        {
          "start": 468,
          "length": 32
        },
        {
          "start": 1307,
          "length": 32
        },
        {
          "start": 2318,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "acceptOwnership()": "79ba5097",
    "ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))": "85572ffb",
    "getCounterpartAddress()": "2b6e5d63",
    "getCounterpartChainSelector()": "bee518a4",
    "getRouter()": "b0f479a1",
    "isPaused()": "b187bd26",
    "owner()": "8da5cb5b",
    "setCounterpart(uint64,address)": "b5a11011",
    "setCounterpartAddress(address)": "9d2aede5",
    "setCounterpartChainSelector(uint64)": "1892b906",
    "setPaused(bool)": "16c38b3c",
    "startPingPong()": "2874d8bf",
    "supportsInterface(bytes4)": "01ffc9a7",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"feeToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"InvalidRouter\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pingPongCount\",\"type\":\"uint256\"}],\"name\":\"Ping\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pingPongCount\",\"type\":\"uint256\"}],\"name\":\"Pong\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sourceChainSelector\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"sender\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Client.EVMTokenAmount[]\",\"name\":\"destTokenAmounts\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Client.Any2EVMMessage\",\"name\":\"message\",\"type\":\"tuple\"}],\"name\":\"ccipReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCounterpartAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCounterpartChainSelector\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"counterpartChainSelector\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"counterpartAddress\",\"type\":\"address\"}],\"name\":\"setCounterpart\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"setCounterpartAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"chainSelector\",\"type\":\"uint64\"}],\"name\":\"setCounterpartChainSelector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"pause\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startPingPong\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))\":{\"details\":\"Note ensure you check the msg.sender is the OffRampRouter\",\"params\":{\"message\":\"CCIP Message\"}},\"getRouter()\":{\"returns\":{\"_0\":\"i_router address\"}},\"supportsInterface(bytes4)\":{\"details\":\"Should indicate whether the contract implements IAny2EVMMessageReceiver e.g. return interfaceId == type(IAny2EVMMessageReceiver).interfaceId || interfaceId == type(IERC165).interfaceId This allows CCIP to check if ccipReceive is available before calling it. If this returns false or reverts, only tokens are transferred to the receiver. If this returns true, tokens are transferred and ccipReceive is called atomically. Additionally, if the receiver address does not have code associated with it at the time of execution (EXTCODESIZE returns 0), only tokens will be transferred.\",\"params\":{\"interfaceId\":\"The interfaceId to check\"},\"returns\":{\"_0\":\"true if the interfaceId is supported\"}}},\"title\":\"PingPongDemo - A simple ping-pong contract for demonstrating cross-chain communication\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))\":{\"notice\":\"Called by the Router to deliver a message. If this reverts, any token transfers also revert. The message will move to a FAILED state and become available for manual execution.\"},\"getRouter()\":{\"notice\":\"Return the current router\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"supportsInterface(bytes4)\":{\"notice\":\"IERC165 supports an interfaceId\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address, pending.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/v0.8/ccip/applications/PingPongDemo.sol\":\"PingPongDemo\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@ERC3643/=lib/ERC-3643/contracts/\",\":@chainlink/contracts-ccip/=src/v0.8/\",\":@chainlink/contracts/=node_modules/@chainlink/contracts/src/v0.6/\",\":@erc721a/=lib/ERC721A/contracts/\",\":@onchain-id/solidity/contracts/=lib/solidity/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/test/=lib/prb-test/src/\",\":ERC-3643/=lib/ERC-3643/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/contracts-upgradleable/=lib/openzeppelin-contracts-upgradleable/contracts/\",\":prb-test/=lib/prb-test/src/\",\":solidity/=lib/solidity/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"src/v0.8/ccip/applications/CCIPReceiver.sol\":{\"keccak256\":\"0xd59dbf083bfad8fe95248cac59822ade0bc7d70e50ab05e366cb35a2b2ea99f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20205c17fa785b37acf0547c656ed60e09e806df7472e0f608129daa028f30f7\",\"dweb:/ipfs/QmcAUurGrEdn5pE66sVQek4M7EiGkdoKt38qThFpxcpGLB\"]},\"src/v0.8/ccip/applications/PingPongDemo.sol\":{\"keccak256\":\"0xe9ceda855af9395427e872bdab220bb9b6cecd0bc43980540f4d6924d2d0b4ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e8f49769f0c88ea0dd4006efcfa517754302199f676141e2d68ef36d652e03\",\"dweb:/ipfs/Qma8piiQGxVZiqF7WLb3AZQgdFKkB4hxxGoBLEm8wtW1Cc\"]},\"src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol\":{\"keccak256\":\"0xd2a05a4f58a453cbf8cfa6aa78f58cb8e42091b3a025f711a0aa51f584e16b48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3bb4ca50612b0150a29b9ea7c82f6228914ff54716584541bad5c0259e8fa33\",\"dweb:/ipfs/QmTnqhNtBD9bUmqVaR4YHkWrBUdSGHV3DXAgrTM193PGkH\"]},\"src/v0.8/ccip/interfaces/IRouterClient.sol\":{\"keccak256\":\"0x7f2fdd93e516b7476c6fab099f6806adf5ceaf399b0cc415f6b9ede890f2379b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://14e2547e54a0e225d1aa654d49ad47a169f966b985456612af449eec610189ea\",\"dweb:/ipfs/QmcWVnkJ6TKcUR4koDQQGiYMEt7vJ6WG9XcrwbPiPDHoP9\"]},\"src/v0.8/ccip/libraries/Client.sol\":{\"keccak256\":\"0x8af3ac1085c87342373772fb1a0107c7b90258e6bfed318ab2a601a14477e679\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://14395fefc8310c9a355262359c8f51036f83c004982fb600164c2a007629f81e\",\"dweb:/ipfs/QmeCLr8a5bDVyLQm8v947ULgV4CZmUeQPjVyWixzieBD5o\"]},\"src/v0.8/shared/access/ConfirmedOwner.sol\":{\"keccak256\":\"0x99d0b0786fe368970009c703f2249bfbc56340ddf1a28b60d2915bb58c34cd72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af0371c1af45db651823b9a3d5af761b08243c78f105166342eee28de356c8dd\",\"dweb:/ipfs/QmPnC9qNDKwJFd5unwLb9pxjrutoe8MWjm5EXHTxq2kJ4x\"]},\"src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"keccak256\":\"0x215529a99534a40e6257ef2282a91ea4a95b66debc3997866406907622efb405\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecc56a2cddb1ba6225ca0cffb07fdf6e24bcc4234cc87710c42a59c0a21ae395\",\"dweb:/ipfs/QmSpW4vkPHeRNZ14beMEk2LEtqY5JQTueNJC4sCT8JaSoc\"]},\"src/v0.8/shared/access/OwnerIsCreator.sol\":{\"keccak256\":\"0x895af02d6a3df2930bbb6ec1f2d68118b492ca6e710ba0c34fcb6b574a0906aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4c69fab5eea1c0448f856a51d7e5736454fe5cc083d36c60bf3ee23bb3d0e8e\",\"dweb:/ipfs/QmP4fYQ9k7xeZms6cwnqnQuuAkRkeE2TWewyvCD8Mrc2DZ\"]},\"src/v0.8/shared/interfaces/IOwnable.sol\":{\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921\",\"dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q\"]},\"src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x527e858729af8197f6c8f99554d32bfc4f5a72b15975489c94809363d7ae522f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6828dfa867eaff18f383aad4ca4b5aaedb93109023d74aaf418fee6c06e556c2\",\"dweb:/ipfs/QmXSQ9WnaJ6Ba9gvKvgNxDY7sa7ATJ9V55uwGSGCpBuJKu\"]},\"src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa36a31b4bb17fad88d023474893b3b895fa421650543b1ce5aefc78efbd43244\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f235b9175d95111f301d729566e214c32559e55a2b0579c947484748e20679d\",\"dweb:/ipfs/QmSsNBuPejy1wNe2u3JSt2p9wFhrjvBjFrnAaNe1nDNkEA\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "router",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "feeToken",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "router",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "InvalidRouter"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferRequested",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "pingPongCount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Ping",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "pingPongCount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Pong",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "struct Client.Any2EVMMessage",
              "name": "message",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "messageId",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "sourceChainSelector",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes",
                  "name": "sender",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "struct Client.EVMTokenAmount[]",
                  "name": "destTokenAmounts",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "ccipReceive"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCounterpartAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCounterpartChainSelector",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRouter",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isPaused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "counterpartChainSelector",
              "type": "uint64"
            },
            {
              "internalType": "address",
              "name": "counterpartAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setCounterpart"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setCounterpartAddress"
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "chainSelector",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setCounterpartChainSelector"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "pause",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPaused"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "startPingPong"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))": {
            "details": "Note ensure you check the msg.sender is the OffRampRouter",
            "params": {
              "message": "CCIP Message"
            }
          },
          "getRouter()": {
            "returns": {
              "_0": "i_router address"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "Should indicate whether the contract implements IAny2EVMMessageReceiver e.g. return interfaceId == type(IAny2EVMMessageReceiver).interfaceId || interfaceId == type(IERC165).interfaceId This allows CCIP to check if ccipReceive is available before calling it. If this returns false or reverts, only tokens are transferred to the receiver. If this returns true, tokens are transferred and ccipReceive is called atomically. Additionally, if the receiver address does not have code associated with it at the time of execution (EXTCODESIZE returns 0), only tokens will be transferred.",
            "params": {
              "interfaceId": "The interfaceId to check"
            },
            "returns": {
              "_0": "true if the interfaceId is supported"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "acceptOwnership()": {
            "notice": "Allows an ownership transfer to be completed by the recipient."
          },
          "ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))": {
            "notice": "Called by the Router to deliver a message. If this reverts, any token transfers also revert. The message will move to a FAILED state and become available for manual execution."
          },
          "getRouter()": {
            "notice": "Return the current router"
          },
          "owner()": {
            "notice": "Get the current owner"
          },
          "supportsInterface(bytes4)": {
            "notice": "IERC165 supports an interfaceId"
          },
          "transferOwnership(address)": {
            "notice": "Allows an owner to begin transferring ownership to a new address, pending."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ERC3643/=lib/ERC-3643/contracts/",
        "@chainlink/contracts-ccip/=src/v0.8/",
        "@chainlink/contracts/=node_modules/@chainlink/contracts/src/v0.6/",
        "@erc721a/=lib/ERC721A/contracts/",
        "@onchain-id/solidity/contracts/=lib/solidity/contracts/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@prb/test/=lib/prb-test/src/",
        "ERC-3643/=lib/ERC-3643/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/contracts-upgradleable/=lib/openzeppelin-contracts-upgradleable/contracts/",
        "prb-test/=lib/prb-test/src/",
        "solidity/=lib/solidity/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10000
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/v0.8/ccip/applications/PingPongDemo.sol": "PingPongDemo"
      },
      "libraries": {}
    },
    "sources": {
      "src/v0.8/ccip/applications/CCIPReceiver.sol": {
        "keccak256": "0xd59dbf083bfad8fe95248cac59822ade0bc7d70e50ab05e366cb35a2b2ea99f6",
        "urls": [
          "bzz-raw://20205c17fa785b37acf0547c656ed60e09e806df7472e0f608129daa028f30f7",
          "dweb:/ipfs/QmcAUurGrEdn5pE66sVQek4M7EiGkdoKt38qThFpxcpGLB"
        ],
        "license": "MIT"
      },
      "src/v0.8/ccip/applications/PingPongDemo.sol": {
        "keccak256": "0xe9ceda855af9395427e872bdab220bb9b6cecd0bc43980540f4d6924d2d0b4ae",
        "urls": [
          "bzz-raw://37e8f49769f0c88ea0dd4006efcfa517754302199f676141e2d68ef36d652e03",
          "dweb:/ipfs/Qma8piiQGxVZiqF7WLb3AZQgdFKkB4hxxGoBLEm8wtW1Cc"
        ],
        "license": "MIT"
      },
      "src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol": {
        "keccak256": "0xd2a05a4f58a453cbf8cfa6aa78f58cb8e42091b3a025f711a0aa51f584e16b48",
        "urls": [
          "bzz-raw://e3bb4ca50612b0150a29b9ea7c82f6228914ff54716584541bad5c0259e8fa33",
          "dweb:/ipfs/QmTnqhNtBD9bUmqVaR4YHkWrBUdSGHV3DXAgrTM193PGkH"
        ],
        "license": "MIT"
      },
      "src/v0.8/ccip/interfaces/IRouterClient.sol": {
        "keccak256": "0x7f2fdd93e516b7476c6fab099f6806adf5ceaf399b0cc415f6b9ede890f2379b",
        "urls": [
          "bzz-raw://14e2547e54a0e225d1aa654d49ad47a169f966b985456612af449eec610189ea",
          "dweb:/ipfs/QmcWVnkJ6TKcUR4koDQQGiYMEt7vJ6WG9XcrwbPiPDHoP9"
        ],
        "license": "MIT"
      },
      "src/v0.8/ccip/libraries/Client.sol": {
        "keccak256": "0x8af3ac1085c87342373772fb1a0107c7b90258e6bfed318ab2a601a14477e679",
        "urls": [
          "bzz-raw://14395fefc8310c9a355262359c8f51036f83c004982fb600164c2a007629f81e",
          "dweb:/ipfs/QmeCLr8a5bDVyLQm8v947ULgV4CZmUeQPjVyWixzieBD5o"
        ],
        "license": "MIT"
      },
      "src/v0.8/shared/access/ConfirmedOwner.sol": {
        "keccak256": "0x99d0b0786fe368970009c703f2249bfbc56340ddf1a28b60d2915bb58c34cd72",
        "urls": [
          "bzz-raw://af0371c1af45db651823b9a3d5af761b08243c78f105166342eee28de356c8dd",
          "dweb:/ipfs/QmPnC9qNDKwJFd5unwLb9pxjrutoe8MWjm5EXHTxq2kJ4x"
        ],
        "license": "MIT"
      },
      "src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol": {
        "keccak256": "0x215529a99534a40e6257ef2282a91ea4a95b66debc3997866406907622efb405",
        "urls": [
          "bzz-raw://ecc56a2cddb1ba6225ca0cffb07fdf6e24bcc4234cc87710c42a59c0a21ae395",
          "dweb:/ipfs/QmSpW4vkPHeRNZ14beMEk2LEtqY5JQTueNJC4sCT8JaSoc"
        ],
        "license": "MIT"
      },
      "src/v0.8/shared/access/OwnerIsCreator.sol": {
        "keccak256": "0x895af02d6a3df2930bbb6ec1f2d68118b492ca6e710ba0c34fcb6b574a0906aa",
        "urls": [
          "bzz-raw://c4c69fab5eea1c0448f856a51d7e5736454fe5cc083d36c60bf3ee23bb3d0e8e",
          "dweb:/ipfs/QmP4fYQ9k7xeZms6cwnqnQuuAkRkeE2TWewyvCD8Mrc2DZ"
        ],
        "license": "MIT"
      },
      "src/v0.8/shared/interfaces/IOwnable.sol": {
        "keccak256": "0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767",
        "urls": [
          "bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921",
          "dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q"
        ],
        "license": "MIT"
      },
      "src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x527e858729af8197f6c8f99554d32bfc4f5a72b15975489c94809363d7ae522f",
        "urls": [
          "bzz-raw://6828dfa867eaff18f383aad4ca4b5aaedb93109023d74aaf418fee6c06e556c2",
          "dweb:/ipfs/QmXSQ9WnaJ6Ba9gvKvgNxDY7sa7ATJ9V55uwGSGCpBuJKu"
        ],
        "license": "MIT"
      },
      "src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0xa36a31b4bb17fad88d023474893b3b895fa421650543b1ce5aefc78efbd43244",
        "urls": [
          "bzz-raw://0f235b9175d95111f301d729566e214c32559e55a2b0579c947484748e20679d",
          "dweb:/ipfs/QmSsNBuPejy1wNe2u3JSt2p9wFhrjvBjFrnAaNe1nDNkEA"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/v0.8/ccip/applications/PingPongDemo.sol",
    "id": 70557,
    "exportedSymbols": {
      "CCIPReceiver": [
        70007
      ],
      "Client": [
        71303
      ],
      "IERC20": [
        137559
      ],
      "IRouterClient": [
        71131
      ],
      "OwnerIsCreator": [
        122449
      ],
      "PingPongDemo": [
        70556
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:2992:107",
    "nodes": [
      {
        "id": 70299,
        "nodeType": "PragmaDirective",
        "src": "32:23:107",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 70301,
        "nodeType": "ImportDirective",
        "src": "57:62:107",
        "nodes": [],
        "absolutePath": "src/v0.8/ccip/interfaces/IRouterClient.sol",
        "file": "../interfaces/IRouterClient.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 70557,
        "sourceUnit": 71132,
        "symbolAliases": [
          {
            "foreign": {
              "id": 70300,
              "name": "IRouterClient",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 71131,
              "src": "65:13:107",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 70303,
        "nodeType": "ImportDirective",
        "src": "121:70:107",
        "nodes": [],
        "absolutePath": "src/v0.8/shared/access/OwnerIsCreator.sol",
        "file": "../../shared/access/OwnerIsCreator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 70557,
        "sourceUnit": 122450,
        "symbolAliases": [
          {
            "foreign": {
              "id": 70302,
              "name": "OwnerIsCreator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 122449,
              "src": "129:14:107",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 70305,
        "nodeType": "ImportDirective",
        "src": "192:47:107",
        "nodes": [],
        "absolutePath": "src/v0.8/ccip/libraries/Client.sol",
        "file": "../libraries/Client.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 70557,
        "sourceUnit": 71304,
        "symbolAliases": [
          {
            "foreign": {
              "id": 70304,
              "name": "Client",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 71303,
              "src": "200:6:107",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 70307,
        "nodeType": "ImportDirective",
        "src": "240:48:107",
        "nodes": [],
        "absolutePath": "src/v0.8/ccip/applications/CCIPReceiver.sol",
        "file": "./CCIPReceiver.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 70557,
        "sourceUnit": 70008,
        "symbolAliases": [
          {
            "foreign": {
              "id": 70306,
              "name": "CCIPReceiver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 70007,
              "src": "248:12:107",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 70309,
        "nodeType": "ImportDirective",
        "src": "290:98:107",
        "nodes": [],
        "absolutePath": "src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/token/ERC20/IERC20.sol",
        "file": "../../vendor/openzeppelin-solidity/v4.8.0/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 70557,
        "sourceUnit": 137560,
        "symbolAliases": [
          {
            "foreign": {
              "id": 70308,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 137559,
              "src": "298:6:107",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 70556,
        "nodeType": "ContractDefinition",
        "src": "488:2535:107",
        "nodes": [
          {
            "id": 70318,
            "nodeType": "EventDefinition",
            "src": "546:34:107",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "48257dc961b6f792c2b78a080dacfed693b660960a702de21cee364e20270e2f",
            "name": "Ping",
            "nameLocation": "552:4:107",
            "parameters": {
              "id": 70317,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70316,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "pingPongCount",
                  "nameLocation": "565:13:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 70318,
                  "src": "557:21:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 70315,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "557:7:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "556:23:107"
            }
          },
          {
            "id": 70322,
            "nodeType": "EventDefinition",
            "src": "583:34:107",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "58b69f57828e6962d216502094c54f6562f3bf082ba758966c3454f9e37b1525",
            "name": "Pong",
            "nameLocation": "589:4:107",
            "parameters": {
              "id": 70321,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70320,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "pingPongCount",
                  "nameLocation": "602:13:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 70322,
                  "src": "594:21:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 70319,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "594:7:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "593:23:107"
            }
          },
          {
            "id": 70324,
            "nodeType": "VariableDeclaration",
            "src": "677:41:107",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "s_counterpartChainSelector",
            "nameLocation": "692:26:107",
            "scope": 70556,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 70323,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "677:6:107",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "private"
          },
          {
            "id": 70326,
            "nodeType": "VariableDeclaration",
            "src": "786:36:107",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "s_counterpartAddress",
            "nameLocation": "802:20:107",
            "scope": 70556,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 70325,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "786:7:107",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 70328,
            "nodeType": "VariableDeclaration",
            "src": "851:23:107",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "s_isPaused",
            "nameLocation": "864:10:107",
            "scope": 70556,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 70327,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "851:4:107",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "id": 70331,
            "nodeType": "VariableDeclaration",
            "src": "878:25:107",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "s_feeToken",
            "nameLocation": "893:10:107",
            "scope": 70556,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$137559",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 70330,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 70329,
                "name": "IERC20",
                "nameLocations": [
                  "878:6:107"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 137559,
                "src": "878:6:107"
              },
              "referencedDeclaration": 137559,
              "src": "878:6:107",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$137559",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "private"
          },
          {
            "id": 70365,
            "nodeType": "FunctionDefinition",
            "src": "908:177:107",
            "nodes": [],
            "body": {
              "id": 70364,
              "nodeType": "Block",
              "src": "974:111:107",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 70344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 70342,
                      "name": "s_isPaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70328,
                      "src": "980:10:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 70343,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "993:5:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "980:18:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 70345,
                  "nodeType": "ExpressionStatement",
                  "src": "980:18:107"
                },
                {
                  "expression": {
                    "id": 70348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 70346,
                      "name": "s_feeToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70331,
                      "src": "1004:10:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$137559",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 70347,
                      "name": "feeToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70336,
                      "src": "1017:8:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$137559",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1004:21:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$137559",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 70349,
                  "nodeType": "ExpressionStatement",
                  "src": "1004:21:107"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 70355,
                            "name": "router",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70333,
                            "src": "1058:6:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 70354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1050:7:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 70353,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1050:7:107",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 70356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1050:15:107",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                          "typeString": "int_const 1157...(70 digits omitted)...9935"
                        },
                        "id": 70361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
                            "typeString": "int_const 1157...(70 digits omitted)...9936"
                          },
                          "id": 70359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "32",
                            "id": 70357,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1067:1:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "323536",
                            "id": 70358,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1072:3:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_256_by_1",
                              "typeString": "int_const 256"
                            },
                            "value": "256"
                          },
                          "src": "1067:8:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
                            "typeString": "int_const 1157...(70 digits omitted)...9936"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 70360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1078:1:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "1067:12:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                          "typeString": "int_const 1157...(70 digits omitted)...9935"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                          "typeString": "int_const 1157...(70 digits omitted)...9935"
                        }
                      ],
                      "expression": {
                        "id": 70350,
                        "name": "s_feeToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70331,
                        "src": "1031:10:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$137559",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 70352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1042:7:107",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 137546,
                      "src": "1031:18:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 70362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1031:49:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 70363,
                  "nodeType": "ExpressionStatement",
                  "src": "1031:49:107"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 70339,
                    "name": "router",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 70333,
                    "src": "966:6:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 70340,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 70338,
                  "name": "CCIPReceiver",
                  "nameLocations": [
                    "953:12:107"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 70007,
                  "src": "953:12:107"
                },
                "nodeType": "ModifierInvocation",
                "src": "953:20:107"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 70337,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70333,
                  "mutability": "mutable",
                  "name": "router",
                  "nameLocation": "928:6:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 70365,
                  "src": "920:14:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 70332,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "920:7:107",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70336,
                  "mutability": "mutable",
                  "name": "feeToken",
                  "nameLocation": "943:8:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 70365,
                  "src": "936:15:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$137559",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 70335,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 70334,
                      "name": "IERC20",
                      "nameLocations": [
                        "936:6:107"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 137559,
                      "src": "936:6:107"
                    },
                    "referencedDeclaration": 137559,
                    "src": "936:6:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$137559",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "919:33:107"
            },
            "returnParameters": {
              "id": 70341,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "974:0:107"
            },
            "scope": 70556,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 70383,
            "nodeType": "FunctionDefinition",
            "src": "1089:215:107",
            "nodes": [],
            "body": {
              "id": 70382,
              "nodeType": "Block",
              "src": "1193:111:107",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 70376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 70374,
                      "name": "s_counterpartChainSelector",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70324,
                      "src": "1199:26:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 70375,
                      "name": "counterpartChainSelector",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70367,
                      "src": "1228:24:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "1199:53:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 70377,
                  "nodeType": "ExpressionStatement",
                  "src": "1199:53:107"
                },
                {
                  "expression": {
                    "id": 70380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 70378,
                      "name": "s_counterpartAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70326,
                      "src": "1258:20:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 70379,
                      "name": "counterpartAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70369,
                      "src": "1281:18:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1258:41:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 70381,
                  "nodeType": "ExpressionStatement",
                  "src": "1258:41:107"
                }
              ]
            },
            "functionSelector": "b5a11011",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 70372,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 70371,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1183:9:107"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 122432,
                  "src": "1183:9:107"
                },
                "nodeType": "ModifierInvocation",
                "src": "1183:9:107"
              }
            ],
            "name": "setCounterpart",
            "nameLocation": "1098:14:107",
            "parameters": {
              "id": 70370,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70367,
                  "mutability": "mutable",
                  "name": "counterpartChainSelector",
                  "nameLocation": "1120:24:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 70383,
                  "src": "1113:31:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 70366,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1113:6:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70369,
                  "mutability": "mutable",
                  "name": "counterpartAddress",
                  "nameLocation": "1154:18:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 70383,
                  "src": "1146:26:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 70368,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1146:7:107",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1112:61:107"
            },
            "returnParameters": {
              "id": 70373,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1193:0:107"
            },
            "scope": 70556,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 70397,
            "nodeType": "FunctionDefinition",
            "src": "1308:90:107",
            "nodes": [],
            "body": {
              "id": 70396,
              "nodeType": "Block",
              "src": "1352:46:107",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 70390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 70388,
                      "name": "s_isPaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70328,
                      "src": "1358:10:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 70389,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1371:5:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1358:18:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 70391,
                  "nodeType": "ExpressionStatement",
                  "src": "1358:18:107"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 70393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1391:1:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 70392,
                      "name": "_respond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70466,
                      "src": "1382:8:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 70394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1382:11:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 70395,
                  "nodeType": "ExpressionStatement",
                  "src": "1382:11:107"
                }
              ]
            },
            "functionSelector": "2874d8bf",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 70386,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 70385,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1342:9:107"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 122432,
                  "src": "1342:9:107"
                },
                "nodeType": "ModifierInvocation",
                "src": "1342:9:107"
              }
            ],
            "name": "startPingPong",
            "nameLocation": "1317:13:107",
            "parameters": {
              "id": 70384,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1330:2:107"
            },
            "returnParameters": {
              "id": 70387,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1352:0:107"
            },
            "scope": 70556,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 70466,
            "nodeType": "FunctionDefinition",
            "src": "1402:614:107",
            "nodes": [],
            "body": {
              "id": 70465,
              "nodeType": "Block",
              "src": "1451:565:107",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 70406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 70404,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 70402,
                        "name": "pingPongCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70399,
                        "src": "1461:13:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 70403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1477:1:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "1461:17:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 70405,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1482:1:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1461:22:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 70416,
                    "nodeType": "Block",
                    "src": "1530:39:107",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 70413,
                              "name": "pingPongCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 70399,
                              "src": "1548:13:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 70412,
                            "name": "Pong",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70322,
                            "src": "1543:4:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 70414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1543:19:107",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 70415,
                        "nodeType": "EmitStatement",
                        "src": "1538:24:107"
                      }
                    ]
                  },
                  "id": 70417,
                  "nodeType": "IfStatement",
                  "src": "1457:112:107",
                  "trueBody": {
                    "id": 70411,
                    "nodeType": "Block",
                    "src": "1485:39:107",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 70408,
                              "name": "pingPongCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 70399,
                              "src": "1503:13:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 70407,
                            "name": "Ping",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70318,
                            "src": "1498:4:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 70409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1498:19:107",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 70410,
                        "nodeType": "EmitStatement",
                        "src": "1493:24:107"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    70419
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 70419,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "1588:4:107",
                      "nodeType": "VariableDeclaration",
                      "scope": 70465,
                      "src": "1575:17:107",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 70418,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1575:5:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 70424,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 70422,
                        "name": "pingPongCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70399,
                        "src": "1606:13:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 70420,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1595:3:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 70421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1599:6:107",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "1595:10:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 70423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1595:25:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1575:45:107"
                },
                {
                  "assignments": [
                    70429
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 70429,
                      "mutability": "mutable",
                      "name": "message",
                      "nameLocation": "1655:7:107",
                      "nodeType": "VariableDeclaration",
                      "scope": 70465,
                      "src": "1626:36:107",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EVM2AnyMessage_$71281_memory_ptr",
                        "typeString": "struct Client.EVM2AnyMessage"
                      },
                      "typeName": {
                        "id": 70428,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 70427,
                          "name": "Client.EVM2AnyMessage",
                          "nameLocations": [
                            "1626:6:107",
                            "1633:14:107"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 71281,
                          "src": "1626:21:107"
                        },
                        "referencedDeclaration": 71281,
                        "src": "1626:21:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EVM2AnyMessage_$71281_storage_ptr",
                          "typeString": "struct Client.EVM2AnyMessage"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 70455,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 70434,
                            "name": "s_counterpartAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70326,
                            "src": "1716:20:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 70432,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1705:3:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 70433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1709:6:107",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "1705:10:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 70435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1705:32:107",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 70436,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70419,
                        "src": "1751:4:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 70441,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1805:1:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 70440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "1777:27:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_EVMTokenAmount_$71255_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (struct Client.EVMTokenAmount memory[] memory)"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 70438,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 70437,
                                "name": "Client.EVMTokenAmount",
                                "nameLocations": [
                                  "1781:6:107",
                                  "1788:14:107"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 71255,
                                "src": "1781:21:107"
                              },
                              "referencedDeclaration": 71255,
                              "src": "1781:21:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_EVMTokenAmount_$71255_storage_ptr",
                                "typeString": "struct Client.EVMTokenAmount"
                              }
                            },
                            "id": 70439,
                            "nodeType": "ArrayTypeName",
                            "src": "1781:23:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$71255_storage_$dyn_storage_ptr",
                              "typeString": "struct Client.EVMTokenAmount[]"
                            }
                          }
                        },
                        "id": 70442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1777:30:107",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$71255_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Client.EVMTokenAmount memory[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "3230305f303030",
                                "id": 70447,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1879:7:107",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_200000_by_1",
                                  "typeString": "int_const 200000"
                                },
                                "value": "200_000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_200000_by_1",
                                  "typeString": "int_const 200000"
                                }
                              ],
                              "expression": {
                                "id": 70445,
                                "name": "Client",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 71303,
                                "src": "1846:6:107",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Client_$71303_$",
                                  "typeString": "type(library Client)"
                                }
                              },
                              "id": 70446,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1853:14:107",
                              "memberName": "EVMExtraArgsV1",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 71287,
                              "src": "1846:21:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_EVMExtraArgsV1_$71287_storage_ptr_$",
                                "typeString": "type(struct Client.EVMExtraArgsV1 storage pointer)"
                              }
                            },
                            "id": 70448,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [
                              "1869:8:107"
                            ],
                            "names": [
                              "gasLimit"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "1846:42:107",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_EVMExtraArgsV1_$71287_memory_ptr",
                              "typeString": "struct Client.EVMExtraArgsV1 memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_EVMExtraArgsV1_$71287_memory_ptr",
                              "typeString": "struct Client.EVMExtraArgsV1 memory"
                            }
                          ],
                          "expression": {
                            "id": 70443,
                            "name": "Client",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 71303,
                            "src": "1826:6:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Client_$71303_$",
                              "typeString": "type(library Client)"
                            }
                          },
                          "id": 70444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1833:12:107",
                          "memberName": "_argsToBytes",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 71302,
                          "src": "1826:19:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_EVMExtraArgsV1_$71287_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (struct Client.EVMExtraArgsV1 memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 70449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1826:63:107",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 70452,
                            "name": "s_feeToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70331,
                            "src": "1915:10:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$137559",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$137559",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 70451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1907:7:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 70450,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1907:7:107",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 70453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1907:19:107",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$71255_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Client.EVMTokenAmount memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 70430,
                        "name": "Client",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71303,
                        "src": "1665:6:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Client_$71303_$",
                          "typeString": "type(library Client)"
                        }
                      },
                      "id": 70431,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1672:14:107",
                      "memberName": "EVM2AnyMessage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71281,
                      "src": "1665:21:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_EVM2AnyMessage_$71281_storage_ptr_$",
                        "typeString": "type(struct Client.EVM2AnyMessage storage pointer)"
                      }
                    },
                    "id": 70454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "1695:8:107",
                      "1745:4:107",
                      "1763:12:107",
                      "1815:9:107",
                      "1897:8:107"
                    ],
                    "names": [
                      "receiver",
                      "data",
                      "tokenAmounts",
                      "extraArgs",
                      "feeToken"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1665:268:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EVM2AnyMessage_$71281_memory_ptr",
                      "typeString": "struct Client.EVM2AnyMessage memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1626:307:107"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 70461,
                        "name": "s_counterpartChainSelector",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70324,
                        "src": "1975:26:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 70462,
                        "name": "message",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70429,
                        "src": "2003:7:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EVM2AnyMessage_$71281_memory_ptr",
                          "typeString": "struct Client.EVM2AnyMessage memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_struct$_EVM2AnyMessage_$71281_memory_ptr",
                          "typeString": "struct Client.EVM2AnyMessage memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 70457,
                              "name": "getRouter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69984,
                              "src": "1953:9:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 70458,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1953:11:107",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 70456,
                          "name": "IRouterClient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 71131,
                          "src": "1939:13:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IRouterClient_$71131_$",
                            "typeString": "type(contract IRouterClient)"
                          }
                        },
                        "id": 70459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1939:26:107",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRouterClient_$71131",
                          "typeString": "contract IRouterClient"
                        }
                      },
                      "id": 70460,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1966:8:107",
                      "memberName": "ccipSend",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71130,
                      "src": "1939:35:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint64_$_t_struct$_EVM2AnyMessage_$71281_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (uint64,struct Client.EVM2AnyMessage memory) payable external returns (bytes32)"
                      }
                    },
                    "id": 70463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1939:72:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 70464,
                  "nodeType": "ExpressionStatement",
                  "src": "1939:72:107"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_respond",
            "nameLocation": "1411:8:107",
            "parameters": {
              "id": 70400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70399,
                  "mutability": "mutable",
                  "name": "pingPongCount",
                  "nameLocation": "1428:13:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 70466,
                  "src": "1420:21:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 70398,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1420:7:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1419:23:107"
            },
            "returnParameters": {
              "id": 70401,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1451:0:107"
            },
            "scope": 70556,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 70495,
            "nodeType": "FunctionDefinition",
            "src": "2020:212:107",
            "nodes": [],
            "body": {
              "id": 70494,
              "nodeType": "Block",
              "src": "2098:134:107",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    70474
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 70474,
                      "mutability": "mutable",
                      "name": "pingPongCount",
                      "nameLocation": "2112:13:107",
                      "nodeType": "VariableDeclaration",
                      "scope": 70494,
                      "src": "2104:21:107",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 70473,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2104:7:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 70483,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 70477,
                          "name": "message",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70469,
                          "src": "2139:7:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Any2EVMMessage_$71268_memory_ptr",
                            "typeString": "struct Client.Any2EVMMessage memory"
                          }
                        },
                        "id": 70478,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2147:4:107",
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 71263,
                        "src": "2139:12:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 70480,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2154:7:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 70479,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2154:7:107",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 70481,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2153:9:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        }
                      ],
                      "expression": {
                        "id": 70475,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2128:3:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 70476,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2132:6:107",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "2128:10:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 70482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2128:35:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2104:59:107"
                },
                {
                  "condition": {
                    "id": 70485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2173:11:107",
                    "subExpression": {
                      "id": 70484,
                      "name": "s_isPaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70328,
                      "src": "2174:10:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 70493,
                  "nodeType": "IfStatement",
                  "src": "2169:59:107",
                  "trueBody": {
                    "id": 70492,
                    "nodeType": "Block",
                    "src": "2186:42:107",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 70489,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 70487,
                                "name": "pingPongCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70474,
                                "src": "2203:13:107",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 70488,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2219:1:107",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "2203:17:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 70486,
                            "name": "_respond",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70466,
                            "src": "2194:8:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 70490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2194:27:107",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 70491,
                        "nodeType": "ExpressionStatement",
                        "src": "2194:27:107"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              69972
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_ccipReceive",
            "nameLocation": "2029:12:107",
            "overrides": {
              "id": 70471,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2089:8:107"
            },
            "parameters": {
              "id": 70470,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70469,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "2071:7:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 70495,
                  "src": "2042:36:107",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Any2EVMMessage_$71268_memory_ptr",
                    "typeString": "struct Client.Any2EVMMessage"
                  },
                  "typeName": {
                    "id": 70468,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 70467,
                      "name": "Client.Any2EVMMessage",
                      "nameLocations": [
                        "2042:6:107",
                        "2049:14:107"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 71268,
                      "src": "2042:21:107"
                    },
                    "referencedDeclaration": 71268,
                    "src": "2042:21:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Any2EVMMessage_$71268_storage_ptr",
                      "typeString": "struct Client.Any2EVMMessage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2041:38:107"
            },
            "returnParameters": {
              "id": 70472,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2098:0:107"
            },
            "scope": 70556,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 70503,
            "nodeType": "FunctionDefinition",
            "src": "2395:114:107",
            "nodes": [],
            "body": {
              "id": 70502,
              "nodeType": "Block",
              "src": "2465:44:107",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 70500,
                    "name": "s_counterpartChainSelector",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 70324,
                    "src": "2478:26:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "functionReturnParameters": 70499,
                  "id": 70501,
                  "nodeType": "Return",
                  "src": "2471:33:107"
                }
              ]
            },
            "functionSelector": "bee518a4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCounterpartChainSelector",
            "nameLocation": "2404:27:107",
            "parameters": {
              "id": 70496,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2431:2:107"
            },
            "returnParameters": {
              "id": 70499,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70498,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 70503,
                  "src": "2457:6:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 70497,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2457:6:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2456:8:107"
            },
            "scope": 70556,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 70515,
            "nodeType": "FunctionDefinition",
            "src": "2513:131:107",
            "nodes": [],
            "body": {
              "id": 70514,
              "nodeType": "Block",
              "src": "2591:53:107",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 70512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 70510,
                      "name": "s_counterpartChainSelector",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70324,
                      "src": "2597:26:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 70511,
                      "name": "chainSelector",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70505,
                      "src": "2626:13:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "2597:42:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 70513,
                  "nodeType": "ExpressionStatement",
                  "src": "2597:42:107"
                }
              ]
            },
            "functionSelector": "1892b906",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 70508,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 70507,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2581:9:107"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 122432,
                  "src": "2581:9:107"
                },
                "nodeType": "ModifierInvocation",
                "src": "2581:9:107"
              }
            ],
            "name": "setCounterpartChainSelector",
            "nameLocation": "2522:27:107",
            "parameters": {
              "id": 70506,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70505,
                  "mutability": "mutable",
                  "name": "chainSelector",
                  "nameLocation": "2557:13:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 70515,
                  "src": "2550:20:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 70504,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2550:6:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2549:22:107"
            },
            "returnParameters": {
              "id": 70509,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2591:0:107"
            },
            "scope": 70556,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 70523,
            "nodeType": "FunctionDefinition",
            "src": "2648:103:107",
            "nodes": [],
            "body": {
              "id": 70522,
              "nodeType": "Block",
              "src": "2713:38:107",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 70520,
                    "name": "s_counterpartAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 70326,
                    "src": "2726:20:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 70519,
                  "id": 70521,
                  "nodeType": "Return",
                  "src": "2719:27:107"
                }
              ]
            },
            "functionSelector": "2b6e5d63",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCounterpartAddress",
            "nameLocation": "2657:21:107",
            "parameters": {
              "id": 70516,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2678:2:107"
            },
            "returnParameters": {
              "id": 70519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70518,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 70523,
                  "src": "2704:7:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 70517,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2704:7:107",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2703:9:107"
            },
            "scope": 70556,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 70535,
            "nodeType": "FunctionDefinition",
            "src": "2755:102:107",
            "nodes": [],
            "body": {
              "id": 70534,
              "nodeType": "Block",
              "src": "2819:38:107",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 70532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 70530,
                      "name": "s_counterpartAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70326,
                      "src": "2825:20:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 70531,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70525,
                      "src": "2848:4:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2825:27:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 70533,
                  "nodeType": "ExpressionStatement",
                  "src": "2825:27:107"
                }
              ]
            },
            "functionSelector": "9d2aede5",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 70528,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 70527,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2809:9:107"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 122432,
                  "src": "2809:9:107"
                },
                "nodeType": "ModifierInvocation",
                "src": "2809:9:107"
              }
            ],
            "name": "setCounterpartAddress",
            "nameLocation": "2764:21:107",
            "parameters": {
              "id": 70526,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70525,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "2794:4:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 70535,
                  "src": "2786:12:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 70524,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2786:7:107",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2785:14:107"
            },
            "returnParameters": {
              "id": 70529,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2819:0:107"
            },
            "scope": 70556,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 70543,
            "nodeType": "FunctionDefinition",
            "src": "2861:77:107",
            "nodes": [],
            "body": {
              "id": 70542,
              "nodeType": "Block",
              "src": "2910:28:107",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 70540,
                    "name": "s_isPaused",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 70328,
                    "src": "2923:10:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 70539,
                  "id": 70541,
                  "nodeType": "Return",
                  "src": "2916:17:107"
                }
              ]
            },
            "functionSelector": "b187bd26",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isPaused",
            "nameLocation": "2870:8:107",
            "parameters": {
              "id": 70536,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2878:2:107"
            },
            "returnParameters": {
              "id": 70539,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70538,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 70543,
                  "src": "2904:4:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 70537,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2904:4:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2903:6:107"
            },
            "scope": 70556,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 70555,
            "nodeType": "FunctionDefinition",
            "src": "2942:79:107",
            "nodes": [],
            "body": {
              "id": 70554,
              "nodeType": "Block",
              "src": "2992:29:107",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 70552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 70550,
                      "name": "s_isPaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70328,
                      "src": "2998:10:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 70551,
                      "name": "pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70545,
                      "src": "3011:5:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2998:18:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 70553,
                  "nodeType": "ExpressionStatement",
                  "src": "2998:18:107"
                }
              ]
            },
            "functionSelector": "16c38b3c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 70548,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 70547,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2982:9:107"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 122432,
                  "src": "2982:9:107"
                },
                "nodeType": "ModifierInvocation",
                "src": "2982:9:107"
              }
            ],
            "name": "setPaused",
            "nameLocation": "2951:9:107",
            "parameters": {
              "id": 70546,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70545,
                  "mutability": "mutable",
                  "name": "pause",
                  "nameLocation": "2966:5:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 70555,
                  "src": "2961:10:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 70544,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2961:4:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2960:12:107"
            },
            "returnParameters": {
              "id": 70549,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2992:0:107"
            },
            "scope": 70556,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 70311,
              "name": "CCIPReceiver",
              "nameLocations": [
                "513:12:107"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 70007,
              "src": "513:12:107"
            },
            "id": 70312,
            "nodeType": "InheritanceSpecifier",
            "src": "513:12:107"
          },
          {
            "baseName": {
              "id": 70313,
              "name": "OwnerIsCreator",
              "nameLocations": [
                "527:14:107"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 122449,
              "src": "527:14:107"
            },
            "id": 70314,
            "nodeType": "InheritanceSpecifier",
            "src": "527:14:107"
          }
        ],
        "canonicalName": "PingPongDemo",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 70310,
          "nodeType": "StructuredDocumentation",
          "src": "390:98:107",
          "text": "@title PingPongDemo - A simple ping-pong contract for demonstrating cross-chain communication"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          70556,
          122449,
          122271,
          122433,
          122895,
          70007,
          139523,
          70857
        ],
        "name": "PingPongDemo",
        "nameLocation": "497:12:107",
        "scope": 70557,
        "usedErrors": [
          69988
        ],
        "usedEvents": [
          70318,
          70322,
          122287,
          122293
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 107
}
{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {},
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/v0.8/vendor/openzeppelin-contracts-upgradeable/v4.8.1/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@ERC3643/=lib/ERC-3643/contracts/\",\":@chainlink/contracts-ccip/=src/v0.8/\",\":@chainlink/contracts/=node_modules/@chainlink/contracts/src/v0.6/\",\":@erc721a/=lib/ERC721A/contracts/\",\":@onchain-id/solidity/contracts/=lib/solidity/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/test/=lib/prb-test/src/\",\":ERC-3643/=lib/ERC-3643/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/contracts-upgradleable/=lib/openzeppelin-contracts-upgradleable/contracts/\",\":prb-test/=lib/prb-test/src/\",\":solidity/=lib/solidity/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"src/v0.8/vendor/openzeppelin-contracts-upgradeable/v4.8.1/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x4ba129dca3010b6dd2b700776d089f98218468679c1e6f01ee56c9f520c5568f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8ae79afbea0b6f6c5e73bc2527fbcb09dd6dc7aff18608f6c5037fc2421c05c\",\"dweb:/ipfs/QmcvWf49HnTT23NebctCy3ptYMQt9VMcoRu6CWKJci4qpw\"]},\"src/v0.8/vendor/openzeppelin-contracts-upgradeable/v4.8.1/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x90bb6dbbf9f8cfc7ae42f58db9362ecff164a4384abbe9933aaf87a2ca47e5ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b523973277d5b463f67b755af07cf0100a3d9d8d41e18f67210f314b08e2450\",\"dweb:/ipfs/Qmd32W47VK1zxvF3FqFdKaozuESMsaq25tVVTEDU98d1AY\"]},\"src/v0.8/vendor/openzeppelin-contracts-upgradeable/v4.8.1/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x3b8163a0b8c033c99e5c898fc45ab005b78def5f1524d179d0d57d0b8a8828a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f838a96b4d6bf0885ebf09c5015b72c30d96f3085262478ecb0c3061366cead4\",\"dweb:/ipfs/QmQaJpFHFZDfnaYBMsW5RGsV93X2PSTz9R1kVHqU5zpCDK\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ERC3643/=lib/ERC-3643/contracts/",
        "@chainlink/contracts-ccip/=src/v0.8/",
        "@chainlink/contracts/=node_modules/@chainlink/contracts/src/v0.6/",
        "@erc721a/=lib/ERC721A/contracts/",
        "@onchain-id/solidity/contracts/=lib/solidity/contracts/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@prb/test/=lib/prb-test/src/",
        "ERC-3643/=lib/ERC-3643/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/contracts-upgradleable/=lib/openzeppelin-contracts-upgradleable/contracts/",
        "prb-test/=lib/prb-test/src/",
        "solidity/=lib/solidity/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10000
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/v0.8/vendor/openzeppelin-contracts-upgradeable/v4.8.1/utils/ContextUpgradeable.sol": "ContextUpgradeable"
      },
      "libraries": {}
    },
    "sources": {
      "src/v0.8/vendor/openzeppelin-contracts-upgradeable/v4.8.1/proxy/utils/Initializable.sol": {
        "keccak256": "0x4ba129dca3010b6dd2b700776d089f98218468679c1e6f01ee56c9f520c5568f",
        "urls": [
          "bzz-raw://d8ae79afbea0b6f6c5e73bc2527fbcb09dd6dc7aff18608f6c5037fc2421c05c",
          "dweb:/ipfs/QmcvWf49HnTT23NebctCy3ptYMQt9VMcoRu6CWKJci4qpw"
        ],
        "license": "MIT"
      },
      "src/v0.8/vendor/openzeppelin-contracts-upgradeable/v4.8.1/utils/AddressUpgradeable.sol": {
        "keccak256": "0x90bb6dbbf9f8cfc7ae42f58db9362ecff164a4384abbe9933aaf87a2ca47e5ad",
        "urls": [
          "bzz-raw://1b523973277d5b463f67b755af07cf0100a3d9d8d41e18f67210f314b08e2450",
          "dweb:/ipfs/Qmd32W47VK1zxvF3FqFdKaozuESMsaq25tVVTEDU98d1AY"
        ],
        "license": "MIT"
      },
      "src/v0.8/vendor/openzeppelin-contracts-upgradeable/v4.8.1/utils/ContextUpgradeable.sol": {
        "keccak256": "0x3b8163a0b8c033c99e5c898fc45ab005b78def5f1524d179d0d57d0b8a8828a9",
        "urls": [
          "bzz-raw://f838a96b4d6bf0885ebf09c5015b72c30d96f3085262478ecb0c3061366cead4",
          "dweb:/ipfs/QmQaJpFHFZDfnaYBMsW5RGsV93X2PSTz9R1kVHqU5zpCDK"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/v0.8/vendor/openzeppelin-contracts-upgradeable/v4.8.1/utils/ContextUpgradeable.sol",
    "id": 133565,
    "exportedSymbols": {
      "AddressUpgradeable": [
        133522
      ],
      "ContextUpgradeable": [
        133564
      ],
      "Initializable": [
        133111
      ]
    },
    "nodeType": "SourceUnit",
    "src": "86:1258:308",
    "nodes": [
      {
        "id": 133524,
        "nodeType": "PragmaDirective",
        "src": "86:23:308",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 133525,
        "nodeType": "ImportDirective",
        "src": "110:42:308",
        "nodes": [],
        "absolutePath": "src/v0.8/vendor/openzeppelin-contracts-upgradeable/v4.8.1/proxy/utils/Initializable.sol",
        "file": "../proxy/utils/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 133565,
        "sourceUnit": 133112,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 133564,
        "nodeType": "ContractDefinition",
        "src": "651:693:308",
        "nodes": [
          {
            "id": 133534,
            "nodeType": "FunctionDefinition",
            "src": "711:59:308",
            "nodes": [],
            "body": {
              "id": 133533,
              "nodeType": "Block",
              "src": "763:7:308",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 133531,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 133530,
                  "name": "onlyInitializing",
                  "nameLocations": [
                    "746:16:308"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 133056,
                  "src": "746:16:308"
                },
                "nodeType": "ModifierInvocation",
                "src": "746:16:308"
              }
            ],
            "name": "__Context_init",
            "nameLocation": "720:14:308",
            "parameters": {
              "id": 133529,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "734:2:308"
            },
            "returnParameters": {
              "id": 133532,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "763:0:308"
            },
            "scope": 133564,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 133540,
            "nodeType": "FunctionDefinition",
            "src": "776:69:308",
            "nodes": [],
            "body": {
              "id": 133539,
              "nodeType": "Block",
              "src": "838:7:308",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 133537,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 133536,
                  "name": "onlyInitializing",
                  "nameLocations": [
                    "821:16:308"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 133056,
                  "src": "821:16:308"
                },
                "nodeType": "ModifierInvocation",
                "src": "821:16:308"
              }
            ],
            "name": "__Context_init_unchained",
            "nameLocation": "785:24:308",
            "parameters": {
              "id": 133535,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "809:2:308"
            },
            "returnParameters": {
              "id": 133538,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "838:0:308"
            },
            "scope": 133564,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 133549,
            "nodeType": "FunctionDefinition",
            "src": "850:96:308",
            "nodes": [],
            "body": {
              "id": 133548,
              "nodeType": "Block",
              "src": "912:34:308",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 133545,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "929:3:308",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 133546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "933:6:308",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "929:10:308",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 133544,
                  "id": 133547,
                  "nodeType": "Return",
                  "src": "922:17:308"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "859:10:308",
            "parameters": {
              "id": 133541,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "869:2:308"
            },
            "returnParameters": {
              "id": 133544,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 133543,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 133549,
                  "src": "903:7:308",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 133542,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "903:7:308",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "902:9:308"
            },
            "scope": 133564,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 133558,
            "nodeType": "FunctionDefinition",
            "src": "952:99:308",
            "nodes": [],
            "body": {
              "id": 133557,
              "nodeType": "Block",
              "src": "1019:32:308",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 133554,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "1036:3:308",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 133555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1040:4:308",
                    "memberName": "data",
                    "nodeType": "MemberAccess",
                    "src": "1036:8:308",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 133553,
                  "id": 133556,
                  "nodeType": "Return",
                  "src": "1029:15:308"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "961:8:308",
            "parameters": {
              "id": 133550,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "969:2:308"
            },
            "returnParameters": {
              "id": 133553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 133552,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 133558,
                  "src": "1003:14:308",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 133551,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1003:5:308",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1002:16:308"
            },
            "scope": 133564,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 133563,
            "nodeType": "VariableDeclaration",
            "src": "1316:25:308",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 133559,
              "nodeType": "StructuredDocumentation",
              "src": "1057:254:308",
              "text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
            },
            "mutability": "mutable",
            "name": "__gap",
            "nameLocation": "1336:5:308",
            "scope": 133564,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 133560,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1316:7:308",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 133562,
              "length": {
                "hexValue": "3530",
                "id": 133561,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1324:2:308",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "1316:11:308",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "visibility": "private"
          }
        ],
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 133527,
              "name": "Initializable",
              "nameLocations": [
                "691:13:308"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 133111,
              "src": "691:13:308"
            },
            "id": 133528,
            "nodeType": "InheritanceSpecifier",
            "src": "691:13:308"
          }
        ],
        "canonicalName": "ContextUpgradeable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 133526,
          "nodeType": "StructuredDocumentation",
          "src": "154:496:308",
          "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          133564,
          133111
        ],
        "name": "ContextUpgradeable",
        "nameLocation": "669:18:308",
        "scope": 133565,
        "usedErrors": [],
        "usedEvents": [
          132957
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 308
}
{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IBurnMintERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "allowlist",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "armProxy",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "capacity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "requested",
          "type": "uint256"
        }
      ],
      "name": "AggregateValueMaxCapacityExceeded",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "minWaitInSeconds",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "available",
          "type": "uint256"
        }
      ],
      "name": "AggregateValueRateLimitReached",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AllowListNotEnabled",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BadARMSignal",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BucketOverfilled",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "ramp",
          "type": "address"
        }
      ],
      "name": "NonExistentRamp",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PermissionsError",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "ramp",
          "type": "address"
        }
      ],
      "name": "RampAlreadyExists",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "SenderNotAllowed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "capacity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "requested",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "TokenMaxCapacityExceeded",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "minWaitInSeconds",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "available",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "TokenRateLimitReached",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroAddressNotAllowed",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "AllowListAdd",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "AllowListRemove",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Burned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "isEnabled",
              "type": "bool"
            },
            {
              "internalType": "uint128",
              "name": "capacity",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "rate",
              "type": "uint128"
            }
          ],
          "indexed": false,
          "internalType": "struct RateLimiter.Config",
          "name": "config",
          "type": "tuple"
        }
      ],
      "name": "ConfigChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Locked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Minted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "offRamp",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "isEnabled",
              "type": "bool"
            },
            {
              "internalType": "uint128",
              "name": "capacity",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "rate",
              "type": "uint128"
            }
          ],
          "indexed": false,
          "internalType": "struct RateLimiter.Config",
          "name": "rateLimiterConfig",
          "type": "tuple"
        }
      ],
      "name": "OffRampAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "offRamp",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "isEnabled",
              "type": "bool"
            },
            {
              "internalType": "uint128",
              "name": "capacity",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "rate",
              "type": "uint128"
            }
          ],
          "indexed": false,
          "internalType": "struct RateLimiter.Config",
          "name": "rateLimiterConfig",
          "type": "tuple"
        }
      ],
      "name": "OffRampConfigured",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "offRamp",
          "type": "address"
        }
      ],
      "name": "OffRampRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "onRamp",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "isEnabled",
              "type": "bool"
            },
            {
              "internalType": "uint128",
              "name": "capacity",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "rate",
              "type": "uint128"
            }
          ],
          "indexed": false,
          "internalType": "struct RateLimiter.Config",
          "name": "rateLimiterConfig",
          "type": "tuple"
        }
      ],
      "name": "OnRampAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "onRamp",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "isEnabled",
              "type": "bool"
            },
            {
              "internalType": "uint128",
              "name": "capacity",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "rate",
              "type": "uint128"
            }
          ],
          "indexed": false,
          "internalType": "struct RateLimiter.Config",
          "name": "rateLimiterConfig",
          "type": "tuple"
        }
      ],
      "name": "OnRampConfigured",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "onRamp",
          "type": "address"
        }
      ],
      "name": "OnRampRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferRequested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Released",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "TokensConsumed",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "removes",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "adds",
          "type": "address[]"
        }
      ],
      "name": "applyAllowListUpdates",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "ramp",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "allowed",
              "type": "bool"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "isEnabled",
                  "type": "bool"
                },
                {
                  "internalType": "uint128",
                  "name": "capacity",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "rate",
                  "type": "uint128"
                }
              ],
              "internalType": "struct RateLimiter.Config",
              "name": "rateLimiterConfig",
              "type": "tuple"
            }
          ],
          "internalType": "struct TokenPool.RampUpdate[]",
          "name": "onRamps",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "ramp",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "allowed",
              "type": "bool"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "isEnabled",
                  "type": "bool"
                },
                {
                  "internalType": "uint128",
                  "name": "capacity",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "rate",
                  "type": "uint128"
                }
              ],
              "internalType": "struct RateLimiter.Config",
              "name": "rateLimiterConfig",
              "type": "tuple"
            }
          ],
          "internalType": "struct TokenPool.RampUpdate[]",
          "name": "offRamps",
          "type": "tuple[]"
        }
      ],
      "name": "applyRampUpdates",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "offRamp",
          "type": "address"
        }
      ],
      "name": "currentOffRampRateLimiterState",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "tokens",
              "type": "uint128"
            },
            {
              "internalType": "uint32",
              "name": "lastUpdated",
              "type": "uint32"
            },
            {
              "internalType": "bool",
              "name": "isEnabled",
              "type": "bool"
            },
            {
              "internalType": "uint128",
              "name": "capacity",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "rate",
              "type": "uint128"
            }
          ],
          "internalType": "struct RateLimiter.TokenBucket",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "onRamp",
          "type": "address"
        }
      ],
      "name": "currentOnRampRateLimiterState",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "tokens",
              "type": "uint128"
            },
            {
              "internalType": "uint32",
              "name": "lastUpdated",
              "type": "uint32"
            },
            {
              "internalType": "bool",
              "name": "isEnabled",
              "type": "bool"
            },
            {
              "internalType": "uint128",
              "name": "capacity",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "rate",
              "type": "uint128"
            }
          ],
          "internalType": "struct RateLimiter.TokenBucket",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllowList",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllowListEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getArmProxy",
      "outputs": [
        {
          "internalType": "address",
          "name": "armProxy",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOffRamps",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOnRamps",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "offRamp",
          "type": "address"
        }
      ],
      "name": "isOffRamp",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "onRamp",
          "type": "address"
        }
      ],
      "name": "isOnRamp",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "originalSender",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "lockOrBurn",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "releaseOrMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "offRamp",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "isEnabled",
              "type": "bool"
            },
            {
              "internalType": "uint128",
              "name": "capacity",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "rate",
              "type": "uint128"
            }
          ],
          "internalType": "struct RateLimiter.Config",
          "name": "config",
          "type": "tuple"
        }
      ],
      "name": "setOffRampRateLimiterConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "onRamp",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "isEnabled",
              "type": "bool"
            },
            {
              "internalType": "uint128",
              "name": "capacity",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "rate",
              "type": "uint128"
            }
          ],
          "internalType": "struct RateLimiter.Config",
          "name": "config",
          "type": "tuple"
        }
      ],
      "name": "setOnRampRateLimiterConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "typeAndVersion",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60e06040523480156200001157600080fd5b5060405162002f2e38038062002f2e83398101604081905262000034916200051d565b82828233806000816200008e5760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f000000000000000060448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b0384811691909117909155811615620000c157620000c18162000133565b5050506001600160a01b038316620000ec576040516342bcdf7f60e11b815260040160405180910390fd5b6001600160a01b03808416608052811660a052815115801560c0526200012757604080516000815260208101909152620001279083620001de565b5050505050506200068e565b336001600160a01b038216036200018d5760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000604482015260640162000085565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b60c051620001ff576040516335f4a7b360e01b815260040160405180910390fd5b60005b8251811015620002945760008382815181106200022357620002236200061a565b602090810291909101015190506200023d6002826200034f565b1562000280576040516001600160a01b03821681527f800671136ab6cfee9fbe5ed1fb7ca417811aca3cf864800d127b927adedf75669060200160405180910390a15b506200028c8162000646565b905062000202565b5060005b81518110156200034a576000828281518110620002b957620002b96200061a565b6020026020010151905060006001600160a01b0316816001600160a01b031603620002e5575062000337565b620002f26002826200036f565b1562000335576040516001600160a01b03821681527f2640d4d76caf8bf478aabfa982fa4e1c4eb71a37f93cd15e80dbc657911546d89060200160405180910390a15b505b620003428162000646565b905062000298565b505050565b600062000366836001600160a01b03841662000386565b90505b92915050565b600062000366836001600160a01b0384166200048a565b600081815260018301602052604081205480156200047f576000620003ad60018362000662565b8554909150600090620003c39060019062000662565b90508181146200042f576000866000018281548110620003e757620003e76200061a565b90600052602060002001549050808760000184815481106200040d576200040d6200061a565b6000918252602080832090910192909255918252600188019052604090208390555b855486908062000443576200044362000678565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505062000369565b600091505062000369565b6000818152600183016020526040812054620004d35750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915562000369565b50600062000369565b6001600160a01b0381168114620004f257600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b80516200051881620004dc565b919050565b6000806000606084860312156200053357600080fd5b83516200054081620004dc565b602085810151919450906001600160401b03808211156200056057600080fd5b818701915087601f8301126200057557600080fd5b8151818111156200058a576200058a620004f5565b8060051b604051601f19603f83011681018181108582111715620005b257620005b2620004f5565b60405291825284820192508381018501918a831115620005d157600080fd5b938501935b82851015620005fa57620005ea856200050b565b84529385019392850192620005d6565b80975050505050505062000611604085016200050b565b90509250925092565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016200065b576200065b62000630565b5060010190565b8181038181111562000369576200036962000630565b634e487b7160e01b600052603160045260246000fd5b60805160a05160c051612838620006f6600039600081816103c301528181610a320152610f08015260008181610249015281816107d50152610ab60152600081816102020152818161092d01528181610bb201528181611348015261138f01526128386000f3fe608060405234801561001057600080fd5b50600436106101775760003560e01c80638627fad6116100d8578063a7cd63b71161008c578063d612b94511610066578063d612b945146103ae578063e0351e13146103c1578063f2fde38b146103e757600080fd5b8063a7cd63b714610380578063b3a3fb4114610388578063c49907b51461039b57600080fd5b80638da5cb5b116100bd5780638da5cb5b146103475780639687544514610365578063a40e69c71461037857600080fd5b80638627fad61461031f578063873813141461033257600080fd5b806354c8a4f31161012f5780637448b3c7116101145780637448b3c7146102955780637787e7ab146102a857806379ba50971461031757600080fd5b806354c8a4f31461026d5780636f32b8721461028257600080fd5b80631d7a74a0116101605780631d7a74a0146101ed57806321df0da7146102005780635246492f1461024757600080fd5b806301ffc9a71461017c578063181f5a77146101a4575b600080fd5b61018f61018a366004611ffb565b6103fa565b60405190151581526020015b60405180910390f35b6101e06040518060400160405280601781526020017f4275726e4d696e74546f6b656e506f6f6c20312e322e3000000000000000000081525081565b60405161019b91906120a1565b61018f6101fb3660046120dd565b610493565b7f00000000000000000000000000000000000000000000000000000000000000005b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161019b565b7f0000000000000000000000000000000000000000000000000000000000000000610222565b61028061027b366004612144565b6104a0565b005b61018f6102903660046120dd565b61051b565b6102806102a3366004612287565b610528565b6102bb6102b63660046120dd565b6105f8565b60405161019b919081516fffffffffffffffffffffffffffffffff908116825260208084015163ffffffff1690830152604080840151151590830152606080840151821690830152608092830151169181019190915260a00190565b6102806106d6565b61028061032d36600461237e565b6107d3565b61033a6109dd565b60405161019b919061240d565b60005473ffffffffffffffffffffffffffffffffffffffff16610222565b6101e06103733660046124a9565b6109ee565b61033a610c74565b61033a610c80565b6102bb6103963660046120dd565b610c8c565b6102806103a936600461258c565b610d6a565b6102806103bc366004612287565b610d7e565b7f000000000000000000000000000000000000000000000000000000000000000061018f565b6102806103f53660046120dd565b610e3d565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f317fa33400000000000000000000000000000000000000000000000000000000148061048d57507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b600061048d600783610e51565b6104a8610e83565b61051584848080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808802828101820190935287825290935087925086918291850190849080828437600092019190915250610f0692505050565b50505050565b600061048d600483610e51565b610530610e83565b6105398261051b565b61058c576040517f498f12f600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff831660048201526024015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821660009081526006602052604090206105bb90826110d1565b7f578db78e348076074dbff64a94073a83e9a65aa6766b8c75fdc89282b0e30ed682826040516105ec9291906125ec565b60405180910390a15050565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915273ffffffffffffffffffffffffffffffffffffffff8216600090815260066020908152604091829020825160a08101845281546fffffffffffffffffffffffffffffffff808216835270010000000000000000000000000000000080830463ffffffff16958401959095527401000000000000000000000000000000000000000090910460ff16151594820194909452600190910154808416606083015291909104909116608082015261048d90611280565b60015473ffffffffffffffffffffffffffffffffffffffff163314610757576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4d7573742062652070726f706f736564206f776e6572000000000000000000006044820152606401610583565b60008054337fffffffffffffffffffffffff00000000000000000000000000000000000000008083168217845560018054909116905560405173ffffffffffffffffffffffffffffffffffffffff90921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663397796f76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561083e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108629190612644565b15610899576040517fc148371500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108a233610493565b6108d8576040517f5307f5ab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108e183611332565b6040517f40c10f1900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152602482018590527f000000000000000000000000000000000000000000000000000000000000000016906340c10f1990604401600060405180830381600087803b15801561097157600080fd5b505af1158015610985573d6000803e3d6000fd5b505060405185815273ffffffffffffffffffffffffffffffffffffffff871692503391507f9d228d69b5fdb8d273a2336f8fb8612d039631024ea9bf09c424a9503aa078f09060200160405180910390a35050505050565b60606109e9600461136c565b905090565b60606109f93361051b565b610a2f576040517f5307f5ab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b877f00000000000000000000000000000000000000000000000000000000000000008015610a655750610a63600282610e51565b155b15610ab4576040517fd0d2597600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82166004820152602401610583565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663397796f76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b439190612644565b15610b7a576040517fc148371500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b8386611379565b6040517f42966c68000000000000000000000000000000000000000000000000000000008152600481018790527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906342966c6890602401600060405180830381600087803b158015610c0b57600080fd5b505af1158015610c1f573d6000803e3d6000fd5b50506040518881523392507f696de425f79f4a40bc6d2122ca50507f0efbeabbff86a84871b7196ab8ea8df7915060200160405180910390a25050604080516020810190915260008152979650505050505050565b60606109e9600761136c565b60606109e9600261136c565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915273ffffffffffffffffffffffffffffffffffffffff8216600090815260096020908152604091829020825160a08101845281546fffffffffffffffffffffffffffffffff808216835270010000000000000000000000000000000080830463ffffffff16958401959095527401000000000000000000000000000000000000000090910460ff16151594820194909452600190910154808416606083015291909104909116608082015261048d90611280565b610d72610e83565b610515848484846113b3565b610d86610e83565b610d8f82610493565b610ddd576040517f498f12f600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83166004820152602401610583565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600960205260409020610e0c90826110d1565b7fb3ba339cfbb8ef80d7a29ce5493051cb90e64fcfa85d7124efc1adfa4c68399f82826040516105ec9291906125ec565b610e45610e83565b610e4e81611963565b50565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260018301602052604081205415155b9392505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610f04576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e6572000000000000000000006044820152606401610583565b565b7f0000000000000000000000000000000000000000000000000000000000000000610f5d576040517f35f4a7b300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b8251811015610ffb576000838281518110610f7d57610f7d612661565b60200260200101519050610f9b816002611a5890919063ffffffff16565b15610fea5760405173ffffffffffffffffffffffffffffffffffffffff821681527f800671136ab6cfee9fbe5ed1fb7ca417811aca3cf864800d127b927adedf75669060200160405180910390a15b50610ff4816126bf565b9050610f60565b5060005b81518110156110cc57600082828151811061101c5761101c612661565b60200260200101519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361106057506110bc565b61106b600282611a7a565b156110ba5760405173ffffffffffffffffffffffffffffffffffffffff821681527f2640d4d76caf8bf478aabfa982fa4e1c4eb71a37f93cd15e80dbc657911546d89060200160405180910390a15b505b6110c5816126bf565b9050610fff565b505050565b81546000906110fa90700100000000000000000000000000000000900463ffffffff16426126f7565b9050801561119c5760018301548354611142916fffffffffffffffffffffffffffffffff80821692811691859170010000000000000000000000000000000090910416611a9c565b83546fffffffffffffffffffffffffffffffff919091167fffffffffffffffffffffffff0000000000000000000000000000000000000000909116177001000000000000000000000000000000004263ffffffff16021783555b602082015183546111c2916fffffffffffffffffffffffffffffffff9081169116611ac4565b83548351151574010000000000000000000000000000000000000000027fffffffffffffffffffffff00ffffffff000000000000000000000000000000009091166fffffffffffffffffffffffffffffffff92831617178455602083015160408085015183167001000000000000000000000000000000000291909216176001850155517f9ea3374b67bf275e6bb9c8ae68f9cae023e1c528b4b27e092f0bb209d3531c199061127390849061270a565b60405180910390a1505050565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915261130e82606001516fffffffffffffffffffffffffffffffff1683600001516fffffffffffffffffffffffffffffffff16846020015163ffffffff16426112f291906126f7565b85608001516fffffffffffffffffffffffffffffffff16611a9c565b6fffffffffffffffffffffffffffffffff1682525063ffffffff4216602082015290565b336000908152600960205260409020610e4e90827f0000000000000000000000000000000000000000000000000000000000000000611ada565b60606000610e7c83611e5d565b336000908152600660205260409020610e4e90827f0000000000000000000000000000000000000000000000000000000000000000611ada565b6113bb610e83565b60005b838110156116d85760008585838181106113da576113da612661565b905060a002018036038101906113f09190612746565b90508060200151156115c857805161140a90600490611a7a565b1561157b576040805160a08101825282820180516020908101516fffffffffffffffffffffffffffffffff908116845263ffffffff4281168386019081528451511515868801908152855185015184166060880190815286518901518516608089019081528a5173ffffffffffffffffffffffffffffffffffffffff1660009081526006909752958990209751885493519251151574010000000000000000000000000000000000000000027fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff939095167001000000000000000000000000000000009081027fffffffffffffffffffffffff0000000000000000000000000000000000000000909516918716919091179390931791909116929092178655905192518216029116176001909201919091558251905191517f0b594bb0555ff7b252e0c789ccc9d8903fec294172064308727d570505cee1ac9261156e92916125ec565b60405180910390a16116c7565b80516040517fd3eb6bc500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602401610583565b80516115d690600490611a58565b1561167a57805173ffffffffffffffffffffffffffffffffffffffff1660009081526006602052604080822080547fffffffffffffffffffffff00000000000000000000000000000000000000000016815560010191909155815190517f7fd064821314ad863a0714a3f1229375ace6b6427ed5544b7b2ba1c47b1b52949161156e9173ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b80516040517f498f12f600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602401610583565b506116d1816126bf565b90506113be565b5060005b8181101561195c5760008383838181106116f8576116f8612661565b905060a0020180360381019061170e9190612746565b905080602001511561189957805161172890600790611a7a565b1561157b576040805160a08101825282820180516020908101516fffffffffffffffffffffffffffffffff908116845263ffffffff4281168386019081528451511515868801908152855185015184166060880190815286518901518516608089019081528a5173ffffffffffffffffffffffffffffffffffffffff1660009081526009909752958990209751885493519251151574010000000000000000000000000000000000000000027fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff939095167001000000000000000000000000000000009081027fffffffffffffffffffffffff0000000000000000000000000000000000000000909516918716919091179390931791909116929092178655905192518216029116176001909201919091558251905191517f395b7374909d2b54e5796f53c898ebf41d767c86c78ea86519acf2b805852d889261188c92916125ec565b60405180910390a161194b565b80516118a790600790611a58565b1561167a57805173ffffffffffffffffffffffffffffffffffffffff1660009081526009602052604080822080547fffffffffffffffffffffff00000000000000000000000000000000000000000016815560010191909155815190517fcf91daec21e3510e2f2aea4b09d08c235d5c6844980be709f282ef591dbf420c9161188c9173ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b50611955816126bf565b90506116dc565b5050505050565b3373ffffffffffffffffffffffffffffffffffffffff8216036119e2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152606401610583565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b6000610e7c8373ffffffffffffffffffffffffffffffffffffffff8416611eb9565b6000610e7c8373ffffffffffffffffffffffffffffffffffffffff8416611fac565b6000611abb85611aac8486612797565b611ab690876127ae565b611ac4565b95945050505050565b6000818310611ad35781610e7c565b5090919050565b825474010000000000000000000000000000000000000000900460ff161580611b01575081155b15611b0b57505050565b825460018401546fffffffffffffffffffffffffffffffff80831692911690600090611b5190700100000000000000000000000000000000900463ffffffff16426126f7565b90508015611c115781831115611b93576040517f9725942a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001860154611bcd9083908590849070010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff16611a9c565b86547fffffffffffffffffffffffff00000000ffffffffffffffffffffffffffffffff167001000000000000000000000000000000004263ffffffff160217875592505b84821015611cc85773ffffffffffffffffffffffffffffffffffffffff8416611c70576040517ff94ebcd10000000000000000000000000000000000000000000000000000000081526004810183905260248101869052604401610583565b6040517f1a76572a000000000000000000000000000000000000000000000000000000008152600481018390526024810186905273ffffffffffffffffffffffffffffffffffffffff85166044820152606401610583565b84831015611ddb5760018681015470010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff16906000908290611d0c90826126f7565b611d16878a6126f7565b611d2091906127ae565b611d2a91906127c1565b905073ffffffffffffffffffffffffffffffffffffffff8616611d83576040517f15279c080000000000000000000000000000000000000000000000000000000081526004810182905260248101869052604401610583565b6040517fd0c8d23a000000000000000000000000000000000000000000000000000000008152600481018290526024810186905273ffffffffffffffffffffffffffffffffffffffff87166044820152606401610583565b611de585846126f7565b86547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff82161787556040518681529093507f1871cdf8010e63f2eb8384381a68dfa7416dc571a5517e66e88b2d2d0c0a690a9060200160405180910390a1505050505050565b606081600001805480602002602001604051908101604052809291908181526020018280548015611ead57602002820191906000526020600020905b815481526020019060010190808311611e99575b50505050509050919050565b60008181526001830160205260408120548015611fa2576000611edd6001836126f7565b8554909150600090611ef1906001906126f7565b9050818114611f56576000866000018281548110611f1157611f11612661565b9060005260206000200154905080876000018481548110611f3457611f34612661565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611f6757611f676127fc565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061048d565b600091505061048d565b6000818152600183016020526040812054611ff35750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561048d565b50600061048d565b60006020828403121561200d57600080fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114610e7c57600080fd5b6000815180845260005b8181101561206357602081850181015186830182015201612047565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b602081526000610e7c602083018461203d565b803573ffffffffffffffffffffffffffffffffffffffff811681146120d857600080fd5b919050565b6000602082840312156120ef57600080fd5b610e7c826120b4565b60008083601f84011261210a57600080fd5b50813567ffffffffffffffff81111561212257600080fd5b6020830191508360208260051b850101111561213d57600080fd5b9250929050565b6000806000806040858703121561215a57600080fd5b843567ffffffffffffffff8082111561217257600080fd5b61217e888389016120f8565b9096509450602087013591508082111561219757600080fd5b506121a4878288016120f8565b95989497509550505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715612202576122026121b0565b60405290565b8015158114610e4e57600080fd5b80356fffffffffffffffffffffffffffffffff811681146120d857600080fd5b60006060828403121561224857600080fd5b6122506121df565b9050813561225d81612208565b815261226b60208301612216565b602082015261227c60408301612216565b604082015292915050565b6000806080838503121561229a57600080fd5b6122a3836120b4565b91506122b28460208501612236565b90509250929050565b600082601f8301126122cc57600080fd5b813567ffffffffffffffff808211156122e7576122e76121b0565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190828211818310171561232d5761232d6121b0565b8160405283815286602085880101111561234657600080fd5b836020870160208301376000602085830101528094505050505092915050565b803567ffffffffffffffff811681146120d857600080fd5b600080600080600060a0868803121561239657600080fd5b853567ffffffffffffffff808211156123ae57600080fd5b6123ba89838a016122bb565b96506123c8602089016120b4565b9550604088013594506123dd60608901612366565b935060808801359150808211156123f357600080fd5b50612400888289016122bb565b9150509295509295909350565b6020808252825182820181905260009190848201906040850190845b8181101561245b57835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101612429565b50909695505050505050565b60008083601f84011261247957600080fd5b50813567ffffffffffffffff81111561249157600080fd5b60208301915083602082850101111561213d57600080fd5b600080600080600080600060a0888a0312156124c457600080fd5b6124cd886120b4565b9650602088013567ffffffffffffffff808211156124ea57600080fd5b6124f68b838c01612467565b909850965060408a0135955086915061251160608b01612366565b945060808a013591508082111561252757600080fd5b506125348a828b01612467565b989b979a50959850939692959293505050565b60008083601f84011261255957600080fd5b50813567ffffffffffffffff81111561257157600080fd5b60208301915083602060a08302850101111561213d57600080fd5b600080600080604085870312156125a257600080fd5b843567ffffffffffffffff808211156125ba57600080fd5b6125c688838901612547565b909650945060208701359150808211156125df57600080fd5b506121a487828801612547565b73ffffffffffffffffffffffffffffffffffffffff8316815260808101610e7c60208301848051151582526020808201516fffffffffffffffffffffffffffffffff9081169184019190915260409182015116910152565b60006020828403121561265657600080fd5b8151610e7c81612208565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036126f0576126f0612690565b5060010190565b8181038181111561048d5761048d612690565b6060810161048d82848051151582526020808201516fffffffffffffffffffffffffffffffff9081169184019190915260409182015116910152565b600060a0828403121561275857600080fd5b6127606121df565b612769836120b4565b8152602083013561277981612208565b602082015261278b8460408501612236565b60408201529392505050565b808202811582820484141761048d5761048d612690565b8082018082111561048d5761048d612690565b6000826127f7577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea164736f6c6343000815000a",
    "sourceMap": "664:1550:132:-:0;;;890:136;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;996:5;1003:9;1014:8;291:10:250;;345:1:248;291:10:250;529:59:249;;;;-1:-1:-1;;;529:59:249;;2047:2:351;529:59:249;;;2029:21:351;2086:2;2066:18;;;2059:30;2125:26;2105:18;;;2098:54;2169:18;;529:59:249;;;;;;;;;595:7;:18;;-1:-1:-1;;;;;;595:18:249;-1:-1:-1;;;;;595:18:249;;;;;;;;;;623:26;;;619:79;;659:32;678:12;659:18;:32::i;:::-;-1:-1:-1;;;;;;;;3517:28:134;;3513:64;;3554:23;;-1:-1:-1;;;3554:23:134;;;;;;;;;;;3513:64;-1:-1:-1;;;;;3583:15:134;;;;;3604:21;;;;3756:16;;:20;;;3735:41;;3782:90;;3837:16;;;3851:1;3837:16;;;;;;;;3814:51;;3855:9;3814:22;:51::i;:::-;3435:441;;;890:136:132;;;664:1550;;1482:188:249;1550:10;-1:-1:-1;;;;;1544:16:249;;;1536:52;;;;-1:-1:-1;;;1536:52:249;;2400:2:351;1536:52:249;;;2382:21:351;2439:2;2419:18;;;2412:30;2478:25;2458:18;;;2451:53;2521:18;;1536:52:249;2198:347:351;1536:52:249;1595:14;:19;;-1:-1:-1;;;;;;1595:19:249;-1:-1:-1;;;;;1595:19:249;;;;;;;;;-1:-1:-1;1653:7:249;;1626:39;;1595:19;;1653:7;;1626:39;;-1:-1:-1;1626:39:249;1482:188;:::o;11847:561:134:-;11948:18;;11943:53;;11975:21;;-1:-1:-1;;;11975:21:134;;;;;;;;;;;11943:53;12008:9;12003:179;12027:7;:14;12023:1;:18;12003:179;;;12056:16;12075:7;12083:1;12075:10;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;12097:28:134;:11;12075:10;12097:18;:28::i;:::-;12093:83;;;12142:25;;-1:-1:-1;;;;;2846:32:351;;2828:51;;12142:25:134;;2816:2:351;2801:18;12142:25:134;;;;;;;12093:83;-1:-1:-1;12043:3:134;;;:::i;:::-;;;12003:179;;;;12192:9;12187:217;12211:4;:11;12207:1;:15;12187:217;;;12237:13;12253:4;12258:1;12253:7;;;;;;;;:::i;:::-;;;;;;;12237:23;;12289:1;-1:-1:-1;;;;;12272:19:134;:5;-1:-1:-1;;;;;12272:19:134;;12268:52;;12303:8;;;12268:52;12331:22;:11;12347:5;12331:15;:22::i;:::-;12327:71;;;12370:19;;-1:-1:-1;;;;;2846:32:351;;2828:51;;12370:19:134;;2816:2:351;2801:18;12370:19:134;;;;;;;12327:71;12229:175;12187:217;12224:3;;;:::i;:::-;;;12187:217;;;;11847:561;;:::o;8071:150:346:-;8144:4;8163:53;8171:3;-1:-1:-1;;;;;8191:23:346;;8163:7;:53::i;:::-;8156:60;;8071:150;;;;;:::o;7773:144::-;7843:4;7862:50;7867:3;-1:-1:-1;;;;;7887:23:346;;7862:4;:50::i;2660:1242::-;2726:4;2855:19;;;:12;;;:19;;;;;;2885:15;;2881:1017;;3224:21;3248:14;3261:1;3248:10;:14;:::i;:::-;3290:18;;3224:38;;-1:-1:-1;3270:17:346;;3290:22;;3311:1;;3290:22;:::i;:::-;3270:42;;3338:13;3325:9;:26;3321:352;;3363:17;3383:3;:11;;3395:9;3383:22;;;;;;;;:::i;:::-;;;;;;;;;3363:42;;3518:9;3489:3;:11;;3501:13;3489:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3585:23;;;:12;;;:23;;;;;:36;;;3321:352;3739:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3819:3;:12;;:19;3832:5;3819:19;;;;;;;;;;;3812:26;;;3854:4;3847:11;;;;;;;2881:1017;3886:5;3879:12;;;;;2152:354;2215:4;4067:19;;;:12;;;:19;;;;;;2227:275;;-1:-1:-1;2263:23:346;;;;;;;;:11;:23;;;;;;;;;;;;;2425:18;;2403:19;;;:12;;;:19;;;;;;:40;;;;2451:11;;2227:275;-1:-1:-1;2490:5:346;2483:12;;14:147:351;-1:-1:-1;;;;;105:31:351;;95:42;;85:70;;151:1;148;141:12;85:70;14:147;:::o;166:127::-;227:10;222:3;218:20;215:1;208:31;258:4;255:1;248:15;282:4;279:1;272:15;298:154;377:13;;399:47;377:13;399:47;:::i;:::-;298:154;;;:::o;457:1383::-;595:6;603;611;664:2;652:9;643:7;639:23;635:32;632:52;;;680:1;677;670:12;632:52;712:9;706:16;731:47;772:5;731:47;:::i;:::-;821:2;852:18;;;846:25;797:5;;-1:-1:-1;821:2:351;-1:-1:-1;;;;;920:14:351;;;917:34;;;947:1;944;937:12;917:34;985:6;974:9;970:22;960:32;;1030:7;1023:4;1019:2;1015:13;1011:27;1001:55;;1052:1;1049;1042:12;1001:55;1081:2;1075:9;1103:2;1099;1096:10;1093:36;;;1109:18;;:::i;:::-;1155:2;1152:1;1148:10;1187:2;1181:9;1250:2;1246:7;1241:2;1237;1233:11;1229:25;1221:6;1217:38;1305:6;1293:10;1290:22;1285:2;1273:10;1270:18;1267:46;1264:72;;;1316:18;;:::i;:::-;1352:2;1345:22;1402:18;;;1436:15;;;;-1:-1:-1;1478:11:351;;;1474:20;;;1506:19;;;1503:39;;;1538:1;1535;1528:12;1503:39;1562:11;;;;1582:159;1598:6;1593:3;1590:15;1582:159;;;1664:34;1694:3;1664:34;:::i;:::-;1652:47;;1615:12;;;;1719;;;;1582:159;;;1760:6;1750:16;;;;;;;;1785:49;1830:2;1819:9;1815:18;1785:49;:::i;:::-;1775:59;;457:1383;;;;;:::o;2550:127::-;2611:10;2606:3;2602:20;2599:1;2592:31;2642:4;2639:1;2632:15;2666:4;2663:1;2656:15;2890:127;2951:10;2946:3;2942:20;2939:1;2932:31;2982:4;2979:1;2972:15;3006:4;3003:1;2996:15;3022:135;3061:3;3082:17;;;3079:43;;3102:18;;:::i;:::-;-1:-1:-1;3149:1:351;3138:13;;3022:135::o;3162:128::-;3229:9;;;3250:11;;;3247:37;;;3264:18;;:::i;3295:127::-;3356:10;3351:3;3347:20;3344:1;3337:31;3387:4;3384:1;3377:15;3411:4;3408:1;3401:15;3295:127;664:1550:132;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101775760003560e01c80638627fad6116100d8578063a7cd63b71161008c578063d612b94511610066578063d612b945146103ae578063e0351e13146103c1578063f2fde38b146103e757600080fd5b8063a7cd63b714610380578063b3a3fb4114610388578063c49907b51461039b57600080fd5b80638da5cb5b116100bd5780638da5cb5b146103475780639687544514610365578063a40e69c71461037857600080fd5b80638627fad61461031f578063873813141461033257600080fd5b806354c8a4f31161012f5780637448b3c7116101145780637448b3c7146102955780637787e7ab146102a857806379ba50971461031757600080fd5b806354c8a4f31461026d5780636f32b8721461028257600080fd5b80631d7a74a0116101605780631d7a74a0146101ed57806321df0da7146102005780635246492f1461024757600080fd5b806301ffc9a71461017c578063181f5a77146101a4575b600080fd5b61018f61018a366004611ffb565b6103fa565b60405190151581526020015b60405180910390f35b6101e06040518060400160405280601781526020017f4275726e4d696e74546f6b656e506f6f6c20312e322e3000000000000000000081525081565b60405161019b91906120a1565b61018f6101fb3660046120dd565b610493565b7f00000000000000000000000000000000000000000000000000000000000000005b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161019b565b7f0000000000000000000000000000000000000000000000000000000000000000610222565b61028061027b366004612144565b6104a0565b005b61018f6102903660046120dd565b61051b565b6102806102a3366004612287565b610528565b6102bb6102b63660046120dd565b6105f8565b60405161019b919081516fffffffffffffffffffffffffffffffff908116825260208084015163ffffffff1690830152604080840151151590830152606080840151821690830152608092830151169181019190915260a00190565b6102806106d6565b61028061032d36600461237e565b6107d3565b61033a6109dd565b60405161019b919061240d565b60005473ffffffffffffffffffffffffffffffffffffffff16610222565b6101e06103733660046124a9565b6109ee565b61033a610c74565b61033a610c80565b6102bb6103963660046120dd565b610c8c565b6102806103a936600461258c565b610d6a565b6102806103bc366004612287565b610d7e565b7f000000000000000000000000000000000000000000000000000000000000000061018f565b6102806103f53660046120dd565b610e3d565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f317fa33400000000000000000000000000000000000000000000000000000000148061048d57507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b600061048d600783610e51565b6104a8610e83565b61051584848080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808802828101820190935287825290935087925086918291850190849080828437600092019190915250610f0692505050565b50505050565b600061048d600483610e51565b610530610e83565b6105398261051b565b61058c576040517f498f12f600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff831660048201526024015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821660009081526006602052604090206105bb90826110d1565b7f578db78e348076074dbff64a94073a83e9a65aa6766b8c75fdc89282b0e30ed682826040516105ec9291906125ec565b60405180910390a15050565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915273ffffffffffffffffffffffffffffffffffffffff8216600090815260066020908152604091829020825160a08101845281546fffffffffffffffffffffffffffffffff808216835270010000000000000000000000000000000080830463ffffffff16958401959095527401000000000000000000000000000000000000000090910460ff16151594820194909452600190910154808416606083015291909104909116608082015261048d90611280565b60015473ffffffffffffffffffffffffffffffffffffffff163314610757576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4d7573742062652070726f706f736564206f776e6572000000000000000000006044820152606401610583565b60008054337fffffffffffffffffffffffff00000000000000000000000000000000000000008083168217845560018054909116905560405173ffffffffffffffffffffffffffffffffffffffff90921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663397796f76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561083e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108629190612644565b15610899576040517fc148371500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108a233610493565b6108d8576040517f5307f5ab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108e183611332565b6040517f40c10f1900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152602482018590527f000000000000000000000000000000000000000000000000000000000000000016906340c10f1990604401600060405180830381600087803b15801561097157600080fd5b505af1158015610985573d6000803e3d6000fd5b505060405185815273ffffffffffffffffffffffffffffffffffffffff871692503391507f9d228d69b5fdb8d273a2336f8fb8612d039631024ea9bf09c424a9503aa078f09060200160405180910390a35050505050565b60606109e9600461136c565b905090565b60606109f93361051b565b610a2f576040517f5307f5ab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b877f00000000000000000000000000000000000000000000000000000000000000008015610a655750610a63600282610e51565b155b15610ab4576040517fd0d2597600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82166004820152602401610583565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663397796f76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b439190612644565b15610b7a576040517fc148371500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b8386611379565b6040517f42966c68000000000000000000000000000000000000000000000000000000008152600481018790527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906342966c6890602401600060405180830381600087803b158015610c0b57600080fd5b505af1158015610c1f573d6000803e3d6000fd5b50506040518881523392507f696de425f79f4a40bc6d2122ca50507f0efbeabbff86a84871b7196ab8ea8df7915060200160405180910390a25050604080516020810190915260008152979650505050505050565b60606109e9600761136c565b60606109e9600261136c565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915273ffffffffffffffffffffffffffffffffffffffff8216600090815260096020908152604091829020825160a08101845281546fffffffffffffffffffffffffffffffff808216835270010000000000000000000000000000000080830463ffffffff16958401959095527401000000000000000000000000000000000000000090910460ff16151594820194909452600190910154808416606083015291909104909116608082015261048d90611280565b610d72610e83565b610515848484846113b3565b610d86610e83565b610d8f82610493565b610ddd576040517f498f12f600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83166004820152602401610583565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600960205260409020610e0c90826110d1565b7fb3ba339cfbb8ef80d7a29ce5493051cb90e64fcfa85d7124efc1adfa4c68399f82826040516105ec9291906125ec565b610e45610e83565b610e4e81611963565b50565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260018301602052604081205415155b9392505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610f04576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e6572000000000000000000006044820152606401610583565b565b7f0000000000000000000000000000000000000000000000000000000000000000610f5d576040517f35f4a7b300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b8251811015610ffb576000838281518110610f7d57610f7d612661565b60200260200101519050610f9b816002611a5890919063ffffffff16565b15610fea5760405173ffffffffffffffffffffffffffffffffffffffff821681527f800671136ab6cfee9fbe5ed1fb7ca417811aca3cf864800d127b927adedf75669060200160405180910390a15b50610ff4816126bf565b9050610f60565b5060005b81518110156110cc57600082828151811061101c5761101c612661565b60200260200101519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361106057506110bc565b61106b600282611a7a565b156110ba5760405173ffffffffffffffffffffffffffffffffffffffff821681527f2640d4d76caf8bf478aabfa982fa4e1c4eb71a37f93cd15e80dbc657911546d89060200160405180910390a15b505b6110c5816126bf565b9050610fff565b505050565b81546000906110fa90700100000000000000000000000000000000900463ffffffff16426126f7565b9050801561119c5760018301548354611142916fffffffffffffffffffffffffffffffff80821692811691859170010000000000000000000000000000000090910416611a9c565b83546fffffffffffffffffffffffffffffffff919091167fffffffffffffffffffffffff0000000000000000000000000000000000000000909116177001000000000000000000000000000000004263ffffffff16021783555b602082015183546111c2916fffffffffffffffffffffffffffffffff9081169116611ac4565b83548351151574010000000000000000000000000000000000000000027fffffffffffffffffffffff00ffffffff000000000000000000000000000000009091166fffffffffffffffffffffffffffffffff92831617178455602083015160408085015183167001000000000000000000000000000000000291909216176001850155517f9ea3374b67bf275e6bb9c8ae68f9cae023e1c528b4b27e092f0bb209d3531c199061127390849061270a565b60405180910390a1505050565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915261130e82606001516fffffffffffffffffffffffffffffffff1683600001516fffffffffffffffffffffffffffffffff16846020015163ffffffff16426112f291906126f7565b85608001516fffffffffffffffffffffffffffffffff16611a9c565b6fffffffffffffffffffffffffffffffff1682525063ffffffff4216602082015290565b336000908152600960205260409020610e4e90827f0000000000000000000000000000000000000000000000000000000000000000611ada565b60606000610e7c83611e5d565b336000908152600660205260409020610e4e90827f0000000000000000000000000000000000000000000000000000000000000000611ada565b6113bb610e83565b60005b838110156116d85760008585838181106113da576113da612661565b905060a002018036038101906113f09190612746565b90508060200151156115c857805161140a90600490611a7a565b1561157b576040805160a08101825282820180516020908101516fffffffffffffffffffffffffffffffff908116845263ffffffff4281168386019081528451511515868801908152855185015184166060880190815286518901518516608089019081528a5173ffffffffffffffffffffffffffffffffffffffff1660009081526006909752958990209751885493519251151574010000000000000000000000000000000000000000027fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff939095167001000000000000000000000000000000009081027fffffffffffffffffffffffff0000000000000000000000000000000000000000909516918716919091179390931791909116929092178655905192518216029116176001909201919091558251905191517f0b594bb0555ff7b252e0c789ccc9d8903fec294172064308727d570505cee1ac9261156e92916125ec565b60405180910390a16116c7565b80516040517fd3eb6bc500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602401610583565b80516115d690600490611a58565b1561167a57805173ffffffffffffffffffffffffffffffffffffffff1660009081526006602052604080822080547fffffffffffffffffffffff00000000000000000000000000000000000000000016815560010191909155815190517f7fd064821314ad863a0714a3f1229375ace6b6427ed5544b7b2ba1c47b1b52949161156e9173ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b80516040517f498f12f600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602401610583565b506116d1816126bf565b90506113be565b5060005b8181101561195c5760008383838181106116f8576116f8612661565b905060a0020180360381019061170e9190612746565b905080602001511561189957805161172890600790611a7a565b1561157b576040805160a08101825282820180516020908101516fffffffffffffffffffffffffffffffff908116845263ffffffff4281168386019081528451511515868801908152855185015184166060880190815286518901518516608089019081528a5173ffffffffffffffffffffffffffffffffffffffff1660009081526009909752958990209751885493519251151574010000000000000000000000000000000000000000027fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff939095167001000000000000000000000000000000009081027fffffffffffffffffffffffff0000000000000000000000000000000000000000909516918716919091179390931791909116929092178655905192518216029116176001909201919091558251905191517f395b7374909d2b54e5796f53c898ebf41d767c86c78ea86519acf2b805852d889261188c92916125ec565b60405180910390a161194b565b80516118a790600790611a58565b1561167a57805173ffffffffffffffffffffffffffffffffffffffff1660009081526009602052604080822080547fffffffffffffffffffffff00000000000000000000000000000000000000000016815560010191909155815190517fcf91daec21e3510e2f2aea4b09d08c235d5c6844980be709f282ef591dbf420c9161188c9173ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b50611955816126bf565b90506116dc565b5050505050565b3373ffffffffffffffffffffffffffffffffffffffff8216036119e2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152606401610583565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b6000610e7c8373ffffffffffffffffffffffffffffffffffffffff8416611eb9565b6000610e7c8373ffffffffffffffffffffffffffffffffffffffff8416611fac565b6000611abb85611aac8486612797565b611ab690876127ae565b611ac4565b95945050505050565b6000818310611ad35781610e7c565b5090919050565b825474010000000000000000000000000000000000000000900460ff161580611b01575081155b15611b0b57505050565b825460018401546fffffffffffffffffffffffffffffffff80831692911690600090611b5190700100000000000000000000000000000000900463ffffffff16426126f7565b90508015611c115781831115611b93576040517f9725942a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001860154611bcd9083908590849070010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff16611a9c565b86547fffffffffffffffffffffffff00000000ffffffffffffffffffffffffffffffff167001000000000000000000000000000000004263ffffffff160217875592505b84821015611cc85773ffffffffffffffffffffffffffffffffffffffff8416611c70576040517ff94ebcd10000000000000000000000000000000000000000000000000000000081526004810183905260248101869052604401610583565b6040517f1a76572a000000000000000000000000000000000000000000000000000000008152600481018390526024810186905273ffffffffffffffffffffffffffffffffffffffff85166044820152606401610583565b84831015611ddb5760018681015470010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff16906000908290611d0c90826126f7565b611d16878a6126f7565b611d2091906127ae565b611d2a91906127c1565b905073ffffffffffffffffffffffffffffffffffffffff8616611d83576040517f15279c080000000000000000000000000000000000000000000000000000000081526004810182905260248101869052604401610583565b6040517fd0c8d23a000000000000000000000000000000000000000000000000000000008152600481018290526024810186905273ffffffffffffffffffffffffffffffffffffffff87166044820152606401610583565b611de585846126f7565b86547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff82161787556040518681529093507f1871cdf8010e63f2eb8384381a68dfa7416dc571a5517e66e88b2d2d0c0a690a9060200160405180910390a1505050505050565b606081600001805480602002602001604051908101604052809291908181526020018280548015611ead57602002820191906000526020600020905b815481526020019060010190808311611e99575b50505050509050919050565b60008181526001830160205260408120548015611fa2576000611edd6001836126f7565b8554909150600090611ef1906001906126f7565b9050818114611f56576000866000018281548110611f1157611f11612661565b9060005260206000200154905080876000018481548110611f3457611f34612661565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611f6757611f676127fc565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061048d565b600091505061048d565b6000818152600183016020526040812054611ff35750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561048d565b50600061048d565b60006020828403121561200d57600080fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114610e7c57600080fd5b6000815180845260005b8181101561206357602081850181015186830182015201612047565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b602081526000610e7c602083018461203d565b803573ffffffffffffffffffffffffffffffffffffffff811681146120d857600080fd5b919050565b6000602082840312156120ef57600080fd5b610e7c826120b4565b60008083601f84011261210a57600080fd5b50813567ffffffffffffffff81111561212257600080fd5b6020830191508360208260051b850101111561213d57600080fd5b9250929050565b6000806000806040858703121561215a57600080fd5b843567ffffffffffffffff8082111561217257600080fd5b61217e888389016120f8565b9096509450602087013591508082111561219757600080fd5b506121a4878288016120f8565b95989497509550505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715612202576122026121b0565b60405290565b8015158114610e4e57600080fd5b80356fffffffffffffffffffffffffffffffff811681146120d857600080fd5b60006060828403121561224857600080fd5b6122506121df565b9050813561225d81612208565b815261226b60208301612216565b602082015261227c60408301612216565b604082015292915050565b6000806080838503121561229a57600080fd5b6122a3836120b4565b91506122b28460208501612236565b90509250929050565b600082601f8301126122cc57600080fd5b813567ffffffffffffffff808211156122e7576122e76121b0565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190828211818310171561232d5761232d6121b0565b8160405283815286602085880101111561234657600080fd5b836020870160208301376000602085830101528094505050505092915050565b803567ffffffffffffffff811681146120d857600080fd5b600080600080600060a0868803121561239657600080fd5b853567ffffffffffffffff808211156123ae57600080fd5b6123ba89838a016122bb565b96506123c8602089016120b4565b9550604088013594506123dd60608901612366565b935060808801359150808211156123f357600080fd5b50612400888289016122bb565b9150509295509295909350565b6020808252825182820181905260009190848201906040850190845b8181101561245b57835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101612429565b50909695505050505050565b60008083601f84011261247957600080fd5b50813567ffffffffffffffff81111561249157600080fd5b60208301915083602082850101111561213d57600080fd5b600080600080600080600060a0888a0312156124c457600080fd5b6124cd886120b4565b9650602088013567ffffffffffffffff808211156124ea57600080fd5b6124f68b838c01612467565b909850965060408a0135955086915061251160608b01612366565b945060808a013591508082111561252757600080fd5b506125348a828b01612467565b989b979a50959850939692959293505050565b60008083601f84011261255957600080fd5b50813567ffffffffffffffff81111561257157600080fd5b60208301915083602060a08302850101111561213d57600080fd5b600080600080604085870312156125a257600080fd5b843567ffffffffffffffff808211156125ba57600080fd5b6125c688838901612547565b909650945060208701359150808211156125df57600080fd5b506121a487828801612547565b73ffffffffffffffffffffffffffffffffffffffff8316815260808101610e7c60208301848051151582526020808201516fffffffffffffffffffffffffffffffff9081169184019190915260409182015116910152565b60006020828403121561265657600080fd5b8151610e7c81612208565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036126f0576126f0612690565b5060010190565b8181038181111561048d5761048d612690565b6060810161048d82848051151582526020808201516fffffffffffffffffffffffffffffffff9081169184019190915260409182015116910152565b600060a0828403121561275857600080fd5b6127606121df565b612769836120b4565b8152602083013561277981612208565b602082015261278b8460408501612236565b60408201529392505050565b808202811582820484141761048d5761048d612690565b8082018082111561048d5761048d612690565b6000826127f7577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea164736f6c6343000815000a",
    "sourceMap": "664:1550:132:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4197:191:134;;;;;;:::i;:::-;;:::i;:::-;;;516:14:351;;509:22;491:41;;479:2;464:18;4197:191:134;;;;;;;;811:74:132;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5014:109:134:-;;;;;;:::i;:::-;;:::i;4078:89::-;4155:7;4078:89;;;1840:42:351;1828:55;;;1810:74;;1798:2;1783:18;4078:89:134;1647:243:351;3960:90:134;4035:10;3960:90;;11597:151;;;;;;:::i;:::-;;:::i;:::-;;4755:105;;;;;;:::i;:::-;;:::i;9267:274::-;;;;;;:::i;:::-;;:::i;8674:181::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;5050:13:351;;4985:34;5046:22;;;5028:41;;5129:4;5117:17;;;5111:24;5137:10;5107:41;5085:20;;;5078:71;5219:4;5207:17;;;5201:24;5194:32;5187:40;5165:20;;;5158:70;5288:4;5276:17;;;5270:24;5266:33;;5244:20;;;5237:63;5360:4;5348:17;;;5342:24;5338:33;5316:20;;;5309:63;;;;4962:3;4947:19;;4768:610;1001:265:249;;;:::i;1894:318:132:-;;;;;;:::i;:::-;;:::i;5193:97:134:-;;;:::i;:::-;;;;;;;:::i;1317:81:249:-;1364:7;1386;;;1317:81;;1246:372:132;;;;;;:::i;:::-;;:::i;5361:99:134:-;;;:::i;11287:103::-;;;:::i;8978:185::-;;;;;;:::i;:::-;;:::i;5726:163::-;;;;;;:::i;:::-;;:::i;9646:283::-;;;;;;:::i;:::-;;:::i;11108:96::-;11181:18;11108:96;;811:98:249;;;;;;:::i;:::-;;:::i;4197:191:134:-;4282:4;4301:38;;;4316:23;4301:38;;:82;;-1:-1:-1;4343:40:134;;;4358:25;4343:40;4301:82;4294:89;4197:191;-1:-1:-1;;4197:191:134:o;5014:109::-;5071:4;5090:28;:10;5110:7;5090:19;:28::i;11597:151::-;1941:20:249;:18;:20::i;:::-;11706:37:134::1;11729:7;;11706:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;11706:37:134::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;;;;;;-1:-1:-1;11738:4:134;;-1:-1:-1;11738:4:134;;;;11706:37;::::1;::::0;11738:4;;11706:37;11738:4;11706:37;::::1;;::::0;::::1;::::0;;;;-1:-1:-1;11706:22:134::1;::::0;-1:-1:-1;;;11706:37:134:i:1;:::-;11597:151:::0;;;;:::o;4755:105::-;4810:4;4829:26;:9;4848:6;4829:18;:26::i;9267:274::-;1941:20:249;:18;:20::i;:::-;9383:16:134::1;9392:6;9383:8;:16::i;:::-;9378:53;;9408:23;::::0;::::1;::::0;;1840:42:351;1828:55;;9408:23:134::1;::::0;::::1;1810:74:351::0;1783:18;;9408:23:134::1;;;;;;;;9378:53;9437:26;::::0;::::1;;::::0;;;:18:::1;:26;::::0;;;;:56:::1;::::0;9486:6;9437:48:::1;:56::i;:::-;9504:32;9521:6;9529;9504:32;;;;;;;:::i;:::-;;;;;;;;9267:274:::0;;:::o;8674:181::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8797:26:134;;;;;;;:18;:26;;;;;;;;;:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:53;;:51;:53::i;1001:265:249:-;1074:14;;;;1060:10;:28;1052:63;;;;;;;11481:2:351;1052:63:249;;;11463:21:351;11520:2;11500:18;;;11493:30;11559:24;11539:18;;;11532:52;11601:18;;1052:63:249;11279:346:351;1052:63:249;1122:16;1141:7;;1164:10;1154:20;;;;;;;;-1:-1:-1;1180:27:249;;;;;;;1219:42;;1141:7;;;;;1164:10;;1141:7;;1219:42;;;1046:220;1001:265::o;1894:318:132:-;12502:10:134;12497:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12493:54;;;12533:14;;;;;;;;;;;;;;12493:54;10567:21:::1;10577:10;10567:9;:21::i;:::-;10562:53;;10597:18;;;;;;;;;;;;;;10562:53;2067:32:132::2;2092:6;2067:24;:32::i;:::-;2105:55;::::0;;;;:37:::2;12072:55:351::0;;;2105::132::2;::::0;::::2;12054:74:351::0;12144:18;;;12137:34;;;2128:7:132::2;2105:37;::::0;::::2;::::0;12027:18:351;;2105:55:132::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;2171:36:132::2;::::0;12328:25:351;;;2171:36:132::2;::::0;::::2;::::0;-1:-1:-1;2178:10:132::2;::::0;-1:-1:-1;2171:36:132::2;::::0;12316:2:351;12301:18;2171:36:132::2;;;;;;;1894:318:::0;;;;;:::o;5193:97:134:-;5236:16;5267:18;:9;:16;:18::i;:::-;5260:25;;5193:97;:::o;1246:372:132:-;1459:12;10325:20:134;10334:10;10325:8;:20::i;:::-;10320:52;;10354:18;;;;;;;;;;;;;;10320:52;1422:14:132::1;10896:18:134;:51;;;;-1:-1:-1::0;10919:28:134::1;:11;10940:6:::0;10919:20:::1;:28::i;:::-;10918:29;10896:51;10892:88;;;10956:24;::::0;::::1;::::0;;1840:42:351;1828:55;;10956:24:134::1;::::0;::::1;1810:74:351::0;1783:18;;10956:24:134::1;1647:243:351::0;10892:88:134::1;12502:10:::2;12497:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12493:54;;;12533:14;;;;;;;;;;;;;;12493:54;1479:31:132::3;1503:6;1479:23;:31::i;:::-;1516:45;::::0;;;;::::3;::::0;::::3;12328:25:351::0;;;1539:7:132::3;1516:37;;::::0;::::3;::::0;12301:18:351;;1516:45:132::3;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;-1:-1:-1::0;;1572:26:132::3;::::0;12328:25:351;;;1579:10:132::3;::::0;-1:-1:-1;1572:26:132::3;::::0;-1:-1:-1;12316:2:351;12301:18;1572:26:132::3;;;;;;;-1:-1:-1::0;;1604:9:132::3;::::0;;::::3;::::0;::::3;::::0;;;-1:-1:-1;1604:9:132;;;1246:372;-1:-1:-1;;;;;;;1246:372:132:o;5361:99:134:-;5405:16;5436:19;:10;:17;:19::i;11287:103::-;11334:16;11365:20;:11;:18;:20::i;8978:185::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9103:28:134;;;;;;;:19;:28;;;;;;;;;:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:55;;:53;:55::i;5726:163::-;1941:20:249;:18;:20::i;:::-;5848:36:134::1;5866:7;;5875:8;;5848:17;:36::i;9646:283::-:0;1941:20:249;:18;:20::i;:::-;9764:18:134::1;9774:7;9764:9;:18::i;:::-;9759:56;;9791:24;::::0;::::1;::::0;;1840:42:351;1828:55;;9791:24:134::1;::::0;::::1;1810:74:351::0;1783:18;;9791:24:134::1;1647:243:351::0;9759:56:134::1;9821:28;::::0;::::1;;::::0;;;:19:::1;:28;::::0;;;;:58:::1;::::0;9872:6;9821:50:::1;:58::i;:::-;9890:34;9908:7;9917:6;9890:34;;;;;;;:::i;811:98:249:-:0;1941:20;:18;:20::i;:::-;882:22:::1;901:2;882:18;:22::i;:::-;811:98:::0;:::o;8294:159:346:-;8423:23;;;8374:4;4067:19;;;:12;;;:19;;;;;;:24;;8393:55;8386:62;8294:159;-1:-1:-1;;;8294:159:346:o;1715:111:249:-;1787:7;;;;1773:10;:21;1765:56;;;;;;;12566:2:351;1765:56:249;;;12548:21:351;12605:2;12585:18;;;12578:30;12644:24;12624:18;;;12617:52;12686:18;;1765:56:249;12364:346:351;1765:56:249;1715:111::o;11847:561:134:-;11948:18;11943:53;;11975:21;;;;;;;;;;;;;;11943:53;12008:9;12003:179;12027:7;:14;12023:1;:18;12003:179;;;12056:16;12075:7;12083:1;12075:10;;;;;;;;:::i;:::-;;;;;;;12056:29;;12097:28;12116:8;12097:11;:18;;:28;;;;:::i;:::-;12093:83;;;12142:25;;1840:42:351;1828:55;;1810:74;;12142:25:134;;1798:2:351;1783:18;12142:25:134;;;;;;;12093:83;-1:-1:-1;12043:3:134;;;:::i;:::-;;;12003:179;;;;12192:9;12187:217;12211:4;:11;12207:1;:15;12187:217;;;12237:13;12253:4;12258:1;12253:7;;;;;;;;:::i;:::-;;;;;;;12237:23;;12289:1;12272:19;;:5;:19;;;12268:52;;12303:8;;;12268:52;12331:22;:11;12347:5;12331:15;:22::i;:::-;12327:71;;;12370:19;;1840:42:351;1828:55;;1810:74;;12370:19:134;;1798:2:351;1783:18;12370:19:134;;;;;;;12327:71;12229:175;12187:217;12224:3;;;:::i;:::-;;;12187:217;;;;11847:561;;:::o;4939:700:125:-;5194:20;;5157:16;;5176:38;;5194:20;;;;;5176:15;:38;:::i;:::-;5157:57;-1:-1:-1;5224:13:125;;5220:193;;5290:17;;;;5309:15;;5273:77;;5290:17;;;;;5309:15;;;5326:8;;5336:13;;;;;5273:16;:77::i;:::-;5247:104;;;;;;;5360:46;;;;;;5390:15;5360:46;;;;;;5220:193;5450:15;;;;5467;;5445:38;;;;;;;5467:15;5445:4;:38::i;:::-;5419:65;;5511:16;;5490:37;;;;;;;;5419:65;;;;5490:37;;;;5553:15;;;;5590:11;;;;;5574:27;;;;5533:35;;;;5574:27;5419:65;5533:17;;5574:27;5613:21;;;;;5511:6;;5613:21;:::i;:::-;;;;;;;;5031:608;4939:700;;:::o;4289:528::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4638:99:125;4655:6;:15;;;4638:99;;4672:6;:13;;;4638:99;;4705:6;:18;;;4687:36;;:15;:36;;;;:::i;:::-;4725:6;:11;;;4638:99;;:16;:99::i;:::-;4607:136;;;;-1:-1:-1;4749:44:125;4777:15;4749:44;:18;;;:44;4607:6;4289:528::o;8415:136:134:-;8500:10;8480:31;;;;:19;:31;;;;;:66;;8521:6;8537:7;8480:40;:66::i;9627:268:346:-;9690:16;9714:22;9739:19;9747:3;9739:7;:19::i;8210:134:134:-;8293:10;8274:30;;;;:18;:30;;;;;:65;;8314:6;8330:7;8274:39;:65::i;5893:2030::-;1941:20:249;:18;:20::i;:::-;6013:9:134::1;6008:948;6028:18:::0;;::::1;6008:948;;;6061:24;6088:7;;6096:1;6088:10;;;;;;;:::i;:::-;;;;;;6061:37;;;;;;;;;;:::i;:::-;;;6110:6;:14;;;6106:844;;;6154:11:::0;;6140:26:::1;::::0;:9:::1;::::0;:13:::1;:26::i;:::-;6136:529;;;6214:307;::::0;;::::1;::::0;::::1;::::0;;6366:24;;::::1;::::0;;:33:::1;::::0;;::::1;::::0;6214:307:::1;::::0;;::::1;::::0;;::::1;6433:15;6214:307:::0;::::1;::::0;;::::1;::::0;;;6474:24;;:34;6214:307:::1;;::::0;;;;;;6311:24;;:33;::::1;::::0;6214:307;::::1;::::0;;;;;;6258:24;;:29;::::1;::::0;6214:307;::::1;::::0;;;;;;6199:11;;6180:31:::1;;-1:-1:-1::0;6180:31:134;;;:18:::1;:31:::0;;;;;;;:341;;;;;;;;::::1;;::::0;::::1;::::0;;;;::::1;::::0;;;::::1;::::0;;;;;;::::1;::::0;;;;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;;;;;;::::1;;::::0;::::1;;::::0;;;::::1;::::0;;;;6550:11;;6563:24;;6538:50;;::::1;::::0;::::1;::::0;6550:11;6538:50:::1;:::i;:::-;;;;;;;;6106:844;;6136:529;6642:11:::0;;6624:30:::1;::::0;::::1;::::0;;1840:42:351;1828:55;;;6624:30:134::1;::::0;::::1;1810:74:351::0;1783:18;;6624:30:134::1;1647:243:351::0;6106:844:134::1;6710:11:::0;;6693:29:::1;::::0;:9:::1;::::0;:16:::1;:29::i;:::-;6689:253;;;6762:11:::0;;6743:31:::1;;;::::0;;;:18:::1;:31;::::0;;;;;6736:38;;;;;;;::::1;::::0;;;;6805:11;;6791:26;;::::1;::::0;::::1;::::0;1840:42:351;1828:55;;;;1810:74;;1798:2;1783:18;;1647:243;6689:253:134::1;6919:11:::0;;6903:28:::1;::::0;::::1;::::0;;1840:42:351;1828:55;;;6903:28:134::1;::::0;::::1;1810:74:351::0;1783:18;;6903:28:134::1;1647:243:351::0;6689:253:134::1;-1:-1:-1::0;6048:3:134::1;::::0;::::1;:::i;:::-;;;6008:948;;;;6967:9;6962:957;6982:19:::0;;::::1;6962:957;;;7016:24;7043:8;;7052:1;7043:11;;;;;;;:::i;:::-;;;;;;7016:38;;;;;;;;;;:::i;:::-;;;7066:6;:14;;;7062:851;;;7111:11:::0;;7096:27:::1;::::0;:10:::1;::::0;:14:::1;:27::i;:::-;7092:532;;;7172:307;::::0;;::::1;::::0;::::1;::::0;;7324:24;;::::1;::::0;;:33:::1;::::0;;::::1;::::0;7172:307:::1;::::0;;::::1;::::0;;::::1;7391:15;7172:307:::0;::::1;::::0;;::::1;::::0;;;7432:24;;:34;7172:307:::1;;::::0;;;;;;7269:24;;:33;::::1;::::0;7172:307;::::1;::::0;;;;;;7216:24;;:29;::::1;::::0;7172:307;::::1;::::0;;;;;;7157:11;;7137:32:::1;;-1:-1:-1::0;7137:32:134;;;:19:::1;:32:::0;;;;;;;:342;;;;;;;;::::1;;::::0;::::1;::::0;;;;::::1;::::0;;;::::1;::::0;;;;;;::::1;::::0;;;;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;;;;;;::::1;;::::0;::::1;;::::0;;;::::1;::::0;;;;7509:11;;7522:24;;7496:51;;::::1;::::0;::::1;::::0;7509:11;7496:51:::1;:::i;:::-;;;;;;;;7062:851;;;7670:11:::0;;7652:30:::1;::::0;:10:::1;::::0;:17:::1;:30::i;:::-;7648:257;;;7723:11:::0;;7703:32:::1;;;::::0;;;:19:::1;:32;::::0;;;;;7696:39;;;;;;;::::1;::::0;;;;7767:11;;7752:27;;::::1;::::0;::::1;::::0;1840:42:351;1828:55;;;;1810:74;;1798:2;1783:18;;1647:243;7648:257:134::1;-1:-1:-1::0;7003:3:134::1;::::0;::::1;:::i;:::-;;;6962:957;;;;5893:2030:::0;;;;:::o;1482:188:249:-;1550:10;1544:16;;;;1536:52;;;;;;;14388:2:351;1536:52:249;;;14370:21:351;14427:2;14407:18;;;14400:30;14466:25;14446:18;;;14439:53;14509:18;;1536:52:249;14186:347:351;1536:52:249;1595:14;:19;;;;;;;;;;;;;;-1:-1:-1;1653:7:249;;1626:39;;1595:19;;1653:7;;1626:39;;-1:-1:-1;1626:39:249;1482:188;:::o;8071:150:346:-;8144:4;8163:53;8171:3;8191:23;;;8163:7;:53::i;7773:144::-;7843:4;7862:50;7867:3;7887:23;;;7862:4;:50::i;5909:201:125:-;6043:7;6065:40;6070:8;6089:15;6100:4;6089:8;:15;:::i;:::-;6080:24;;:6;:24;:::i;:::-;6065:4;:40::i;:::-;6058:47;5909:201;-1:-1:-1;;;;;5909:201:125:o;6238:99::-;6297:7;6323:1;6319;:5;:13;;6331:1;6319:13;;;-1:-1:-1;6327:1:125;;6238:99;-1:-1:-1;6238:99:125:o;2376:1790::-;2594:18;;;;;;;2593:19;;:41;;-1:-1:-1;2616:18:125;;2593:41;2589:68;;;2376:1790;;;:::o;2589:68::-;2680:15;;;2720:17;;;2680:15;;;;;2720:17;;;2663:14;;2762:38;;2780:20;;;;;2762:15;:38;:::i;:::-;2743:57;-1:-1:-1;2811:13:125;;2807:271;;2847:8;2838:6;:17;2834:48;;;2864:18;;;;;;;;;;;;;;2834:48;3002:13;;;;2957:59;;2974:8;;2984:6;;2992:8;;3002:13;;;;;2957:16;:59::i;:::-;3025:46;;;;;3055:15;3025:46;;;;;;2948:68;-1:-1:-1;2807:271:125;3099:13;3088:8;:24;3084:302;;;3208:26;;;3204:97;;3243:58;;;;;;;;15015:25:351;;;15056:18;;;15049:34;;;14988:18;;3243:58:125;14841:248:351;3204:97:125;3316:63;;;;;;;;15296:25:351;;;15337:18;;;15330:34;;;15412:42;15400:55;;15380:18;;;15373:83;15269:18;;3316:63:125;15094:368:351;3084:302:125;3404:13;3395:6;:22;3391:594;;;3442:13;;;;;;;;;;;3427:12;;3442:13;;3781:8;;3442:13;3781:8;:::i;:::-;3754:22;3770:6;3754:13;:22;:::i;:::-;3753:37;;;;:::i;:::-;3752:46;;;;:::i;:::-;3725:73;-1:-1:-1;3811:26:125;;;3807:95;;3846:56;;;;;;;;15015:25:351;;;15056:18;;;15049:34;;;14988:18;;3846:56:125;14841:248:351;3807:95:125;3917:61;;;;;;;;15296:25:351;;;15337:18;;;15330:34;;;15412:42;15400:55;;15380:18;;;15373:83;15269:18;;3917:61:125;15094:368:351;3391:594:125;3990:23;4000:13;3990:23;;:::i;:::-;4088:33;;;;;;;;;;4132:29;;12328:25:351;;;4088:33:125;;-1:-1:-1;4132:29:125;;12316:2:351;12301:18;4132:29:125;;;;;;;2478:1688;;;2376:1790;;;:::o;5224:103:346:-;5280:16;5311:3;:11;;5304:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5224:103;;;:::o;2660:1242::-;2726:4;2855:19;;;:12;;;:19;;;;;;2885:15;;2881:1017;;3224:21;3248:14;3261:1;3248:10;:14;:::i;:::-;3290:18;;3224:38;;-1:-1:-1;3270:17:346;;3290:22;;3311:1;;3290:22;:::i;:::-;3270:42;;3338:13;3325:9;:26;3321:352;;3363:17;3383:3;:11;;3395:9;3383:22;;;;;;;;:::i;:::-;;;;;;;;;3363:42;;3518:9;3489:3;:11;;3501:13;3489:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3585:23;;;:12;;;:23;;;;;:36;;;3321:352;3739:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3819:3;:12;;:19;3832:5;3819:19;;;;;;;;;;;3812:26;;;3854:4;3847:11;;;;;;;2881:1017;3886:5;3879:12;;;;;2152:354;2215:4;4067:19;;;:12;;;:19;;;;;;2227:275;;-1:-1:-1;2263:23:346;;;;;;;;:11;:23;;;;;;;;;;;;;2425:18;;2403:19;;;:12;;;:19;;;;;;:40;;;;2451:11;;2227:275;-1:-1:-1;2490:5:346;2483:12;;14:332:351;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:66;223:5;219:78;212:5;209:89;199:117;;312:1;309;302:12;543:482;585:3;623:5;617:12;650:6;645:3;638:19;675:1;685:162;699:6;696:1;693:13;685:162;;;761:4;817:13;;;813:22;;807:29;789:11;;;785:20;;778:59;714:12;685:162;;;689:3;892:1;885:4;876:6;871:3;867:16;863:27;856:38;1014:4;944:66;939:2;931:6;927:15;923:88;918:3;914:98;910:109;903:116;;;543:482;;;;:::o;1030:220::-;1179:2;1168:9;1161:21;1142:4;1199:45;1240:2;1229:9;1225:18;1217:6;1199:45;:::i;1255:196::-;1323:20;;1383:42;1372:54;;1362:65;;1352:93;;1441:1;1438;1431:12;1352:93;1255:196;;;:::o;1456:186::-;1515:6;1568:2;1556:9;1547:7;1543:23;1539:32;1536:52;;;1584:1;1581;1574:12;1536:52;1607:29;1626:9;1607:29;:::i;2126:367::-;2189:8;2199:6;2253:3;2246:4;2238:6;2234:17;2230:27;2220:55;;2271:1;2268;2261:12;2220:55;-1:-1:-1;2294:20:351;;2337:18;2326:30;;2323:50;;;2369:1;2366;2359:12;2323:50;2406:4;2398:6;2394:17;2382:29;;2466:3;2459:4;2449:6;2446:1;2442:14;2434:6;2430:27;2426:38;2423:47;2420:67;;;2483:1;2480;2473:12;2420:67;2126:367;;;;;:::o;2498:773::-;2620:6;2628;2636;2644;2697:2;2685:9;2676:7;2672:23;2668:32;2665:52;;;2713:1;2710;2703:12;2665:52;2753:9;2740:23;2782:18;2823:2;2815:6;2812:14;2809:34;;;2839:1;2836;2829:12;2809:34;2878:70;2940:7;2931:6;2920:9;2916:22;2878:70;:::i;:::-;2967:8;;-1:-1:-1;2852:96:351;-1:-1:-1;3055:2:351;3040:18;;3027:32;;-1:-1:-1;3071:16:351;;;3068:36;;;3100:1;3097;3090:12;3068:36;;3139:72;3203:7;3192:8;3181:9;3177:24;3139:72;:::i;:::-;2498:773;;;;-1:-1:-1;3230:8:351;-1:-1:-1;;;;2498:773:351:o;3276:184::-;3328:77;3325:1;3318:88;3425:4;3422:1;3415:15;3449:4;3446:1;3439:15;3465:248;3532:2;3526:9;3574:4;3562:17;;3609:18;3594:34;;3630:22;;;3591:62;3588:88;;;3656:18;;:::i;:::-;3692:2;3685:22;3465:248;:::o;3718:118::-;3804:5;3797:13;3790:21;3783:5;3780:32;3770:60;;3826:1;3823;3816:12;3841:188;3909:20;;3969:34;3958:46;;3948:57;;3938:85;;4019:1;4016;4009:12;4034:423;4087:5;4135:4;4123:9;4118:3;4114:19;4110:30;4107:50;;;4153:1;4150;4143:12;4107:50;4175:17;;:::i;:::-;4166:26;;4229:9;4216:23;4248:30;4270:7;4248:30;:::i;:::-;4287:22;;4341:38;4375:2;4360:18;;4341:38;:::i;:::-;4336:2;4329:5;4325:14;4318:62;4412:38;4446:2;4435:9;4431:18;4412:38;:::i;:::-;4407:2;4400:5;4396:14;4389:62;4034:423;;;;:::o;4462:301::-;4555:6;4563;4616:3;4604:9;4595:7;4591:23;4587:33;4584:53;;;4633:1;4630;4623:12;4584:53;4656:29;4675:9;4656:29;:::i;:::-;4646:39;;4704:53;4749:7;4744:2;4733:9;4729:18;4704:53;:::i;:::-;4694:63;;4462:301;;;;;:::o;5383:777::-;5425:5;5478:3;5471:4;5463:6;5459:17;5455:27;5445:55;;5496:1;5493;5486:12;5445:55;5532:6;5519:20;5558:18;5595:2;5591;5588:10;5585:36;;;5601:18;;:::i;:::-;5735:2;5729:9;5797:4;5789:13;;5640:66;5785:22;;;5809:2;5781:31;5777:40;5765:53;;;5833:18;;;5853:22;;;5830:46;5827:72;;;5879:18;;:::i;:::-;5919:10;5915:2;5908:22;5954:2;5946:6;5939:18;6000:3;5993:4;5988:2;5980:6;5976:15;5972:26;5969:35;5966:55;;;6017:1;6014;6007:12;5966:55;6081:2;6074:4;6066:6;6062:17;6055:4;6047:6;6043:17;6030:54;6128:1;6121:4;6116:2;6108:6;6104:15;6100:26;6093:37;6148:6;6139:15;;;;;;5383:777;;;;:::o;6165:171::-;6232:20;;6292:18;6281:30;;6271:41;;6261:69;;6326:1;6323;6316:12;6341:755;6453:6;6461;6469;6477;6485;6538:3;6526:9;6517:7;6513:23;6509:33;6506:53;;;6555:1;6552;6545:12;6506:53;6595:9;6582:23;6624:18;6665:2;6657:6;6654:14;6651:34;;;6681:1;6678;6671:12;6651:34;6704:49;6745:7;6736:6;6725:9;6721:22;6704:49;:::i;:::-;6694:59;;6772:38;6806:2;6795:9;6791:18;6772:38;:::i;:::-;6762:48;;6857:2;6846:9;6842:18;6829:32;6819:42;;6880:37;6913:2;6902:9;6898:18;6880:37;:::i;:::-;6870:47;;6970:3;6959:9;6955:19;6942:33;6926:49;;7000:2;6990:8;6987:16;6984:36;;;7016:1;7013;7006:12;6984:36;;7039:51;7082:7;7071:8;7060:9;7056:24;7039:51;:::i;:::-;7029:61;;;6341:755;;;;;;;;:::o;7101:681::-;7272:2;7324:21;;;7394:13;;7297:18;;;7416:22;;;7243:4;;7272:2;7495:15;;;;7469:2;7454:18;;;7243:4;7538:218;7552:6;7549:1;7546:13;7538:218;;;7617:13;;7632:42;7613:62;7601:75;;7731:15;;;;7696:12;;;;7574:1;7567:9;7538:218;;;-1:-1:-1;7773:3:351;;7101:681;-1:-1:-1;;;;;;7101:681:351:o;7787:347::-;7838:8;7848:6;7902:3;7895:4;7887:6;7883:17;7879:27;7869:55;;7920:1;7917;7910:12;7869:55;-1:-1:-1;7943:20:351;;7986:18;7975:30;;7972:50;;;8018:1;8015;8008:12;7972:50;8055:4;8047:6;8043:17;8031:29;;8107:3;8100:4;8091:6;8083;8079:19;8075:30;8072:39;8069:59;;;8124:1;8121;8114:12;8139:933;8255:6;8263;8271;8279;8287;8295;8303;8356:3;8344:9;8335:7;8331:23;8327:33;8324:53;;;8373:1;8370;8363:12;8324:53;8396:29;8415:9;8396:29;:::i;:::-;8386:39;;8476:2;8465:9;8461:18;8448:32;8499:18;8540:2;8532:6;8529:14;8526:34;;;8556:1;8553;8546:12;8526:34;8595:58;8645:7;8636:6;8625:9;8621:22;8595:58;:::i;:::-;8672:8;;-1:-1:-1;8569:84:351;-1:-1:-1;8754:2:351;8739:18;;8726:32;;-1:-1:-1;8569:84:351;;-1:-1:-1;8777:37:351;8810:2;8795:18;;8777:37;:::i;:::-;8767:47;;8867:3;8856:9;8852:19;8839:33;8823:49;;8897:2;8887:8;8884:16;8881:36;;;8913:1;8910;8903:12;8881:36;;8952:60;9004:7;8993:8;8982:9;8978:24;8952:60;:::i;:::-;8139:933;;;;-1:-1:-1;8139:933:351;;-1:-1:-1;8139:933:351;;;;8926:86;;-1:-1:-1;;;8139:933:351:o;9300:389::-;9382:8;9392:6;9446:3;9439:4;9431:6;9427:17;9423:27;9413:55;;9464:1;9461;9454:12;9413:55;-1:-1:-1;9487:20:351;;9530:18;9519:30;;9516:50;;;9562:1;9559;9552:12;9516:50;9599:4;9591:6;9587:17;9575:29;;9662:3;9655:4;9647;9639:6;9635:17;9627:6;9623:30;9619:41;9616:50;9613:70;;;9679:1;9676;9669:12;9694:873;9878:6;9886;9894;9902;9955:2;9943:9;9934:7;9930:23;9926:32;9923:52;;;9971:1;9968;9961:12;9923:52;10011:9;9998:23;10040:18;10081:2;10073:6;10070:14;10067:34;;;10097:1;10094;10087:12;10067:34;10136:89;10217:7;10208:6;10197:9;10193:22;10136:89;:::i;:::-;10244:8;;-1:-1:-1;10110:115:351;-1:-1:-1;10332:2:351;10317:18;;10304:32;;-1:-1:-1;10348:16:351;;;10345:36;;;10377:1;10374;10367:12;10345:36;;10416:91;10499:7;10488:8;10477:9;10473:24;10416:91;:::i;10908:366::-;11163:42;11151:55;;11133:74;;11120:3;11105:19;;11216:52;11264:2;11249:18;;11241:6;10658:12;;10651:20;10644:28;10632:41;;10719:4;10708:16;;;10702:23;10744:34;10810:21;;;10794:14;;;10787:45;;;;10885:4;10874:16;;;10868:23;10864:32;10848:14;;10841:56;10572:331;11630:245;11697:6;11750:2;11738:9;11729:7;11725:23;11721:32;11718:52;;;11766:1;11763;11756:12;11718:52;11798:9;11792:16;11817:28;11839:5;11817:28;:::i;12715:184::-;12767:77;12764:1;12757:88;12864:4;12861:1;12854:15;12888:4;12885:1;12878:15;12904:184;12956:77;12953:1;12946:88;13053:4;13050:1;13043:15;13077:4;13074:1;13067:15;13093:195;13132:3;13163:66;13156:5;13153:77;13150:103;;13233:18;;:::i;:::-;-1:-1:-1;13280:1:351;13269:13;;13093:195::o;13293:128::-;13360:9;;;13381:11;;;13378:37;;;13395:18;;:::i;13426:245::-;13610:2;13595:18;;13622:43;13599:9;13647:6;10658:12;;10651:20;10644:28;10632:41;;10719:4;10708:16;;;10702:23;10744:34;10810:21;;;10794:14;;;10787:45;;;;10885:4;10874:16;;;10868:23;10864:32;10848:14;;10841:56;10572:331;13676:505;13764:6;13817:3;13805:9;13796:7;13792:23;13788:33;13785:53;;;13834:1;13831;13824:12;13785:53;13860:17;;:::i;:::-;13900:29;13919:9;13900:29;:::i;:::-;13893:5;13886:44;13982:2;13971:9;13967:18;13954:32;13995:30;14017:7;13995:30;:::i;:::-;14052:2;14041:14;;14034:31;14097:53;14142:7;14137:2;14122:18;;14097:53;:::i;:::-;14092:2;14081:14;;14074:77;14085:5;13676:505;-1:-1:-1;;;13676:505:351:o;14538:168::-;14611:9;;;14642;;14659:15;;;14653:22;;14639:37;14629:71;;14680:18;;:::i;14711:125::-;14776:9;;;14797:10;;;14794:36;;;14810:18;;:::i;15467:274::-;15507:1;15533;15523:189;;15568:77;15565:1;15558:88;15669:4;15666:1;15659:15;15697:4;15694:1;15687:15;15523:189;-1:-1:-1;15726:9:351;;15467:274::o;15746:184::-;15798:77;15795:1;15788:88;15895:4;15892:1;15885:15;15919:4;15916:1;15909:15",
    "linkReferences": {},
    "immutableReferences": {
      "78407": [
        {
          "start": 514,
          "length": 32
        },
        {
          "start": 2349,
          "length": 32
        },
        {
          "start": 2994,
          "length": 32
        },
        {
          "start": 4936,
          "length": 32
        },
        {
          "start": 5007,
          "length": 32
        }
      ],
      "78410": [
        {
          "start": 585,
          "length": 32
        },
        {
          "start": 2005,
          "length": 32
        },
        {
          "start": 2742,
          "length": 32
        }
      ],
      "78413": [
        {
          "start": 963,
          "length": 32
        },
        {
          "start": 2610,
          "length": 32
        },
        {
          "start": 3848,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "acceptOwnership()": "79ba5097",
    "applyAllowListUpdates(address[],address[])": "54c8a4f3",
    "applyRampUpdates((address,bool,(bool,uint128,uint128))[],(address,bool,(bool,uint128,uint128))[])": "c49907b5",
    "currentOffRampRateLimiterState(address)": "b3a3fb41",
    "currentOnRampRateLimiterState(address)": "7787e7ab",
    "getAllowList()": "a7cd63b7",
    "getAllowListEnabled()": "e0351e13",
    "getArmProxy()": "5246492f",
    "getOffRamps()": "a40e69c7",
    "getOnRamps()": "87381314",
    "getToken()": "21df0da7",
    "isOffRamp(address)": "1d7a74a0",
    "isOnRamp(address)": "6f32b872",
    "lockOrBurn(address,bytes,uint256,uint64,bytes)": "96875445",
    "owner()": "8da5cb5b",
    "releaseOrMint(bytes,address,uint256,uint64,bytes)": "8627fad6",
    "setOffRampRateLimiterConfig(address,(bool,uint128,uint128))": "d612b945",
    "setOnRampRateLimiterConfig(address,(bool,uint128,uint128))": "7448b3c7",
    "supportsInterface(bytes4)": "01ffc9a7",
    "transferOwnership(address)": "f2fde38b",
    "typeAndVersion()": "181f5a77"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IBurnMintERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"allowlist\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"armProxy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"capacity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requested\",\"type\":\"uint256\"}],\"name\":\"AggregateValueMaxCapacityExceeded\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minWaitInSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"available\",\"type\":\"uint256\"}],\"name\":\"AggregateValueRateLimitReached\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AllowListNotEnabled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BadARMSignal\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BucketOverfilled\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ramp\",\"type\":\"address\"}],\"name\":\"NonExistentRamp\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PermissionsError\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ramp\",\"type\":\"address\"}],\"name\":\"RampAlreadyExists\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"SenderNotAllowed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"capacity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requested\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"TokenMaxCapacityExceeded\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minWaitInSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"available\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"TokenRateLimitReached\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddressNotAllowed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"AllowListAdd\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"AllowListRemove\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint128\",\"name\":\"capacity\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"rate\",\"type\":\"uint128\"}],\"indexed\":false,\"internalType\":\"struct RateLimiter.Config\",\"name\":\"config\",\"type\":\"tuple\"}],\"name\":\"ConfigChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Locked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"offRamp\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint128\",\"name\":\"capacity\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"rate\",\"type\":\"uint128\"}],\"indexed\":false,\"internalType\":\"struct RateLimiter.Config\",\"name\":\"rateLimiterConfig\",\"type\":\"tuple\"}],\"name\":\"OffRampAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"offRamp\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint128\",\"name\":\"capacity\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"rate\",\"type\":\"uint128\"}],\"indexed\":false,\"internalType\":\"struct RateLimiter.Config\",\"name\":\"rateLimiterConfig\",\"type\":\"tuple\"}],\"name\":\"OffRampConfigured\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"offRamp\",\"type\":\"address\"}],\"name\":\"OffRampRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"onRamp\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint128\",\"name\":\"capacity\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"rate\",\"type\":\"uint128\"}],\"indexed\":false,\"internalType\":\"struct RateLimiter.Config\",\"name\":\"rateLimiterConfig\",\"type\":\"tuple\"}],\"name\":\"OnRampAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"onRamp\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint128\",\"name\":\"capacity\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"rate\",\"type\":\"uint128\"}],\"indexed\":false,\"internalType\":\"struct RateLimiter.Config\",\"name\":\"rateLimiterConfig\",\"type\":\"tuple\"}],\"name\":\"OnRampConfigured\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"onRamp\",\"type\":\"address\"}],\"name\":\"OnRampRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Released\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"TokensConsumed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"removes\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"adds\",\"type\":\"address[]\"}],\"name\":\"applyAllowListUpdates\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"ramp\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint128\",\"name\":\"capacity\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"rate\",\"type\":\"uint128\"}],\"internalType\":\"struct RateLimiter.Config\",\"name\":\"rateLimiterConfig\",\"type\":\"tuple\"}],\"internalType\":\"struct TokenPool.RampUpdate[]\",\"name\":\"onRamps\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"ramp\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint128\",\"name\":\"capacity\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"rate\",\"type\":\"uint128\"}],\"internalType\":\"struct RateLimiter.Config\",\"name\":\"rateLimiterConfig\",\"type\":\"tuple\"}],\"internalType\":\"struct TokenPool.RampUpdate[]\",\"name\":\"offRamps\",\"type\":\"tuple[]\"}],\"name\":\"applyRampUpdates\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"offRamp\",\"type\":\"address\"}],\"name\":\"currentOffRampRateLimiterState\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"tokens\",\"type\":\"uint128\"},{\"internalType\":\"uint32\",\"name\":\"lastUpdated\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"isEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint128\",\"name\":\"capacity\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"rate\",\"type\":\"uint128\"}],\"internalType\":\"struct RateLimiter.TokenBucket\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"onRamp\",\"type\":\"address\"}],\"name\":\"currentOnRampRateLimiterState\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"tokens\",\"type\":\"uint128\"},{\"internalType\":\"uint32\",\"name\":\"lastUpdated\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"isEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint128\",\"name\":\"capacity\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"rate\",\"type\":\"uint128\"}],\"internalType\":\"struct RateLimiter.TokenBucket\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllowList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllowListEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getArmProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"armProxy\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOffRamps\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOnRamps\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"offRamp\",\"type\":\"address\"}],\"name\":\"isOffRamp\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"onRamp\",\"type\":\"address\"}],\"name\":\"isOnRamp\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"originalSender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"lockOrBurn\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"releaseOrMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"offRamp\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint128\",\"name\":\"capacity\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"rate\",\"type\":\"uint128\"}],\"internalType\":\"struct RateLimiter.Config\",\"name\":\"config\",\"type\":\"tuple\"}],\"name\":\"setOffRampRateLimiterConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"onRamp\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint128\",\"name\":\"capacity\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"rate\",\"type\":\"uint128\"}],\"internalType\":\"struct RateLimiter.Config\",\"name\":\"config\",\"type\":\"tuple\"}],\"name\":\"setOnRampRateLimiterConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"typeAndVersion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Pool whitelisting mode is set in the constructor and cannot be modified later. It either accepts any address as originalSender, or only accepts whitelisted originalSender. The only way to change whitelisting mode is to deploy a new pool. If that is expected, please make sure the token's burner/minter roles are adjustable.\",\"kind\":\"dev\",\"methods\":{\"applyAllowListUpdates(address[],address[])\":{\"details\":\"allowListing will be removed before public launch\",\"params\":{\"adds\":\"The addresses to be added.\",\"removes\":\"The addresses to be removed.\"}},\"applyRampUpdates((address,bool,(bool,uint128,uint128))[],(address,bool,(bool,uint128,uint128))[])\":{\"details\":\"Only callable by the owner\",\"params\":{\"offRamps\":\"A list of offRamps and their new permission status/rate limits\",\"onRamps\":\"A list of onRamps and their new permission status/rate limits\"}},\"currentOffRampRateLimiterState(address)\":{\"returns\":{\"_0\":\"The token bucket.\"}},\"currentOnRampRateLimiterState(address)\":{\"returns\":{\"_0\":\"The token bucket.\"}},\"getAllowList()\":{\"returns\":{\"_0\":\"The allowed addresses.\"}},\"getAllowListEnabled()\":{\"returns\":{\"_0\":\"true is enabled, false if not.\"}},\"getArmProxy()\":{\"returns\":{\"armProxy\":\"Address of arm proxy\"}},\"getOffRamps()\":{\"returns\":{\"_0\":\"list of offramps\"}},\"getOnRamps()\":{\"returns\":{\"_0\":\"list of onramps.\"}},\"getToken()\":{\"returns\":{\"token\":\"The IERC20 token representation.\"}},\"isOffRamp(address)\":{\"returns\":{\"_0\":\"true if the given address is a permissioned offRamp.\"}},\"isOnRamp(address)\":{\"returns\":{\"_0\":\"true if the given address is a permissioned onRamp.\"}},\"lockOrBurn(address,bytes,uint256,uint64,bytes)\":{\"details\":\"The whenHealthy check is important to ensure that even if a ramp is compromised we're able to stop token movement via ARM.\",\"params\":{\"amount\":\"Amount to burn\"}},\"releaseOrMint(bytes,address,uint256,uint64,bytes)\":{\"details\":\"The whenHealthy check is important to ensure that even if a ramp is compromised we're able to stop token movement via ARM.\",\"params\":{\"amount\":\"Amount to mint\",\"receiver\":\"Recipient address\"}},\"setOffRampRateLimiterConfig(address,(bool,uint128,uint128))\":{\"params\":{\"config\":\"The new rate limiter config.\"}},\"setOnRampRateLimiterConfig(address,(bool,uint128,uint128))\":{\"params\":{\"config\":\"The new rate limiter config.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"applyAllowListUpdates(address[],address[])\":{\"notice\":\"Apply updates to the allow list.\"},\"applyRampUpdates((address,bool,(bool,uint128,uint128))[],(address,bool,(bool,uint128,uint128))[])\":{\"notice\":\"Sets permissions for all on and offRamps.\"},\"currentOffRampRateLimiterState(address)\":{\"notice\":\"Gets the token bucket with its values for the block it was requested at.\"},\"currentOnRampRateLimiterState(address)\":{\"notice\":\"Gets the token bucket with its values for the block it was requested at.\"},\"getAllowList()\":{\"notice\":\"Gets the allowed addresses.\"},\"getAllowListEnabled()\":{\"notice\":\"Gets whether the allowList functionality is enabled.\"},\"getArmProxy()\":{\"notice\":\"Get ARM proxy address\"},\"getOffRamps()\":{\"notice\":\"Get offRamp whitelist\"},\"getOnRamps()\":{\"notice\":\"Get onRamp whitelist\"},\"getToken()\":{\"notice\":\"Gets the IERC20 token that this pool can lock or burn.\"},\"isOffRamp(address)\":{\"notice\":\"Checks whether something is a permissioned offRamp on this contract.\"},\"isOnRamp(address)\":{\"notice\":\"Checks whether something is a permissioned onRamp on this contract.\"},\"lockOrBurn(address,bytes,uint256,uint64,bytes)\":{\"notice\":\"Burn the token in the pool\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"releaseOrMint(bytes,address,uint256,uint64,bytes)\":{\"notice\":\"Mint tokens from the pool to the recipient\"},\"setOffRampRateLimiterConfig(address,(bool,uint128,uint128))\":{\"notice\":\"Sets the offramp rate limited config.\"},\"setOnRampRateLimiterConfig(address,(bool,uint128,uint128))\":{\"notice\":\"Sets the onramp rate limited config.\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address, pending.\"}},\"notice\":\"This pool mints and burns a 3rd-party token.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/v0.8/ccip/pools/BurnMintTokenPool.sol\":\"BurnMintTokenPool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@ERC3643/=lib/ERC-3643/contracts/\",\":@chainlink/contracts-ccip/=src/v0.8/\",\":@chainlink/contracts/=node_modules/@chainlink/contracts/src/v0.6/\",\":@erc721a/=lib/ERC721A/contracts/\",\":@onchain-id/solidity/contracts/=lib/solidity/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/test/=lib/prb-test/src/\",\":ERC-3643/=lib/ERC-3643/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/contracts-upgradleable/=lib/openzeppelin-contracts-upgradleable/contracts/\",\":prb-test/=lib/prb-test/src/\",\":solidity/=lib/solidity/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"src/v0.8/ccip/interfaces/IARM.sol\":{\"keccak256\":\"0x7d0609f6b36bce268df88bb6b525d1b53033f5ad443579a22f06ba92974f89cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9899c4237f92f635ed23f8403963091c996dcc2d5bac540f5cb0010b95246429\",\"dweb:/ipfs/QmSri7Q36D5UCPRvDoCFr9RJYQKLKr9188wRxrVYyADVH4\"]},\"src/v0.8/ccip/interfaces/pools/IPool.sol\":{\"keccak256\":\"0xd1304829f4a2f244935c2825bb963a2ce885d67716a8286d2e09230679cae840\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e0cc32b9a6e49b56ebf8231e173c650b29cb83b8d47cbf186564cb5cf4c9e7e\",\"dweb:/ipfs/QmawsMRBgPHyRifjqsY9iw7ebMkzJsKHvDHahYa9A1kLDZ\"]},\"src/v0.8/ccip/libraries/RateLimiter.sol\":{\"keccak256\":\"0xb0e8f990d5d6fd39a9aef9cc2205dde67cf455cdcf5affb2131e19af78043c46\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b5f5ce55dcabec0ced8f428595e10058fbbfa1716acaec3efc9d5abd3dc8d944\",\"dweb:/ipfs/QmPJifoX1cAj9pL23g2Vnn91iSsS3MbBWuQ1CuCkxE8Q1N\"]},\"src/v0.8/ccip/pools/BurnMintTokenPool.sol\":{\"keccak256\":\"0x1a31d2707ab558c078de1167a67cf25c568fa8e9e46b781f512ab1974484583c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5861a2f56acc01460bed7316df54121903c18170bcab1703086ee2c44c6d8ffa\",\"dweb:/ipfs/QmVvkDrV3SB75TeB2QxdUR4MCtfozR35ab1mFmZXRsGvwz\"]},\"src/v0.8/ccip/pools/TokenPool.sol\":{\"keccak256\":\"0xe82b1ebd484a495e9d8d59b345467150ea4d78e7b681f1f86f9f41615301337d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://272e875f21a68edda985623b1d0efb90cf667b4efa99bd6447479a2ecc0081b2\",\"dweb:/ipfs/QmbSJM56Q74o3sZXThcRQH3tx3RUWBAuru6yJDFRJGvS4A\"]},\"src/v0.8/shared/access/ConfirmedOwner.sol\":{\"keccak256\":\"0x99d0b0786fe368970009c703f2249bfbc56340ddf1a28b60d2915bb58c34cd72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af0371c1af45db651823b9a3d5af761b08243c78f105166342eee28de356c8dd\",\"dweb:/ipfs/QmPnC9qNDKwJFd5unwLb9pxjrutoe8MWjm5EXHTxq2kJ4x\"]},\"src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"keccak256\":\"0x215529a99534a40e6257ef2282a91ea4a95b66debc3997866406907622efb405\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecc56a2cddb1ba6225ca0cffb07fdf6e24bcc4234cc87710c42a59c0a21ae395\",\"dweb:/ipfs/QmSpW4vkPHeRNZ14beMEk2LEtqY5JQTueNJC4sCT8JaSoc\"]},\"src/v0.8/shared/access/OwnerIsCreator.sol\":{\"keccak256\":\"0x895af02d6a3df2930bbb6ec1f2d68118b492ca6e710ba0c34fcb6b574a0906aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4c69fab5eea1c0448f856a51d7e5736454fe5cc083d36c60bf3ee23bb3d0e8e\",\"dweb:/ipfs/QmP4fYQ9k7xeZms6cwnqnQuuAkRkeE2TWewyvCD8Mrc2DZ\"]},\"src/v0.8/shared/interfaces/IOwnable.sol\":{\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921\",\"dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q\"]},\"src/v0.8/shared/interfaces/ITypeAndVersion.sol\":{\"keccak256\":\"0xf5827cb463c01d055021684d04f9186391c2d9ac850e0d0819f76140e4fc84ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a19c7bae07330e6d7904a0a21cf0ab0067ef096b66c1653a2e012801a931c5b9\",\"dweb:/ipfs/QmckpvSuLx8UL8zfVzAtN6ZRxyXHUSVqqz2JwYZ2jrK58h\"]},\"src/v0.8/shared/token/ERC20/IBurnMintERC20.sol\":{\"keccak256\":\"0x96f96a152eb46214af63e9c0526dbebe9eb41e42982dfd72196458ba27ac81fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d90802e66c1e28d87cbe3e36f09c913778113bcb2aef4b6825f0edb689e7d889\",\"dweb:/ipfs/QmZsGkUnpc6WY2CdpjNAJWk7PsCFGmKFUaXBrM9GC9jmT1\"]},\"src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x527e858729af8197f6c8f99554d32bfc4f5a72b15975489c94809363d7ae522f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6828dfa867eaff18f383aad4ca4b5aaedb93109023d74aaf418fee6c06e556c2\",\"dweb:/ipfs/QmXSQ9WnaJ6Ba9gvKvgNxDY7sa7ATJ9V55uwGSGCpBuJKu\"]},\"src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa36a31b4bb17fad88d023474893b3b895fa421650543b1ce5aefc78efbd43244\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f235b9175d95111f301d729566e214c32559e55a2b0579c947484748e20679d\",\"dweb:/ipfs/QmSsNBuPejy1wNe2u3JSt2p9wFhrjvBjFrnAaNe1nDNkEA\"]},\"src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9ec0d82ee53d4137be44f1f38f9a82d0d3a2027b3b8b226a5a90e4ee76e926d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f783b453420dee16bb4f0839e3d2485d753d2dcd317adbeecb7e510c39563f57\",\"dweb:/ipfs/QmUd4BeCaw6ZujaYvvMrCn2BNqmiP4bt4eA9rxiXY5od5E\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IBurnMintERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "allowlist",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "armProxy",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "capacity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "requested",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "AggregateValueMaxCapacityExceeded"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "minWaitInSeconds",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "available",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "AggregateValueRateLimitReached"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AllowListNotEnabled"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BadARMSignal"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BucketOverfilled"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "ramp",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "NonExistentRamp"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PermissionsError"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "ramp",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "RampAlreadyExists"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "SenderNotAllowed"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "capacity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "requested",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "TokenMaxCapacityExceeded"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "minWaitInSeconds",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "available",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "TokenRateLimitReached"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZeroAddressNotAllowed"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AllowListAdd",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AllowListRemove",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Burned",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct RateLimiter.Config",
              "name": "config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "isEnabled",
                  "type": "bool"
                },
                {
                  "internalType": "uint128",
                  "name": "capacity",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "rate",
                  "type": "uint128"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ConfigChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Locked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Minted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "offRamp",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "struct RateLimiter.Config",
              "name": "rateLimiterConfig",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "isEnabled",
                  "type": "bool"
                },
                {
                  "internalType": "uint128",
                  "name": "capacity",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "rate",
                  "type": "uint128"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OffRampAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "offRamp",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "struct RateLimiter.Config",
              "name": "rateLimiterConfig",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "isEnabled",
                  "type": "bool"
                },
                {
                  "internalType": "uint128",
                  "name": "capacity",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "rate",
                  "type": "uint128"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OffRampConfigured",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "offRamp",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OffRampRemoved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "onRamp",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "struct RateLimiter.Config",
              "name": "rateLimiterConfig",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "isEnabled",
                  "type": "bool"
                },
                {
                  "internalType": "uint128",
                  "name": "capacity",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "rate",
                  "type": "uint128"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OnRampAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "onRamp",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "struct RateLimiter.Config",
              "name": "rateLimiterConfig",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "isEnabled",
                  "type": "bool"
                },
                {
                  "internalType": "uint128",
                  "name": "capacity",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "rate",
                  "type": "uint128"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OnRampConfigured",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "onRamp",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OnRampRemoved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferRequested",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Released",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokens",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensConsumed",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "removes",
              "type": "address[]"
            },
            {
              "internalType": "address[]",
              "name": "adds",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "applyAllowListUpdates"
        },
        {
          "inputs": [
            {
              "internalType": "struct TokenPool.RampUpdate[]",
              "name": "onRamps",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "ramp",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "allowed",
                  "type": "bool"
                },
                {
                  "internalType": "struct RateLimiter.Config",
                  "name": "rateLimiterConfig",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "isEnabled",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint128",
                      "name": "capacity",
                      "type": "uint128"
                    },
                    {
                      "internalType": "uint128",
                      "name": "rate",
                      "type": "uint128"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct TokenPool.RampUpdate[]",
              "name": "offRamps",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "ramp",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "allowed",
                  "type": "bool"
                },
                {
                  "internalType": "struct RateLimiter.Config",
                  "name": "rateLimiterConfig",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "isEnabled",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint128",
                      "name": "capacity",
                      "type": "uint128"
                    },
                    {
                      "internalType": "uint128",
                      "name": "rate",
                      "type": "uint128"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "applyRampUpdates"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "offRamp",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "currentOffRampRateLimiterState",
          "outputs": [
            {
              "internalType": "struct RateLimiter.TokenBucket",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint128",
                  "name": "tokens",
                  "type": "uint128"
                },
                {
                  "internalType": "uint32",
                  "name": "lastUpdated",
                  "type": "uint32"
                },
                {
                  "internalType": "bool",
                  "name": "isEnabled",
                  "type": "bool"
                },
                {
                  "internalType": "uint128",
                  "name": "capacity",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "rate",
                  "type": "uint128"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "onRamp",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "currentOnRampRateLimiterState",
          "outputs": [
            {
              "internalType": "struct RateLimiter.TokenBucket",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint128",
                  "name": "tokens",
                  "type": "uint128"
                },
                {
                  "internalType": "uint32",
                  "name": "lastUpdated",
                  "type": "uint32"
                },
                {
                  "internalType": "bool",
                  "name": "isEnabled",
                  "type": "bool"
                },
                {
                  "internalType": "uint128",
                  "name": "capacity",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "rate",
                  "type": "uint128"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllowList",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllowListEnabled",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getArmProxy",
          "outputs": [
            {
              "internalType": "address",
              "name": "armProxy",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getOffRamps",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getOnRamps",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getToken",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "offRamp",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOffRamp",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "onRamp",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOnRamp",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "originalSender",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "lockOrBurn",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "releaseOrMint"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "offRamp",
              "type": "address"
            },
            {
              "internalType": "struct RateLimiter.Config",
              "name": "config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "isEnabled",
                  "type": "bool"
                },
                {
                  "internalType": "uint128",
                  "name": "capacity",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "rate",
                  "type": "uint128"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOffRampRateLimiterConfig"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "onRamp",
              "type": "address"
            },
            {
              "internalType": "struct RateLimiter.Config",
              "name": "config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "isEnabled",
                  "type": "bool"
                },
                {
                  "internalType": "uint128",
                  "name": "capacity",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "rate",
                  "type": "uint128"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOnRampRateLimiterConfig"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "typeAndVersion",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "applyAllowListUpdates(address[],address[])": {
            "details": "allowListing will be removed before public launch",
            "params": {
              "adds": "The addresses to be added.",
              "removes": "The addresses to be removed."
            }
          },
          "applyRampUpdates((address,bool,(bool,uint128,uint128))[],(address,bool,(bool,uint128,uint128))[])": {
            "details": "Only callable by the owner",
            "params": {
              "offRamps": "A list of offRamps and their new permission status/rate limits",
              "onRamps": "A list of onRamps and their new permission status/rate limits"
            }
          },
          "currentOffRampRateLimiterState(address)": {
            "returns": {
              "_0": "The token bucket."
            }
          },
          "currentOnRampRateLimiterState(address)": {
            "returns": {
              "_0": "The token bucket."
            }
          },
          "getAllowList()": {
            "returns": {
              "_0": "The allowed addresses."
            }
          },
          "getAllowListEnabled()": {
            "returns": {
              "_0": "true is enabled, false if not."
            }
          },
          "getArmProxy()": {
            "returns": {
              "armProxy": "Address of arm proxy"
            }
          },
          "getOffRamps()": {
            "returns": {
              "_0": "list of offramps"
            }
          },
          "getOnRamps()": {
            "returns": {
              "_0": "list of onramps."
            }
          },
          "getToken()": {
            "returns": {
              "token": "The IERC20 token representation."
            }
          },
          "isOffRamp(address)": {
            "returns": {
              "_0": "true if the given address is a permissioned offRamp."
            }
          },
          "isOnRamp(address)": {
            "returns": {
              "_0": "true if the given address is a permissioned onRamp."
            }
          },
          "lockOrBurn(address,bytes,uint256,uint64,bytes)": {
            "details": "The whenHealthy check is important to ensure that even if a ramp is compromised we're able to stop token movement via ARM.",
            "params": {
              "amount": "Amount to burn"
            }
          },
          "releaseOrMint(bytes,address,uint256,uint64,bytes)": {
            "details": "The whenHealthy check is important to ensure that even if a ramp is compromised we're able to stop token movement via ARM.",
            "params": {
              "amount": "Amount to mint",
              "receiver": "Recipient address"
            }
          },
          "setOffRampRateLimiterConfig(address,(bool,uint128,uint128))": {
            "params": {
              "config": "The new rate limiter config."
            }
          },
          "setOnRampRateLimiterConfig(address,(bool,uint128,uint128))": {
            "params": {
              "config": "The new rate limiter config."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "acceptOwnership()": {
            "notice": "Allows an ownership transfer to be completed by the recipient."
          },
          "applyAllowListUpdates(address[],address[])": {
            "notice": "Apply updates to the allow list."
          },
          "applyRampUpdates((address,bool,(bool,uint128,uint128))[],(address,bool,(bool,uint128,uint128))[])": {
            "notice": "Sets permissions for all on and offRamps."
          },
          "currentOffRampRateLimiterState(address)": {
            "notice": "Gets the token bucket with its values for the block it was requested at."
          },
          "currentOnRampRateLimiterState(address)": {
            "notice": "Gets the token bucket with its values for the block it was requested at."
          },
          "getAllowList()": {
            "notice": "Gets the allowed addresses."
          },
          "getAllowListEnabled()": {
            "notice": "Gets whether the allowList functionality is enabled."
          },
          "getArmProxy()": {
            "notice": "Get ARM proxy address"
          },
          "getOffRamps()": {
            "notice": "Get offRamp whitelist"
          },
          "getOnRamps()": {
            "notice": "Get onRamp whitelist"
          },
          "getToken()": {
            "notice": "Gets the IERC20 token that this pool can lock or burn."
          },
          "isOffRamp(address)": {
            "notice": "Checks whether something is a permissioned offRamp on this contract."
          },
          "isOnRamp(address)": {
            "notice": "Checks whether something is a permissioned onRamp on this contract."
          },
          "lockOrBurn(address,bytes,uint256,uint64,bytes)": {
            "notice": "Burn the token in the pool"
          },
          "owner()": {
            "notice": "Get the current owner"
          },
          "releaseOrMint(bytes,address,uint256,uint64,bytes)": {
            "notice": "Mint tokens from the pool to the recipient"
          },
          "setOffRampRateLimiterConfig(address,(bool,uint128,uint128))": {
            "notice": "Sets the offramp rate limited config."
          },
          "setOnRampRateLimiterConfig(address,(bool,uint128,uint128))": {
            "notice": "Sets the onramp rate limited config."
          },
          "transferOwnership(address)": {
            "notice": "Allows an owner to begin transferring ownership to a new address, pending."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ERC3643/=lib/ERC-3643/contracts/",
        "@chainlink/contracts-ccip/=src/v0.8/",
        "@chainlink/contracts/=node_modules/@chainlink/contracts/src/v0.6/",
        "@erc721a/=lib/ERC721A/contracts/",
        "@onchain-id/solidity/contracts/=lib/solidity/contracts/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@prb/test/=lib/prb-test/src/",
        "ERC-3643/=lib/ERC-3643/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/contracts-upgradleable/=lib/openzeppelin-contracts-upgradleable/contracts/",
        "prb-test/=lib/prb-test/src/",
        "solidity/=lib/solidity/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10000
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/v0.8/ccip/pools/BurnMintTokenPool.sol": "BurnMintTokenPool"
      },
      "libraries": {}
    },
    "sources": {
      "src/v0.8/ccip/interfaces/IARM.sol": {
        "keccak256": "0x7d0609f6b36bce268df88bb6b525d1b53033f5ad443579a22f06ba92974f89cb",
        "urls": [
          "bzz-raw://9899c4237f92f635ed23f8403963091c996dcc2d5bac540f5cb0010b95246429",
          "dweb:/ipfs/QmSri7Q36D5UCPRvDoCFr9RJYQKLKr9188wRxrVYyADVH4"
        ],
        "license": "MIT"
      },
      "src/v0.8/ccip/interfaces/pools/IPool.sol": {
        "keccak256": "0xd1304829f4a2f244935c2825bb963a2ce885d67716a8286d2e09230679cae840",
        "urls": [
          "bzz-raw://0e0cc32b9a6e49b56ebf8231e173c650b29cb83b8d47cbf186564cb5cf4c9e7e",
          "dweb:/ipfs/QmawsMRBgPHyRifjqsY9iw7ebMkzJsKHvDHahYa9A1kLDZ"
        ],
        "license": "MIT"
      },
      "src/v0.8/ccip/libraries/RateLimiter.sol": {
        "keccak256": "0xb0e8f990d5d6fd39a9aef9cc2205dde67cf455cdcf5affb2131e19af78043c46",
        "urls": [
          "bzz-raw://b5f5ce55dcabec0ced8f428595e10058fbbfa1716acaec3efc9d5abd3dc8d944",
          "dweb:/ipfs/QmPJifoX1cAj9pL23g2Vnn91iSsS3MbBWuQ1CuCkxE8Q1N"
        ],
        "license": "BUSL-1.1"
      },
      "src/v0.8/ccip/pools/BurnMintTokenPool.sol": {
        "keccak256": "0x1a31d2707ab558c078de1167a67cf25c568fa8e9e46b781f512ab1974484583c",
        "urls": [
          "bzz-raw://5861a2f56acc01460bed7316df54121903c18170bcab1703086ee2c44c6d8ffa",
          "dweb:/ipfs/QmVvkDrV3SB75TeB2QxdUR4MCtfozR35ab1mFmZXRsGvwz"
        ],
        "license": "BUSL-1.1"
      },
      "src/v0.8/ccip/pools/TokenPool.sol": {
        "keccak256": "0xe82b1ebd484a495e9d8d59b345467150ea4d78e7b681f1f86f9f41615301337d",
        "urls": [
          "bzz-raw://272e875f21a68edda985623b1d0efb90cf667b4efa99bd6447479a2ecc0081b2",
          "dweb:/ipfs/QmbSJM56Q74o3sZXThcRQH3tx3RUWBAuru6yJDFRJGvS4A"
        ],
        "license": "BUSL-1.1"
      },
      "src/v0.8/shared/access/ConfirmedOwner.sol": {
        "keccak256": "0x99d0b0786fe368970009c703f2249bfbc56340ddf1a28b60d2915bb58c34cd72",
        "urls": [
          "bzz-raw://af0371c1af45db651823b9a3d5af761b08243c78f105166342eee28de356c8dd",
          "dweb:/ipfs/QmPnC9qNDKwJFd5unwLb9pxjrutoe8MWjm5EXHTxq2kJ4x"
        ],
        "license": "MIT"
      },
      "src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol": {
        "keccak256": "0x215529a99534a40e6257ef2282a91ea4a95b66debc3997866406907622efb405",
        "urls": [
          "bzz-raw://ecc56a2cddb1ba6225ca0cffb07fdf6e24bcc4234cc87710c42a59c0a21ae395",
          "dweb:/ipfs/QmSpW4vkPHeRNZ14beMEk2LEtqY5JQTueNJC4sCT8JaSoc"
        ],
        "license": "MIT"
      },
      "src/v0.8/shared/access/OwnerIsCreator.sol": {
        "keccak256": "0x895af02d6a3df2930bbb6ec1f2d68118b492ca6e710ba0c34fcb6b574a0906aa",
        "urls": [
          "bzz-raw://c4c69fab5eea1c0448f856a51d7e5736454fe5cc083d36c60bf3ee23bb3d0e8e",
          "dweb:/ipfs/QmP4fYQ9k7xeZms6cwnqnQuuAkRkeE2TWewyvCD8Mrc2DZ"
        ],
        "license": "MIT"
      },
      "src/v0.8/shared/interfaces/IOwnable.sol": {
        "keccak256": "0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767",
        "urls": [
          "bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921",
          "dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q"
        ],
        "license": "MIT"
      },
      "src/v0.8/shared/interfaces/ITypeAndVersion.sol": {
        "keccak256": "0xf5827cb463c01d055021684d04f9186391c2d9ac850e0d0819f76140e4fc84ed",
        "urls": [
          "bzz-raw://a19c7bae07330e6d7904a0a21cf0ab0067ef096b66c1653a2e012801a931c5b9",
          "dweb:/ipfs/QmckpvSuLx8UL8zfVzAtN6ZRxyXHUSVqqz2JwYZ2jrK58h"
        ],
        "license": "MIT"
      },
      "src/v0.8/shared/token/ERC20/IBurnMintERC20.sol": {
        "keccak256": "0x96f96a152eb46214af63e9c0526dbebe9eb41e42982dfd72196458ba27ac81fc",
        "urls": [
          "bzz-raw://d90802e66c1e28d87cbe3e36f09c913778113bcb2aef4b6825f0edb689e7d889",
          "dweb:/ipfs/QmZsGkUnpc6WY2CdpjNAJWk7PsCFGmKFUaXBrM9GC9jmT1"
        ],
        "license": "MIT"
      },
      "src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x527e858729af8197f6c8f99554d32bfc4f5a72b15975489c94809363d7ae522f",
        "urls": [
          "bzz-raw://6828dfa867eaff18f383aad4ca4b5aaedb93109023d74aaf418fee6c06e556c2",
          "dweb:/ipfs/QmXSQ9WnaJ6Ba9gvKvgNxDY7sa7ATJ9V55uwGSGCpBuJKu"
        ],
        "license": "MIT"
      },
      "src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0xa36a31b4bb17fad88d023474893b3b895fa421650543b1ce5aefc78efbd43244",
        "urls": [
          "bzz-raw://0f235b9175d95111f301d729566e214c32559e55a2b0579c947484748e20679d",
          "dweb:/ipfs/QmSsNBuPejy1wNe2u3JSt2p9wFhrjvBjFrnAaNe1nDNkEA"
        ],
        "license": "MIT"
      },
      "src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x9ec0d82ee53d4137be44f1f38f9a82d0d3a2027b3b8b226a5a90e4ee76e926d6",
        "urls": [
          "bzz-raw://f783b453420dee16bb4f0839e3d2485d753d2dcd317adbeecb7e510c39563f57",
          "dweb:/ipfs/QmUd4BeCaw6ZujaYvvMrCn2BNqmiP4bt4eA9rxiXY5od5E"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/v0.8/ccip/pools/BurnMintTokenPool.sol",
    "id": 77979,
    "exportedSymbols": {
      "BurnMintTokenPool": [
        77978
      ],
      "IBurnMintERC20": [
        125587
      ],
      "ITypeAndVersion": [
        122903
      ],
      "TokenPool": [
        79129
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:2178:132",
    "nodes": [
      {
        "id": 77856,
        "nodeType": "PragmaDirective",
        "src": "37:24:132",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 77858,
        "nodeType": "ImportDirective",
        "src": "63:76:132",
        "nodes": [],
        "absolutePath": "src/v0.8/shared/interfaces/ITypeAndVersion.sol",
        "file": "../../shared/interfaces/ITypeAndVersion.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 77979,
        "sourceUnit": 122904,
        "symbolAliases": [
          {
            "foreign": {
              "id": 77857,
              "name": "ITypeAndVersion",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 122903,
              "src": "71:15:132",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 77860,
        "nodeType": "ImportDirective",
        "src": "141:75:132",
        "nodes": [],
        "absolutePath": "src/v0.8/shared/token/ERC20/IBurnMintERC20.sol",
        "file": "../../shared/token/ERC20/IBurnMintERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 77979,
        "sourceUnit": 125588,
        "symbolAliases": [
          {
            "foreign": {
              "id": 77859,
              "name": "IBurnMintERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 125587,
              "src": "149:14:132",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 77862,
        "nodeType": "ImportDirective",
        "src": "218:42:132",
        "nodes": [],
        "absolutePath": "src/v0.8/ccip/pools/TokenPool.sol",
        "file": "./TokenPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 77979,
        "sourceUnit": 79130,
        "symbolAliases": [
          {
            "foreign": {
              "id": 77861,
              "name": "TokenPool",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 79129,
              "src": "226:9:132",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 77978,
        "nodeType": "ContractDefinition",
        "src": "664:1550:132",
        "nodes": [
          {
            "id": 77871,
            "nodeType": "VariableDeclaration",
            "src": "811:74:132",
            "nodes": [],
            "baseFunctions": [
              122902
            ],
            "constant": true,
            "functionSelector": "181f5a77",
            "mutability": "constant",
            "name": "typeAndVersion",
            "nameLocation": "843:14:132",
            "overrides": {
              "id": 77869,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "834:8:132"
            },
            "scope": 77978,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 77868,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "811:6:132",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "4275726e4d696e74546f6b656e506f6f6c20312e322e30",
              "id": 77870,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "860:25:132",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_f7a503ee03594410836e500f9dc4f5cd60d58bf230707be7463933120abcd871",
                "typeString": "literal_string \"BurnMintTokenPool 1.2.0\""
              },
              "value": "BurnMintTokenPool 1.2.0"
            },
            "visibility": "public"
          },
          {
            "id": 77888,
            "nodeType": "FunctionDefinition",
            "src": "890:136:132",
            "nodes": [],
            "body": {
              "id": 77887,
              "nodeType": "Block",
              "src": "1024:2:132",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 77882,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 77874,
                    "src": "996:5:132",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBurnMintERC20_$125587",
                      "typeString": "contract IBurnMintERC20"
                    }
                  },
                  {
                    "id": 77883,
                    "name": "allowlist",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 77877,
                    "src": "1003:9:132",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  {
                    "id": 77884,
                    "name": "armProxy",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 77879,
                    "src": "1014:8:132",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 77885,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 77881,
                  "name": "TokenPool",
                  "nameLocations": [
                    "986:9:132"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 79129,
                  "src": "986:9:132"
                },
                "nodeType": "ModifierInvocation",
                "src": "986:37:132"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 77880,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77874,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "922:5:132",
                  "nodeType": "VariableDeclaration",
                  "scope": 77888,
                  "src": "907:20:132",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBurnMintERC20_$125587",
                    "typeString": "contract IBurnMintERC20"
                  },
                  "typeName": {
                    "id": 77873,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 77872,
                      "name": "IBurnMintERC20",
                      "nameLocations": [
                        "907:14:132"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 125587,
                      "src": "907:14:132"
                    },
                    "referencedDeclaration": 125587,
                    "src": "907:14:132",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBurnMintERC20_$125587",
                      "typeString": "contract IBurnMintERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77877,
                  "mutability": "mutable",
                  "name": "allowlist",
                  "nameLocation": "950:9:132",
                  "nodeType": "VariableDeclaration",
                  "scope": 77888,
                  "src": "933:26:132",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 77875,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "933:7:132",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 77876,
                    "nodeType": "ArrayTypeName",
                    "src": "933:9:132",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77879,
                  "mutability": "mutable",
                  "name": "armProxy",
                  "nameLocation": "973:8:132",
                  "nodeType": "VariableDeclaration",
                  "scope": 77888,
                  "src": "965:16:132",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77878,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "965:7:132",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "901:84:132"
            },
            "returnParameters": {
              "id": 77886,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1024:0:132"
            },
            "scope": 77978,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 77935,
            "nodeType": "FunctionDefinition",
            "src": "1246:372:132",
            "nodes": [],
            "body": {
              "id": 77934,
              "nodeType": "Block",
              "src": "1473:145:132",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77913,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77895,
                        "src": "1503:6:132",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 77912,
                      "name": "_consumeOnRampRateLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78828,
                      "src": "1479:23:132",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 77914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1479:31:132",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77915,
                  "nodeType": "ExpressionStatement",
                  "src": "1479:31:132"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77923,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77895,
                        "src": "1554:6:132",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 77919,
                                "name": "i_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 78407,
                                "src": "1539:7:132",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$137559",
                                  "typeString": "contract IERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$137559",
                                  "typeString": "contract IERC20"
                                }
                              ],
                              "id": 77918,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1531:7:132",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 77917,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1531:7:132",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 77920,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1531:16:132",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 77916,
                          "name": "IBurnMintERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 125587,
                          "src": "1516:14:132",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBurnMintERC20_$125587_$",
                            "typeString": "type(contract IBurnMintERC20)"
                          }
                        },
                        "id": 77921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1516:32:132",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBurnMintERC20_$125587",
                          "typeString": "contract IBurnMintERC20"
                        }
                      },
                      "id": 77922,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1549:4:132",
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 125570,
                      "src": "1516:37:132",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 77924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1516:45:132",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77925,
                  "nodeType": "ExpressionStatement",
                  "src": "1516:45:132"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 77927,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1579:3:132",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 77928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1583:6:132",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1579:10:132",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77929,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77895,
                        "src": "1591:6:132",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 77926,
                      "name": "Burned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78335,
                      "src": "1572:6:132",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 77930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1572:26:132",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77931,
                  "nodeType": "EmitStatement",
                  "src": "1567:31:132"
                },
                {
                  "expression": {
                    "hexValue": "",
                    "id": 77932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1611:2:132",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  "functionReturnParameters": 77911,
                  "id": 77933,
                  "nodeType": "Return",
                  "src": "1604:9:132"
                }
              ]
            },
            "baseFunctions": [
              71170
            ],
            "documentation": {
              "id": 77889,
              "nodeType": "StructuredDocumentation",
              "src": "1030:213:132",
              "text": "@notice Burn the token in the pool\n @param amount Amount to burn\n @dev The whenHealthy check is important to ensure that even if a ramp is compromised\n we're able to stop token movement via ARM."
            },
            "functionSelector": "96875445",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 77903,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 77902,
                  "name": "onlyOnRamp",
                  "nameLocations": [
                    "1396:10:132"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 78959,
                  "src": "1396:10:132"
                },
                "nodeType": "ModifierInvocation",
                "src": "1396:10:132"
              },
              {
                "arguments": [
                  {
                    "id": 77905,
                    "name": "originalSender",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 77891,
                    "src": "1422:14:132",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 77906,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 77904,
                  "name": "checkAllowList",
                  "nameLocations": [
                    "1407:14:132"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 78991,
                  "src": "1407:14:132"
                },
                "nodeType": "ModifierInvocation",
                "src": "1407:30:132"
              },
              {
                "id": 77908,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 77907,
                  "name": "whenHealthy",
                  "nameLocations": [
                    "1438:11:132"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 79128,
                  "src": "1438:11:132"
                },
                "nodeType": "ModifierInvocation",
                "src": "1438:11:132"
              }
            ],
            "name": "lockOrBurn",
            "nameLocation": "1255:10:132",
            "overrides": {
              "id": 77901,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1387:8:132"
            },
            "parameters": {
              "id": 77900,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77891,
                  "mutability": "mutable",
                  "name": "originalSender",
                  "nameLocation": "1279:14:132",
                  "nodeType": "VariableDeclaration",
                  "scope": 77935,
                  "src": "1271:22:132",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77890,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1271:7:132",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77893,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 77935,
                  "src": "1299:14:132",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 77892,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1299:5:132",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77895,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1327:6:132",
                  "nodeType": "VariableDeclaration",
                  "scope": 77935,
                  "src": "1319:14:132",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 77894,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1319:7:132",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77897,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 77935,
                  "src": "1339:6:132",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 77896,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1339:6:132",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77899,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 77935,
                  "src": "1351:14:132",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 77898,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1351:5:132",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1265:104:132"
            },
            "returnParameters": {
              "id": 77911,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77910,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 77935,
                  "src": "1459:12:132",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 77909,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1459:5:132",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1458:14:132"
            },
            "scope": 77978,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 77977,
            "nodeType": "FunctionDefinition",
            "src": "1894:318:132",
            "nodes": [],
            "body": {
              "id": 77976,
              "nodeType": "Block",
              "src": "2061:151:132",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77955,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77942,
                        "src": "2092:6:132",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 77954,
                      "name": "_consumeOffRampRateLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78847,
                      "src": "2067:24:132",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 77956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2067:32:132",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77957,
                  "nodeType": "ExpressionStatement",
                  "src": "2067:32:132"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77965,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77940,
                        "src": "2143:8:132",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77966,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77942,
                        "src": "2153:6:132",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 77961,
                                "name": "i_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 78407,
                                "src": "2128:7:132",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$137559",
                                  "typeString": "contract IERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$137559",
                                  "typeString": "contract IERC20"
                                }
                              ],
                              "id": 77960,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2120:7:132",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 77959,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2120:7:132",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 77962,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2120:16:132",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 77958,
                          "name": "IBurnMintERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 125587,
                          "src": "2105:14:132",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBurnMintERC20_$125587_$",
                            "typeString": "type(contract IBurnMintERC20)"
                          }
                        },
                        "id": 77963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2105:32:132",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBurnMintERC20_$125587",
                          "typeString": "contract IBurnMintERC20"
                        }
                      },
                      "id": 77964,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2138:4:132",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 125564,
                      "src": "2105:37:132",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 77967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2105:55:132",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77968,
                  "nodeType": "ExpressionStatement",
                  "src": "2105:55:132"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 77970,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2178:3:132",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 77971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2182:6:132",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2178:10:132",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77972,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77940,
                        "src": "2190:8:132",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77973,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77942,
                        "src": "2200:6:132",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 77969,
                      "name": "Minted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78351,
                      "src": "2171:6:132",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 77974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2171:36:132",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77975,
                  "nodeType": "EmitStatement",
                  "src": "2166:41:132"
                }
              ]
            },
            "baseFunctions": [
              71184
            ],
            "documentation": {
              "id": 77936,
              "nodeType": "StructuredDocumentation",
              "src": "1622:269:132",
              "text": "@notice Mint tokens from the pool to the recipient\n @param receiver Recipient address\n @param amount Amount to mint\n @dev The whenHealthy check is important to ensure that even if a ramp is compromised\n we're able to stop token movement via ARM."
            },
            "functionSelector": "8627fad6",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 77950,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 77949,
                  "name": "whenHealthy",
                  "nameLocations": [
                    "2037:11:132"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 79128,
                  "src": "2037:11:132"
                },
                "nodeType": "ModifierInvocation",
                "src": "2037:11:132"
              },
              {
                "id": 77952,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 77951,
                  "name": "onlyOffRamp",
                  "nameLocations": [
                    "2049:11:132"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 78973,
                  "src": "2049:11:132"
                },
                "nodeType": "ModifierInvocation",
                "src": "2049:11:132"
              }
            ],
            "name": "releaseOrMint",
            "nameLocation": "1903:13:132",
            "overrides": {
              "id": 77948,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2028:8:132"
            },
            "parameters": {
              "id": 77947,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77938,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 77977,
                  "src": "1922:12:132",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 77937,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1922:5:132",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77940,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "1948:8:132",
                  "nodeType": "VariableDeclaration",
                  "scope": 77977,
                  "src": "1940:16:132",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77939,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1940:7:132",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77942,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1970:6:132",
                  "nodeType": "VariableDeclaration",
                  "scope": 77977,
                  "src": "1962:14:132",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 77941,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1962:7:132",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77944,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 77977,
                  "src": "1982:6:132",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 77943,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1982:6:132",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77946,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 77977,
                  "src": "1994:12:132",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 77945,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1994:5:132",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1916:94:132"
            },
            "returnParameters": {
              "id": 77953,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2061:0:132"
            },
            "scope": 77978,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 77864,
              "name": "TokenPool",
              "nameLocations": [
                "694:9:132"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 79129,
              "src": "694:9:132"
            },
            "id": 77865,
            "nodeType": "InheritanceSpecifier",
            "src": "694:9:132"
          },
          {
            "baseName": {
              "id": 77866,
              "name": "ITypeAndVersion",
              "nameLocations": [
                "705:15:132"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 122903,
              "src": "705:15:132"
            },
            "id": 77867,
            "nodeType": "InheritanceSpecifier",
            "src": "705:15:132"
          }
        ],
        "canonicalName": "BurnMintTokenPool",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 77863,
          "nodeType": "StructuredDocumentation",
          "src": "262:402:132",
          "text": "@notice This pool mints and burns a 3rd-party token.\n @dev Pool whitelisting mode is set in the constructor and cannot be modified later.\n It either accepts any address as originalSender, or only accepts whitelisted originalSender.\n The only way to change whitelisting mode is to deploy a new pool.\n If that is expected, please make sure the token's burner/minter roles are adjustable."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          77978,
          122903,
          79129,
          139523,
          122449,
          122271,
          122433,
          122895,
          71192
        ],
        "name": "BurnMintTokenPool",
        "nameLocation": "673:17:132",
        "scope": 77979,
        "usedErrors": [
          71805,
          71815,
          71823,
          71829,
          71835,
          78305,
          78307,
          78311,
          78313,
          78317,
          78319,
          78323
        ],
        "usedEvents": [
          71839,
          71844,
          78329,
          78335,
          78343,
          78351,
          78358,
          78365,
          78369,
          78376,
          78383,
          78387,
          78391,
          78395,
          122287,
          122293
        ]
      }
    ],
    "license": "BUSL-1.1"
  },
  "id": 132
}
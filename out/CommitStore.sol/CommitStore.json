{
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint64",
              "name": "chainSelector",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "sourceChainSelector",
              "type": "uint64"
            },
            {
              "internalType": "address",
              "name": "onRamp",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "armProxy",
              "type": "address"
            }
          ],
          "internalType": "struct CommitStore.StaticConfig",
          "name": "staticConfig",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "BadARMSignal",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "expected",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "actual",
          "type": "bytes32"
        }
      ],
      "name": "ConfigDigestMismatch",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "expected",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "actual",
          "type": "uint256"
        }
      ],
      "name": "ForkedChain",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidCommitStoreConfig",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "name": "InvalidConfig",
      "type": "error"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint64",
              "name": "min",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "max",
              "type": "uint64"
            }
          ],
          "internalType": "struct CommitStore.Interval",
          "name": "interval",
          "type": "tuple"
        }
      ],
      "name": "InvalidInterval",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidProof",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidRoot",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LeavesCannotBeEmpty",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NonUniqueSignatures",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OracleCannotBeZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PausedError",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RootAlreadyCommitted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SignaturesOutOfRegistration",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "StaleReport",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnauthorizedSigner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnauthorizedTransmitter",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "expected",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "actual",
          "type": "uint256"
        }
      ],
      "name": "WrongMessageLength",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "WrongNumberOfSignatures",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint64",
              "name": "chainSelector",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "sourceChainSelector",
              "type": "uint64"
            },
            {
              "internalType": "address",
              "name": "onRamp",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "armProxy",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct CommitStore.StaticConfig",
          "name": "staticConfig",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "priceRegistry",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct CommitStore.DynamicConfig",
          "name": "dynamicConfig",
          "type": "tuple"
        }
      ],
      "name": "ConfigSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "previousConfigBlockNumber",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "configDigest",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "configCount",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "signers",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "transmitters",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "f",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "onchainConfig",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "offchainConfigVersion",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "offchainConfig",
          "type": "bytes"
        }
      ],
      "name": "ConfigSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferRequested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "sourceToken",
                      "type": "address"
                    },
                    {
                      "internalType": "uint224",
                      "name": "usdPerToken",
                      "type": "uint224"
                    }
                  ],
                  "internalType": "struct Internal.TokenPriceUpdate[]",
                  "name": "tokenPriceUpdates",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "uint64",
                      "name": "destChainSelector",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint224",
                      "name": "usdPerUnitGas",
                      "type": "uint224"
                    }
                  ],
                  "internalType": "struct Internal.GasPriceUpdate[]",
                  "name": "gasPriceUpdates",
                  "type": "tuple[]"
                }
              ],
              "internalType": "struct Internal.PriceUpdates",
              "name": "priceUpdates",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint64",
                  "name": "min",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "max",
                  "type": "uint64"
                }
              ],
              "internalType": "struct CommitStore.Interval",
              "name": "interval",
              "type": "tuple"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            }
          ],
          "indexed": false,
          "internalType": "struct CommitStore.CommitReport",
          "name": "report",
          "type": "tuple"
        }
      ],
      "name": "ReportAccepted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "root",
          "type": "bytes32"
        }
      ],
      "name": "RootRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "configDigest",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "epoch",
          "type": "uint32"
        }
      ],
      "name": "Transmitted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDynamicConfig",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "priceRegistry",
              "type": "address"
            }
          ],
          "internalType": "struct CommitStore.DynamicConfig",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getExpectedNextSequenceNumber",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLatestPriceEpochAndRound",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "root",
          "type": "bytes32"
        }
      ],
      "name": "getMerkleRoot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStaticConfig",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint64",
              "name": "chainSelector",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "sourceChainSelector",
              "type": "uint64"
            },
            {
              "internalType": "address",
              "name": "onRamp",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "armProxy",
              "type": "address"
            }
          ],
          "internalType": "struct CommitStore.StaticConfig",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTransmitters",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isARMHealthy",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "root",
          "type": "bytes32"
        }
      ],
      "name": "isBlessed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isUnpausedAndARMHealthy",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestConfigDetails",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "configCount",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "blockNumber",
          "type": "uint32"
        },
        {
          "internalType": "bytes32",
          "name": "configDigest",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestConfigDigestAndEpoch",
      "outputs": [
        {
          "internalType": "bool",
          "name": "scanLogs",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "configDigest",
          "type": "bytes32"
        },
        {
          "internalType": "uint32",
          "name": "epoch",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "rootToReset",
          "type": "bytes32[]"
        }
      ],
      "name": "resetUnblessedRoots",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint40",
          "name": "latestPriceEpochAndRound",
          "type": "uint40"
        }
      ],
      "name": "setLatestPriceEpochAndRound",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "minSeqNr",
          "type": "uint64"
        }
      ],
      "name": "setMinSeqNr",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "signers",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "transmitters",
          "type": "address[]"
        },
        {
          "internalType": "uint8",
          "name": "f",
          "type": "uint8"
        },
        {
          "internalType": "bytes",
          "name": "onchainConfig",
          "type": "bytes"
        },
        {
          "internalType": "uint64",
          "name": "offchainConfigVersion",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "offchainConfig",
          "type": "bytes"
        }
      ],
      "name": "setOCR2Config",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[3]",
          "name": "reportContext",
          "type": "bytes32[3]"
        },
        {
          "internalType": "bytes",
          "name": "report",
          "type": "bytes"
        },
        {
          "internalType": "bytes32[]",
          "name": "rs",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "ss",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes32",
          "name": "rawVs",
          "type": "bytes32"
        }
      ],
      "name": "transmit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "typeAndVersion",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "hashedLeaves",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "proofs",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256",
          "name": "proofFlagBits",
          "type": "uint256"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x61014060405260098054600165ff000000000160401b03191660011790553480156200002a57600080fd5b506040516200384c3803806200384c8339810160408190526200004d9162000272565b600033808281620000a55760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f000000000000000060448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b0384811691909117909155811615620000d857620000d88162000192565b50505015156080524660a05260408101516001600160a01b0316158062000107575080516001600160401b0316155b806200011e575060208101516001600160401b0316155b8062000135575060608101516001600160a01b0316155b156200015457604051631fc5f15f60e11b815260040160405180910390fd5b80516001600160401b0390811660c05260208201511660e05260408101516001600160a01b0390811661010052606090910151166101205262000306565b336001600160a01b03821603620001ec5760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016200009c565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b80516001600160401b03811681146200025557600080fd5b919050565b80516001600160a01b03811681146200025557600080fd5b6000608082840312156200028557600080fd5b604051608081016001600160401b0381118282101715620002b657634e487b7160e01b600052604160045260246000fd5b604052620002c4836200023d565b8152620002d4602084016200023d565b6020820152620002e7604084016200025a565b6040820152620002fa606084016200025a565b60608201529392505050565b60805160a05160c05160e05161010051610120516134b7620003956000396000818161026d01528181610537015281816111730152818161199f01528181611bee015261206b0152600081816102310152611bc70152600081816102010152611ba00152600081816101d10152611b710152600081816112ee015261133a015260006113b501526134b76000f3fe608060405234801561001057600080fd5b50600436106101985760003560e01c806379ba5097116100e3578063ad7a22f81161008c578063f2fde38b11610066578063f2fde38b146104fa578063f47a86901461050d578063ff888fb11461052057600080fd5b8063ad7a22f8146104b4578063afcb95d7146104c7578063b1dc65a4146104e757600080fd5b80638da5cb5b116100bd5780638da5cb5b146104645780638db94e441461048c578063a7206cd61461049457600080fd5b806379ba50971461042457806381ff70481461042c5780638456cb591461045c57600080fd5b806332048875116101455780635c975abb1161011f5780635c975abb146103b4578063666cab8d146103d05780637437ff9f146103e557600080fd5b806332048875146103795780633f4ba83a1461039a5780634120fccd146103a257600080fd5b8063181f5a7711610176578063181f5a77146103085780631ef381741461035157806329b980e41461036657600080fd5b806306285c691461019d5780630a6cd30d146102c057806310c374ed146102d8575b600080fd5b6102aa60408051608081018252600080825260208201819052918101829052606081019190915260405180608001604052807f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff1681526020017f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff1681526020017f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1681526020017f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16815250905090565b6040516102b79190612656565b60405180910390f35b6102c8610533565b60405190151581526020016102b7565b60095468010000000000000000900464ffffffffff165b60405167ffffffffffffffff90911681526020016102b7565b6103446040518060400160405280601181526020017f436f6d6d697453746f726520312e322e3000000000000000000000000000000081525081565b6040516102b79190612713565b61036461035f366004612966565b6105ca565b005b610364610374366004612a33565b610deb565b61038c610387366004612aa6565b610e37565b6040519081526020016102b7565b610364610f2d565b60095467ffffffffffffffff166102ef565b6009546d0100000000000000000000000000900460ff166102c8565b6103d8610f93565b6040516102b79190612b6b565b604080516020808201835260009091528151808201835260085473ffffffffffffffffffffffffffffffffffffffff16908190529151918252016102b7565b610364611002565b6004546002546040805163ffffffff808516825264010000000090940490931660208401528201526060016102b7565b6103646110ff565b60005460405173ffffffffffffffffffffffffffffffffffffffff90911681526020016102b7565b6102c861116f565b61038c6104a2366004612b7e565b6000908152600a602052604090205490565b6103646104c2366004612b97565b611226565b6040805160018152600060208201819052918101919091526060016102b7565b6103646104f5366004612bb2565b611269565b610364610508366004612c97565b611889565b61036461051b366004612cb4565b61189d565b6102c861052e366004612b7e565b61193c565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663397796f76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c49190612cf6565b15905090565b855185518560ff16601f831115610642576040517f89a6198900000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f746f6f206d616e79207369676e6572730000000000000000000000000000000060448201526064015b60405180910390fd5b806000036106ac576040517f89a6198900000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f66206d75737420626520706f73697469766500000000000000000000000000006044820152606401610639565b81831461073a576040517f89a61989000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f6f7261636c6520616464726573736573206f7574206f6620726567697374726160448201527f74696f6e000000000000000000000000000000000000000000000000000000006064820152608401610639565b610745816003612d47565b83116107ad576040517f89a6198900000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f6661756c74792d6f7261636c65206620746f6f206869676800000000000000006044820152606401610639565b6107b5611a10565b6107be86611a93565b60065460005b818110156108ba5760056000600683815481106107e3576107e3612d5e565b600091825260208083209091015473ffffffffffffffffffffffffffffffffffffffff168352820192909252604001812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001690556007805460059291908490811061085357610853612d5e565b600091825260208083209091015473ffffffffffffffffffffffffffffffffffffffff168352820192909252604001902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001690556108b381612d8d565b90506107c4565b50895160005b81811015610c935760008c82815181106108dc576108dc612d5e565b60200260200101519050600060028111156108f9576108f9612dc5565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260056020526040902054610100900460ff16600281111561093857610938612dc5565b1461099f576040517f89a6198900000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f7265706561746564207369676e657220616464726573730000000000000000006044820152606401610639565b73ffffffffffffffffffffffffffffffffffffffff81166109ec576040517fd6c62c9b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040805180820190915260ff83168152602081016001905273ffffffffffffffffffffffffffffffffffffffff821660009081526005602090815260409091208251815460ff9091167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082168117835592840151919283917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001617610100836002811115610a9c57610a9c612dc5565b021790555090505060008c8381518110610ab857610ab8612d5e565b6020026020010151905060006002811115610ad557610ad5612dc5565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260056020526040902054610100900460ff166002811115610b1457610b14612dc5565b14610b7b576040517f89a6198900000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f7265706561746564207472616e736d69747465722061646472657373000000006044820152606401610639565b73ffffffffffffffffffffffffffffffffffffffff8116610bc8576040517fd6c62c9b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040805180820190915260ff84168152602081016002905273ffffffffffffffffffffffffffffffffffffffff821660009081526005602090815260409091208251815460ff9091167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082168117835592840151919283917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001617610100836002811115610c7857610c78612dc5565b0217905550905050505080610c8c90612d8d565b90506108c0565b508a51610ca79060069060208e0190612598565b508951610cbb9060079060208d0190612598565b506003805460ff838116610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000909216908c161717905560048054610d41914691309190600090610d139063ffffffff16612df4565b91906101000a81548163ffffffff021916908363ffffffff160217905563ffffffff168e8e8e8e8e8e611c4f565b600260000181905550600060048054906101000a900463ffffffff169050436004806101000a81548163ffffffff021916908363ffffffff1602179055507f1591690b8638f5fb2dbec82ac741805ac5da8b45dc5263f4875b0496fdce4e0581600260000154600460009054906101000a900463ffffffff168f8f8f8f8f8f604051610dd599989796959493929190612e17565b60405180910390a1505050505050505050505050565b610df3611a10565b6009805464ffffffffff90921668010000000000000000027fffffffffffffffffffffffffffffffffffffff0000000000ffffffffffffffff909216919091179055565b6009546000906d0100000000000000000000000000900460ff1615610e88576040517feced32bc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610ef987878080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808b0282810182019093528a82529093508a925089918291850190849080828437600092019190915250889250611cfa915050565b9050610f048161193c565b610f12576000915050610f24565b6000908152600a602052604090205490505b95945050505050565b610f35611a10565b600980547fffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffffff1690556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa906020015b60405180910390a1565b60606007805480602002602001604051908101604052809291908181526020018280548015610ff857602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610fcd575b5050505050905090565b60015473ffffffffffffffffffffffffffffffffffffffff163314611083576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4d7573742062652070726f706f736564206f776e6572000000000000000000006044820152606401610639565b60008054337fffffffffffffffffffffffff00000000000000000000000000000000000000008083168217845560018054909116905560405173ffffffffffffffffffffffffffffffffffffffff90921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b611107611a10565b600980547fffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffffff166d01000000000000000000000000001790556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602001610f89565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663397796f76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112009190612cf6565b15801561122157506009546d0100000000000000000000000000900460ff16155b905090565b61122e611a10565b600980547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001667ffffffffffffffff92909216919091179055565b611278878760208b013561201b565b6040805160608101825260025480825260035460ff8082166020850152610100909104169282019290925289359182146112eb5780516040517f93df584c000000000000000000000000000000000000000000000000000000008152600481019190915260248101839052604401610639565b467f00000000000000000000000000000000000000000000000000000000000000001461136c576040517f0f01ce850000000000000000000000000000000000000000000000000000000081527f00000000000000000000000000000000000000000000000000000000000000006004820152466024820152604401610639565b6040805183815260208c81013560081c63ffffffff16908201527fb04e63db38c49950639fa09d29872f21f5d49d614f3a969d8adf3d4b52e41a62910160405180910390a160007f00000000000000000000000000000000000000000000000000000000000000001561140e576002826020015183604001516113ef9190612ead565b6113f99190612ec6565b611404906001612ead565b60ff169050611424565b602082015161141e906001612ead565b60ff1690505b86811461145d576040517f71253a2500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b868514611496576040517fa75d88af00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360009081526005602090815260408083208151808301909252805460ff808216845292939192918401916101009091041660028111156114d9576114d9612dc5565b60028111156114ea576114ea612dc5565b905250905060028160200151600281111561150757611507612dc5565b14801561154e57506007816000015160ff168154811061152957611529612d5e565b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff1633145b611584576040517fda0f08e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506000611592866020612d47565b61159d896020612d47565b6115a98c610144612f0f565b6115b39190612f0f565b6115bd9190612f0f565b9050368114611601576040517f8e1192e100000000000000000000000000000000000000000000000000000000815260048101829052366024820152604401610639565b5060008a8a604051611614929190612f22565b60405190819003812061162b918e90602001612f32565b60405160208183030381529060405280519060200120905061164b612622565b8860005b818110156118785760006001858a846020811061166e5761166e612d5e565b61167b91901a601b612ead565b8f8f8681811061168d5761168d612d5e565b905060200201358e8e878181106116a6576116a6612d5e565b90506020020135604051600081526020016040526040516116e3949392919093845260ff9290921660208401526040830152606082015260800190565b6020604051602081039080840390855afa158015611705573d6000803e3d6000fd5b5050604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081015173ffffffffffffffffffffffffffffffffffffffff8116600090815260056020908152848220848601909552845460ff808216865293975091955092939284019161010090910416600281111561178857611788612dc5565b600281111561179957611799612dc5565b90525090506001816020015160028111156117b6576117b6612dc5565b146117ed576040517fca31867a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8051859060ff16601f811061180457611804612d5e565b602002015115611840576040517ff67bc7c400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600185826000015160ff16601f811061185b5761185b612d5e565b9115156020909202015250611871905081612d8d565b905061164f565b505050505050505050505050505050565b611891611a10565b61189a81612428565b50565b6118a5611a10565b60005b818110156119375760008383838181106118c4576118c4612d5e565b9050602002013590506118d68161193c565b611926576000818152600a602052604080822091909155517f202f1139a3e334b6056064c0e9b19fd07e44a88d8f6e5ded571b24cf8c371f129061191d9083815260200190565b60405180910390a15b5061193081612d8d565b90506118a8565b505050565b6040805180820182523081526020810183815291517f4d616771000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff9081166004830152915160248201526000917f00000000000000000000000000000000000000000000000000000000000000001690634d61677190604401602060405180830381865afa1580156119e6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a0a9190612cf6565b92915050565b60005473ffffffffffffffffffffffffffffffffffffffff163314611a91576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e6572000000000000000000006044820152606401610639565b565b600081806020019051810190611aa99190612f46565b805190915073ffffffffffffffffffffffffffffffffffffffff16611afa576040517f3f8be2be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8051600880547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff928316179055600980547fffffffffffffffffffffffffffffffffffffff0000000000ffffffffffffffff169055604080516080810182527f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff90811682527f00000000000000000000000000000000000000000000000000000000000000001660208201527f00000000000000000000000000000000000000000000000000000000000000008316818301527f00000000000000000000000000000000000000000000000000000000000000009092166060830152517fc9d7123efd4203e60b0f0a4b1dbc4800fc97ce63679f71c3a27279b24a7ddec391611c43918490612f92565b60405180910390a15050565b6000808a8a8a8a8a8a8a8a8a604051602001611c739998979695949392919061300f565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905280516020909101207dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff167e01000000000000000000000000000000000000000000000000000000000000179150509998505050505050505050565b8251825160009190818303611d3b576040517f11a6b26400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6101018211801590611d4f57506101018111155b611d85576040517f09bde33900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82820101610100811115611de6576040517f09bde33900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600003611e135786600081518110611e0157611e01612d5e565b60200260200101519350505050612014565b60008167ffffffffffffffff811115611e2e57611e2e612726565b604051908082528060200260200182016040528015611e57578160200160208202803683370190505b50905060008080805b85811015611f9a5760006001821b8b811603611ebb5788851015611ea4578c5160018601958e918110611e9557611e95612d5e565b60200260200101519050611edd565b8551600185019487918110611e9557611e95612d5e565b8b5160018401938d918110611ed257611ed2612d5e565b602002602001015190505b600089861015611f0d578d5160018701968f918110611efe57611efe612d5e565b60200260200101519050611f2f565b8651600186019588918110611f2457611f24612d5e565b602002602001015190505b82851115611f69576040517f09bde33900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611f73828261251d565b878481518110611f8557611f85612d5e565b60209081029190910101525050600101611e60565b506001850382148015611fac57508683145b8015611fb757508581145b611fed576040517f09bde33900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b83600186038151811061200257612002612d5e565b60200260200101519750505050505050505b9392505050565b6009546d0100000000000000000000000000900460ff1615612069576040517feced32bc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663397796f76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156120d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120f89190612cf6565b1561212f576040517fc148371500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061213d8385018561319b565b8051515190915015158061215657508051602001515115155b1561228e5760095464ffffffffff8084166801000000000000000090920416101561225357600980547fffffffffffffffffffffffffffffffffffffff0000000000ffffffffffffffff166801000000000000000064ffffffffff85160217905560085481516040517f3937306f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90921691633937306f9161220d916004016133ee565b600060405180830381600087803b15801561222757600080fd5b505af115801561223b573d6000803e3d6000fd5b50505050604081015161224e5750505050565b61228e565b604081015161228e576040517ff803a2ca00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60208101515160095467ffffffffffffffff90811691161415806122c9575060208082015190810151905167ffffffffffffffff9182169116115b156123065780602001516040517fbb1ae18d0000000000000000000000000000000000000000000000000000000081526004016106399190613401565b6040810151612341576040517f504570e300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040808201516000908152600a60205220541561238a576040517fa0bce24f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b602080820151015161239d906001613426565b600980547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001667ffffffffffffffff929092169190911790556040818101516000908152600a602052819020429055517f291698c01aa71f912280535d88a00d2c59fb63530a3f5d0098560468acb9ebf59061241a90839061344e565b60405180910390a150505050565b3373ffffffffffffffffffffffffffffffffffffffff8216036124a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152606401610639565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b600081831061255f5760408051600160208083019190915281830185905260608083018790528351808403909101815260809092019092528051910120612014565b60408051600160208083019190915281830186905260608083018690528351808403909101815260809092019092528051910120612014565b828054828255906000526020600020908101928215612612579160200282015b8281111561261257825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9091161782556020909201916001909101906125b8565b5061261e929150612641565b5090565b604051806103e00160405280601f906020820280368337509192915050565b5b8082111561261e5760008155600101612642565b60808101611a0a828467ffffffffffffffff80825116835280602083015116602084015250604081015173ffffffffffffffffffffffffffffffffffffffff808216604085015280606084015116606085015250505050565b6000815180845260005b818110156126d5576020818501810151868301820152016126b9565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b60208152600061201460208301846126af565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561277857612778612726565b60405290565b6040516060810167ffffffffffffffff8111828210171561277857612778612726565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156127e8576127e8612726565b604052919050565b600067ffffffffffffffff82111561280a5761280a612726565b5060051b60200190565b73ffffffffffffffffffffffffffffffffffffffff8116811461189a57600080fd5b600082601f83011261284757600080fd5b8135602061285c612857836127f0565b6127a1565b82815260059290921b8401810191818101908684111561287b57600080fd5b8286015b8481101561289f57803561289281612814565b835291830191830161287f565b509695505050505050565b803560ff811681146128bb57600080fd5b919050565b600082601f8301126128d157600080fd5b813567ffffffffffffffff8111156128eb576128eb612726565b61291c60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116016127a1565b81815284602083860101111561293157600080fd5b816020850160208301376000918101602001919091529392505050565b803567ffffffffffffffff811681146128bb57600080fd5b60008060008060008060c0878903121561297f57600080fd5b863567ffffffffffffffff8082111561299757600080fd5b6129a38a838b01612836565b975060208901359150808211156129b957600080fd5b6129c58a838b01612836565b96506129d360408a016128aa565b955060608901359150808211156129e957600080fd5b6129f58a838b016128c0565b9450612a0360808a0161294e565b935060a0890135915080821115612a1957600080fd5b50612a2689828a016128c0565b9150509295509295509295565b600060208284031215612a4557600080fd5b813564ffffffffff8116811461201457600080fd5b60008083601f840112612a6c57600080fd5b50813567ffffffffffffffff811115612a8457600080fd5b6020830191508360208260051b8501011115612a9f57600080fd5b9250929050565b600080600080600060608688031215612abe57600080fd5b853567ffffffffffffffff80821115612ad657600080fd5b612ae289838a01612a5a565b90975095506020880135915080821115612afb57600080fd5b50612b0888828901612a5a565b96999598509660400135949350505050565b600081518084526020808501945080840160005b83811015612b6057815173ffffffffffffffffffffffffffffffffffffffff1687529582019590820190600101612b2e565b509495945050505050565b6020815260006120146020830184612b1a565b600060208284031215612b9057600080fd5b5035919050565b600060208284031215612ba957600080fd5b6120148261294e565b60008060008060008060008060e0898b031215612bce57600080fd5b606089018a811115612bdf57600080fd5b8998503567ffffffffffffffff80821115612bf957600080fd5b818b0191508b601f830112612c0d57600080fd5b813581811115612c1c57600080fd5b8c6020828501011115612c2e57600080fd5b6020830199508098505060808b0135915080821115612c4c57600080fd5b612c588c838d01612a5a565b909750955060a08b0135915080821115612c7157600080fd5b50612c7e8b828c01612a5a565b999c989b50969995989497949560c00135949350505050565b600060208284031215612ca957600080fd5b813561201481612814565b60008060208385031215612cc757600080fd5b823567ffffffffffffffff811115612cde57600080fd5b612cea85828601612a5a565b90969095509350505050565b600060208284031215612d0857600080fd5b8151801515811461201457600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082028115828204841417611a0a57611a0a612d18565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612dbe57612dbe612d18565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600063ffffffff808316818103612e0d57612e0d612d18565b6001019392505050565b600061012063ffffffff808d1684528b6020850152808b16604085015250806060840152612e478184018a612b1a565b90508281036080840152612e5b8189612b1a565b905060ff871660a084015282810360c0840152612e7881876126af565b905067ffffffffffffffff851660e0840152828103610100840152612e9d81856126af565b9c9b505050505050505050505050565b60ff8181168382160190811115611a0a57611a0a612d18565b600060ff831680612f00577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b8060ff84160491505092915050565b80820180821115611a0a57611a0a612d18565b8183823760009101908152919050565b828152606082602083013760800192915050565b600060208284031215612f5857600080fd5b6040516020810181811067ffffffffffffffff82111715612f7b57612f7b612726565b6040528251612f8981612814565b81529392505050565b60a08101612feb828567ffffffffffffffff80825116835280602083015116602084015250604081015173ffffffffffffffffffffffffffffffffffffffff808216604085015280606084015116606085015250505050565b73ffffffffffffffffffffffffffffffffffffffff83511660808301529392505050565b60006101208b835273ffffffffffffffffffffffffffffffffffffffff8b16602084015267ffffffffffffffff808b1660408501528160608501526130568285018b612b1a565b9150838203608085015261306a828a612b1a565b915060ff881660a085015283820360c085015261308782886126af565b90861660e08501528381036101008501529050612e9d81856126af565b80357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff811681146128bb57600080fd5b600082601f8301126130e157600080fd5b813560206130f1612857836127f0565b82815260069290921b8401810191818101908684111561311057600080fd5b8286015b8481101561289f576040818903121561312d5760008081fd5b613135612755565b61313e8261294e565b815261314b8583016130a4565b81860152835291830191604001613114565b60006040828403121561316f57600080fd5b613177612755565b90506131828261294e565b81526131906020830161294e565b602082015292915050565b600060208083850312156131ae57600080fd5b823567ffffffffffffffff808211156131c657600080fd5b90840190608082870312156131da57600080fd5b6131e261277e565b8235828111156131f157600080fd5b8301604081890381131561320457600080fd5b61320c612755565b82358581111561321b57600080fd5b8301601f81018b1361322c57600080fd5b803561323a612857826127f0565b81815260069190911b8201890190898101908d83111561325957600080fd5b928a01925b828410156132a95785848f0312156132765760008081fd5b61327e612755565b843561328981612814565b8152613296858d016130a4565b818d0152825292850192908a019061325e565b845250505082870135858111156132bf57600080fd5b6132cb8b8286016130d0565b828901525083526132de8986880161315d565b8684015260608501358184015250508094505050505092915050565b805160408084528151848201819052600092602091908201906060870190855b81811015613373578351805173ffffffffffffffffffffffffffffffffffffffff1684528501517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1685840152928401929185019160010161331a565b50508583015187820388850152805180835290840192506000918401905b808310156133e2578351805167ffffffffffffffff1683528501517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1685830152928401926001929092019190850190613391565b50979650505050505050565b60208152600061201460208301846132fa565b60408101611a0a8284805167ffffffffffffffff908116835260209182015116910152565b67ffffffffffffffff81811683821601908082111561344757613447612d18565b5092915050565b60208152600082516080602084015261346a60a08401826132fa565b905060208401516134956040850182805167ffffffffffffffff908116835260209182015116910152565b5060408401516080840152809150509291505056fea164736f6c6343000815000a",
    "sourceMap": "470:12640:101:-:0;;;2842:29;;;-1:-1:-1;;;;;;3018:29:101;2870:1;3018:29;;;3771:479;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3826:5;291:10:250;;3826:5:101;291:10:250;529:59:249;;;;-1:-1:-1;;;529:59:249;;1401:2:351;529:59:249;;;1383:21:351;1440:2;1420:18;;;1413:30;1479:26;1459:18;;;1452:54;1523:18;;529:59:249;;;;;;;;;595:7;:18;;-1:-1:-1;;;;;;595:18:249;-1:-1:-1;;;;;595:18:249;;;;;;;;;;623:26;;;619:79;;659:32;678:12;659:18;:32::i;:::-;-1:-1:-1;;;3480:31:128;;;;3529:13;3517:25;;3850:19:101::1;::::0;::::1;::::0;-1:-1:-1;;;;;3850:33:101::1;::::0;;:74:::1;;-1:-1:-1::0;3893:26:101;;-1:-1:-1;;;;;3893:31:101::1;::::0;3850:74:::1;:121;;;-1:-1:-1::0;3934:32:101::1;::::0;::::1;::::0;-1:-1:-1;;;;;3934:37:101::1;::::0;3850:121:::1;:166;;;-1:-1:-1::0;3981:21:101::1;::::0;::::1;::::0;-1:-1:-1;;;;;3981:35:101::1;::::0;3850:166:::1;3839:217;;;4030:26;;-1:-1:-1::0;;;4030:26:101::1;;;;;;;;;;;3839:217;4081:26:::0;;-1:-1:-1;;;;;4063:44:101;;::::1;;::::0;4137:32:::1;::::0;::::1;::::0;4113:56:::1;;::::0;4186:19:::1;::::0;::::1;::::0;-1:-1:-1;;;;;4175:30:101;;::::1;;::::0;4224:21:::1;::::0;;::::1;::::0;4211:34:::1;;::::0;470:12640;;1482:188:249;1550:10;-1:-1:-1;;;;;1544:16:249;;;1536:52;;;;-1:-1:-1;;;1536:52:249;;1754:2:351;1536:52:249;;;1736:21:351;1793:2;1773:18;;;1766:30;1832:25;1812:18;;;1805:53;1875:18;;1536:52:249;1552:347:351;1536:52:249;1595:14;:19;;-1:-1:-1;;;;;;1595:19:249;-1:-1:-1;;;;;1595:19:249;;;;;;;;;-1:-1:-1;1653:7:249;;1626:39;;1595:19;;1653:7;;1626:39;;-1:-1:-1;1626:39:249;1482:188;:::o;14:175:351:-;92:13;;-1:-1:-1;;;;;134:30:351;;124:41;;114:69;;179:1;176;169:12;114:69;14:175;;;:::o;194:177::-;273:13;;-1:-1:-1;;;;;315:31:351;;305:42;;295:70;;361:1;358;351:12;376:818;477:6;530:3;518:9;509:7;505:23;501:33;498:53;;;547:1;544;537:12;498:53;580:2;574:9;622:3;610:16;;-1:-1:-1;;;;;641:34:351;;677:22;;;638:62;635:185;;;742:10;737:3;733:20;730:1;723:31;777:4;774:1;767:15;805:4;802:1;795:15;635:185;836:2;829:22;875:39;904:9;875:39;:::i;:::-;867:6;860:55;948:48;992:2;981:9;977:18;948:48;:::i;:::-;943:2;935:6;931:15;924:73;1030:49;1075:2;1064:9;1060:18;1030:49;:::i;:::-;1025:2;1017:6;1013:15;1006:74;1113:49;1158:2;1147:9;1143:18;1113:49;:::i;:::-;1108:2;1096:15;;1089:74;1100:6;376:818;-1:-1:-1;;;376:818:351:o;1552:347::-;470:12640:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101985760003560e01c806379ba5097116100e3578063ad7a22f81161008c578063f2fde38b11610066578063f2fde38b146104fa578063f47a86901461050d578063ff888fb11461052057600080fd5b8063ad7a22f8146104b4578063afcb95d7146104c7578063b1dc65a4146104e757600080fd5b80638da5cb5b116100bd5780638da5cb5b146104645780638db94e441461048c578063a7206cd61461049457600080fd5b806379ba50971461042457806381ff70481461042c5780638456cb591461045c57600080fd5b806332048875116101455780635c975abb1161011f5780635c975abb146103b4578063666cab8d146103d05780637437ff9f146103e557600080fd5b806332048875146103795780633f4ba83a1461039a5780634120fccd146103a257600080fd5b8063181f5a7711610176578063181f5a77146103085780631ef381741461035157806329b980e41461036657600080fd5b806306285c691461019d5780630a6cd30d146102c057806310c374ed146102d8575b600080fd5b6102aa60408051608081018252600080825260208201819052918101829052606081019190915260405180608001604052807f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff1681526020017f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff1681526020017f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1681526020017f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16815250905090565b6040516102b79190612656565b60405180910390f35b6102c8610533565b60405190151581526020016102b7565b60095468010000000000000000900464ffffffffff165b60405167ffffffffffffffff90911681526020016102b7565b6103446040518060400160405280601181526020017f436f6d6d697453746f726520312e322e3000000000000000000000000000000081525081565b6040516102b79190612713565b61036461035f366004612966565b6105ca565b005b610364610374366004612a33565b610deb565b61038c610387366004612aa6565b610e37565b6040519081526020016102b7565b610364610f2d565b60095467ffffffffffffffff166102ef565b6009546d0100000000000000000000000000900460ff166102c8565b6103d8610f93565b6040516102b79190612b6b565b604080516020808201835260009091528151808201835260085473ffffffffffffffffffffffffffffffffffffffff16908190529151918252016102b7565b610364611002565b6004546002546040805163ffffffff808516825264010000000090940490931660208401528201526060016102b7565b6103646110ff565b60005460405173ffffffffffffffffffffffffffffffffffffffff90911681526020016102b7565b6102c861116f565b61038c6104a2366004612b7e565b6000908152600a602052604090205490565b6103646104c2366004612b97565b611226565b6040805160018152600060208201819052918101919091526060016102b7565b6103646104f5366004612bb2565b611269565b610364610508366004612c97565b611889565b61036461051b366004612cb4565b61189d565b6102c861052e366004612b7e565b61193c565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663397796f76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c49190612cf6565b15905090565b855185518560ff16601f831115610642576040517f89a6198900000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f746f6f206d616e79207369676e6572730000000000000000000000000000000060448201526064015b60405180910390fd5b806000036106ac576040517f89a6198900000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f66206d75737420626520706f73697469766500000000000000000000000000006044820152606401610639565b81831461073a576040517f89a61989000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f6f7261636c6520616464726573736573206f7574206f6620726567697374726160448201527f74696f6e000000000000000000000000000000000000000000000000000000006064820152608401610639565b610745816003612d47565b83116107ad576040517f89a6198900000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f6661756c74792d6f7261636c65206620746f6f206869676800000000000000006044820152606401610639565b6107b5611a10565b6107be86611a93565b60065460005b818110156108ba5760056000600683815481106107e3576107e3612d5e565b600091825260208083209091015473ffffffffffffffffffffffffffffffffffffffff168352820192909252604001812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001690556007805460059291908490811061085357610853612d5e565b600091825260208083209091015473ffffffffffffffffffffffffffffffffffffffff168352820192909252604001902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001690556108b381612d8d565b90506107c4565b50895160005b81811015610c935760008c82815181106108dc576108dc612d5e565b60200260200101519050600060028111156108f9576108f9612dc5565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260056020526040902054610100900460ff16600281111561093857610938612dc5565b1461099f576040517f89a6198900000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f7265706561746564207369676e657220616464726573730000000000000000006044820152606401610639565b73ffffffffffffffffffffffffffffffffffffffff81166109ec576040517fd6c62c9b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040805180820190915260ff83168152602081016001905273ffffffffffffffffffffffffffffffffffffffff821660009081526005602090815260409091208251815460ff9091167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082168117835592840151919283917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001617610100836002811115610a9c57610a9c612dc5565b021790555090505060008c8381518110610ab857610ab8612d5e565b6020026020010151905060006002811115610ad557610ad5612dc5565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260056020526040902054610100900460ff166002811115610b1457610b14612dc5565b14610b7b576040517f89a6198900000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f7265706561746564207472616e736d69747465722061646472657373000000006044820152606401610639565b73ffffffffffffffffffffffffffffffffffffffff8116610bc8576040517fd6c62c9b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040805180820190915260ff84168152602081016002905273ffffffffffffffffffffffffffffffffffffffff821660009081526005602090815260409091208251815460ff9091167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082168117835592840151919283917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001617610100836002811115610c7857610c78612dc5565b0217905550905050505080610c8c90612d8d565b90506108c0565b508a51610ca79060069060208e0190612598565b508951610cbb9060079060208d0190612598565b506003805460ff838116610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000909216908c161717905560048054610d41914691309190600090610d139063ffffffff16612df4565b91906101000a81548163ffffffff021916908363ffffffff160217905563ffffffff168e8e8e8e8e8e611c4f565b600260000181905550600060048054906101000a900463ffffffff169050436004806101000a81548163ffffffff021916908363ffffffff1602179055507f1591690b8638f5fb2dbec82ac741805ac5da8b45dc5263f4875b0496fdce4e0581600260000154600460009054906101000a900463ffffffff168f8f8f8f8f8f604051610dd599989796959493929190612e17565b60405180910390a1505050505050505050505050565b610df3611a10565b6009805464ffffffffff90921668010000000000000000027fffffffffffffffffffffffffffffffffffffff0000000000ffffffffffffffff909216919091179055565b6009546000906d0100000000000000000000000000900460ff1615610e88576040517feced32bc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610ef987878080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808b0282810182019093528a82529093508a925089918291850190849080828437600092019190915250889250611cfa915050565b9050610f048161193c565b610f12576000915050610f24565b6000908152600a602052604090205490505b95945050505050565b610f35611a10565b600980547fffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffffff1690556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa906020015b60405180910390a1565b60606007805480602002602001604051908101604052809291908181526020018280548015610ff857602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610fcd575b5050505050905090565b60015473ffffffffffffffffffffffffffffffffffffffff163314611083576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4d7573742062652070726f706f736564206f776e6572000000000000000000006044820152606401610639565b60008054337fffffffffffffffffffffffff00000000000000000000000000000000000000008083168217845560018054909116905560405173ffffffffffffffffffffffffffffffffffffffff90921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b611107611a10565b600980547fffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffffff166d01000000000000000000000000001790556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602001610f89565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663397796f76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112009190612cf6565b15801561122157506009546d0100000000000000000000000000900460ff16155b905090565b61122e611a10565b600980547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001667ffffffffffffffff92909216919091179055565b611278878760208b013561201b565b6040805160608101825260025480825260035460ff8082166020850152610100909104169282019290925289359182146112eb5780516040517f93df584c000000000000000000000000000000000000000000000000000000008152600481019190915260248101839052604401610639565b467f00000000000000000000000000000000000000000000000000000000000000001461136c576040517f0f01ce850000000000000000000000000000000000000000000000000000000081527f00000000000000000000000000000000000000000000000000000000000000006004820152466024820152604401610639565b6040805183815260208c81013560081c63ffffffff16908201527fb04e63db38c49950639fa09d29872f21f5d49d614f3a969d8adf3d4b52e41a62910160405180910390a160007f00000000000000000000000000000000000000000000000000000000000000001561140e576002826020015183604001516113ef9190612ead565b6113f99190612ec6565b611404906001612ead565b60ff169050611424565b602082015161141e906001612ead565b60ff1690505b86811461145d576040517f71253a2500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b868514611496576040517fa75d88af00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360009081526005602090815260408083208151808301909252805460ff808216845292939192918401916101009091041660028111156114d9576114d9612dc5565b60028111156114ea576114ea612dc5565b905250905060028160200151600281111561150757611507612dc5565b14801561154e57506007816000015160ff168154811061152957611529612d5e565b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff1633145b611584576040517fda0f08e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506000611592866020612d47565b61159d896020612d47565b6115a98c610144612f0f565b6115b39190612f0f565b6115bd9190612f0f565b9050368114611601576040517f8e1192e100000000000000000000000000000000000000000000000000000000815260048101829052366024820152604401610639565b5060008a8a604051611614929190612f22565b60405190819003812061162b918e90602001612f32565b60405160208183030381529060405280519060200120905061164b612622565b8860005b818110156118785760006001858a846020811061166e5761166e612d5e565b61167b91901a601b612ead565b8f8f8681811061168d5761168d612d5e565b905060200201358e8e878181106116a6576116a6612d5e565b90506020020135604051600081526020016040526040516116e3949392919093845260ff9290921660208401526040830152606082015260800190565b6020604051602081039080840390855afa158015611705573d6000803e3d6000fd5b5050604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081015173ffffffffffffffffffffffffffffffffffffffff8116600090815260056020908152848220848601909552845460ff808216865293975091955092939284019161010090910416600281111561178857611788612dc5565b600281111561179957611799612dc5565b90525090506001816020015160028111156117b6576117b6612dc5565b146117ed576040517fca31867a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8051859060ff16601f811061180457611804612d5e565b602002015115611840576040517ff67bc7c400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600185826000015160ff16601f811061185b5761185b612d5e565b9115156020909202015250611871905081612d8d565b905061164f565b505050505050505050505050505050565b611891611a10565b61189a81612428565b50565b6118a5611a10565b60005b818110156119375760008383838181106118c4576118c4612d5e565b9050602002013590506118d68161193c565b611926576000818152600a602052604080822091909155517f202f1139a3e334b6056064c0e9b19fd07e44a88d8f6e5ded571b24cf8c371f129061191d9083815260200190565b60405180910390a15b5061193081612d8d565b90506118a8565b505050565b6040805180820182523081526020810183815291517f4d616771000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff9081166004830152915160248201526000917f00000000000000000000000000000000000000000000000000000000000000001690634d61677190604401602060405180830381865afa1580156119e6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a0a9190612cf6565b92915050565b60005473ffffffffffffffffffffffffffffffffffffffff163314611a91576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e6572000000000000000000006044820152606401610639565b565b600081806020019051810190611aa99190612f46565b805190915073ffffffffffffffffffffffffffffffffffffffff16611afa576040517f3f8be2be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8051600880547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff928316179055600980547fffffffffffffffffffffffffffffffffffffff0000000000ffffffffffffffff169055604080516080810182527f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff90811682527f00000000000000000000000000000000000000000000000000000000000000001660208201527f00000000000000000000000000000000000000000000000000000000000000008316818301527f00000000000000000000000000000000000000000000000000000000000000009092166060830152517fc9d7123efd4203e60b0f0a4b1dbc4800fc97ce63679f71c3a27279b24a7ddec391611c43918490612f92565b60405180910390a15050565b6000808a8a8a8a8a8a8a8a8a604051602001611c739998979695949392919061300f565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905280516020909101207dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff167e01000000000000000000000000000000000000000000000000000000000000179150509998505050505050505050565b8251825160009190818303611d3b576040517f11a6b26400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6101018211801590611d4f57506101018111155b611d85576040517f09bde33900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82820101610100811115611de6576040517f09bde33900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600003611e135786600081518110611e0157611e01612d5e565b60200260200101519350505050612014565b60008167ffffffffffffffff811115611e2e57611e2e612726565b604051908082528060200260200182016040528015611e57578160200160208202803683370190505b50905060008080805b85811015611f9a5760006001821b8b811603611ebb5788851015611ea4578c5160018601958e918110611e9557611e95612d5e565b60200260200101519050611edd565b8551600185019487918110611e9557611e95612d5e565b8b5160018401938d918110611ed257611ed2612d5e565b602002602001015190505b600089861015611f0d578d5160018701968f918110611efe57611efe612d5e565b60200260200101519050611f2f565b8651600186019588918110611f2457611f24612d5e565b602002602001015190505b82851115611f69576040517f09bde33900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611f73828261251d565b878481518110611f8557611f85612d5e565b60209081029190910101525050600101611e60565b506001850382148015611fac57508683145b8015611fb757508581145b611fed576040517f09bde33900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b83600186038151811061200257612002612d5e565b60200260200101519750505050505050505b9392505050565b6009546d0100000000000000000000000000900460ff1615612069576040517feced32bc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663397796f76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156120d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120f89190612cf6565b1561212f576040517fc148371500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061213d8385018561319b565b8051515190915015158061215657508051602001515115155b1561228e5760095464ffffffffff8084166801000000000000000090920416101561225357600980547fffffffffffffffffffffffffffffffffffffff0000000000ffffffffffffffff166801000000000000000064ffffffffff85160217905560085481516040517f3937306f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90921691633937306f9161220d916004016133ee565b600060405180830381600087803b15801561222757600080fd5b505af115801561223b573d6000803e3d6000fd5b50505050604081015161224e5750505050565b61228e565b604081015161228e576040517ff803a2ca00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60208101515160095467ffffffffffffffff90811691161415806122c9575060208082015190810151905167ffffffffffffffff9182169116115b156123065780602001516040517fbb1ae18d0000000000000000000000000000000000000000000000000000000081526004016106399190613401565b6040810151612341576040517f504570e300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040808201516000908152600a60205220541561238a576040517fa0bce24f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b602080820151015161239d906001613426565b600980547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001667ffffffffffffffff929092169190911790556040818101516000908152600a602052819020429055517f291698c01aa71f912280535d88a00d2c59fb63530a3f5d0098560468acb9ebf59061241a90839061344e565b60405180910390a150505050565b3373ffffffffffffffffffffffffffffffffffffffff8216036124a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152606401610639565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b600081831061255f5760408051600160208083019190915281830185905260608083018790528351808403909101815260809092019092528051910120612014565b60408051600160208083019190915281830186905260608083018690528351808403909101815260809092019092528051910120612014565b828054828255906000526020600020908101928215612612579160200282015b8281111561261257825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9091161782556020909201916001909101906125b8565b5061261e929150612641565b5090565b604051806103e00160405280601f906020820280368337509192915050565b5b8082111561261e5760008155600101612642565b60808101611a0a828467ffffffffffffffff80825116835280602083015116602084015250604081015173ffffffffffffffffffffffffffffffffffffffff808216604085015280606084015116606085015250505050565b6000815180845260005b818110156126d5576020818501810151868301820152016126b9565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b60208152600061201460208301846126af565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561277857612778612726565b60405290565b6040516060810167ffffffffffffffff8111828210171561277857612778612726565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156127e8576127e8612726565b604052919050565b600067ffffffffffffffff82111561280a5761280a612726565b5060051b60200190565b73ffffffffffffffffffffffffffffffffffffffff8116811461189a57600080fd5b600082601f83011261284757600080fd5b8135602061285c612857836127f0565b6127a1565b82815260059290921b8401810191818101908684111561287b57600080fd5b8286015b8481101561289f57803561289281612814565b835291830191830161287f565b509695505050505050565b803560ff811681146128bb57600080fd5b919050565b600082601f8301126128d157600080fd5b813567ffffffffffffffff8111156128eb576128eb612726565b61291c60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116016127a1565b81815284602083860101111561293157600080fd5b816020850160208301376000918101602001919091529392505050565b803567ffffffffffffffff811681146128bb57600080fd5b60008060008060008060c0878903121561297f57600080fd5b863567ffffffffffffffff8082111561299757600080fd5b6129a38a838b01612836565b975060208901359150808211156129b957600080fd5b6129c58a838b01612836565b96506129d360408a016128aa565b955060608901359150808211156129e957600080fd5b6129f58a838b016128c0565b9450612a0360808a0161294e565b935060a0890135915080821115612a1957600080fd5b50612a2689828a016128c0565b9150509295509295509295565b600060208284031215612a4557600080fd5b813564ffffffffff8116811461201457600080fd5b60008083601f840112612a6c57600080fd5b50813567ffffffffffffffff811115612a8457600080fd5b6020830191508360208260051b8501011115612a9f57600080fd5b9250929050565b600080600080600060608688031215612abe57600080fd5b853567ffffffffffffffff80821115612ad657600080fd5b612ae289838a01612a5a565b90975095506020880135915080821115612afb57600080fd5b50612b0888828901612a5a565b96999598509660400135949350505050565b600081518084526020808501945080840160005b83811015612b6057815173ffffffffffffffffffffffffffffffffffffffff1687529582019590820190600101612b2e565b509495945050505050565b6020815260006120146020830184612b1a565b600060208284031215612b9057600080fd5b5035919050565b600060208284031215612ba957600080fd5b6120148261294e565b60008060008060008060008060e0898b031215612bce57600080fd5b606089018a811115612bdf57600080fd5b8998503567ffffffffffffffff80821115612bf957600080fd5b818b0191508b601f830112612c0d57600080fd5b813581811115612c1c57600080fd5b8c6020828501011115612c2e57600080fd5b6020830199508098505060808b0135915080821115612c4c57600080fd5b612c588c838d01612a5a565b909750955060a08b0135915080821115612c7157600080fd5b50612c7e8b828c01612a5a565b999c989b50969995989497949560c00135949350505050565b600060208284031215612ca957600080fd5b813561201481612814565b60008060208385031215612cc757600080fd5b823567ffffffffffffffff811115612cde57600080fd5b612cea85828601612a5a565b90969095509350505050565b600060208284031215612d0857600080fd5b8151801515811461201457600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082028115828204841417611a0a57611a0a612d18565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612dbe57612dbe612d18565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600063ffffffff808316818103612e0d57612e0d612d18565b6001019392505050565b600061012063ffffffff808d1684528b6020850152808b16604085015250806060840152612e478184018a612b1a565b90508281036080840152612e5b8189612b1a565b905060ff871660a084015282810360c0840152612e7881876126af565b905067ffffffffffffffff851660e0840152828103610100840152612e9d81856126af565b9c9b505050505050505050505050565b60ff8181168382160190811115611a0a57611a0a612d18565b600060ff831680612f00577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b8060ff84160491505092915050565b80820180821115611a0a57611a0a612d18565b8183823760009101908152919050565b828152606082602083013760800192915050565b600060208284031215612f5857600080fd5b6040516020810181811067ffffffffffffffff82111715612f7b57612f7b612726565b6040528251612f8981612814565b81529392505050565b60a08101612feb828567ffffffffffffffff80825116835280602083015116602084015250604081015173ffffffffffffffffffffffffffffffffffffffff808216604085015280606084015116606085015250505050565b73ffffffffffffffffffffffffffffffffffffffff83511660808301529392505050565b60006101208b835273ffffffffffffffffffffffffffffffffffffffff8b16602084015267ffffffffffffffff808b1660408501528160608501526130568285018b612b1a565b9150838203608085015261306a828a612b1a565b915060ff881660a085015283820360c085015261308782886126af565b90861660e08501528381036101008501529050612e9d81856126af565b80357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff811681146128bb57600080fd5b600082601f8301126130e157600080fd5b813560206130f1612857836127f0565b82815260069290921b8401810191818101908684111561311057600080fd5b8286015b8481101561289f576040818903121561312d5760008081fd5b613135612755565b61313e8261294e565b815261314b8583016130a4565b81860152835291830191604001613114565b60006040828403121561316f57600080fd5b613177612755565b90506131828261294e565b81526131906020830161294e565b602082015292915050565b600060208083850312156131ae57600080fd5b823567ffffffffffffffff808211156131c657600080fd5b90840190608082870312156131da57600080fd5b6131e261277e565b8235828111156131f157600080fd5b8301604081890381131561320457600080fd5b61320c612755565b82358581111561321b57600080fd5b8301601f81018b1361322c57600080fd5b803561323a612857826127f0565b81815260069190911b8201890190898101908d83111561325957600080fd5b928a01925b828410156132a95785848f0312156132765760008081fd5b61327e612755565b843561328981612814565b8152613296858d016130a4565b818d0152825292850192908a019061325e565b845250505082870135858111156132bf57600080fd5b6132cb8b8286016130d0565b828901525083526132de8986880161315d565b8684015260608501358184015250508094505050505092915050565b805160408084528151848201819052600092602091908201906060870190855b81811015613373578351805173ffffffffffffffffffffffffffffffffffffffff1684528501517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1685840152928401929185019160010161331a565b50508583015187820388850152805180835290840192506000918401905b808310156133e2578351805167ffffffffffffffff1683528501517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1685830152928401926001929092019190850190613391565b50979650505050505050565b60208152600061201460208301846132fa565b60408101611a0a8284805167ffffffffffffffff908116835260209182015116910152565b67ffffffffffffffff81811683821601908082111561344757613447612d18565b5092915050565b60208152600082516080602084015261346a60a08401826132fa565b905060208401516134956040850182805167ffffffffffffffff908116835260209182015116910152565b5060408401516080840152809150509291505056fea164736f6c6343000815000a",
    "sourceMap": "470:12640:101:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10279:265;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10369:170:101;;;;;;;;10407:15;10369:170;;;;;;10453:21;10369:170;;;;;;10492:8;10369:170;;;;;;10520:10;10369:170;;;;;10356:183;;10279:265;;;;;;;;;:::i;:::-;;;;;;;;12143:99;;;:::i;:::-;;;893:14:351;;886:22;868:41;;856:2;841:18;12143:99:101;728:187:351;4990:112:101;5071:26;;;;;;;4990:112;;;1094:18:351;1082:31;;;1064:50;;1052:2;1037:18;4990:112:101;920:200:351;2285:68:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4541:1964:128:-;;;;;;:::i;:::-;;:::i;:::-;;5244:153:101;;;;;;:::i;:::-;;:::i;6749:398::-;;;;;;:::i;:::-;;:::i;:::-;;;7693:25:351;;;7681:2;7666:18;6749:398:101;7547:177:351;13012:96:101;;;:::i;4574:100::-;4659:10;;;;4574:100;;12698:71;12756:8;;;;;;;12698:71;;6968:100:128;;;:::i;:::-;;;;;;;:::i;10636:106:101:-;-1:-1:-1;;;;;;;;;;;;;10715:22:101;;;;;;;10722:15;10715:22;;;;;;;10636:106;;8694:81:351;;;8667:18;10636:106:101;8484:297:351;1001:265:249;;;:::i;11143:236:128:-;11300:13;;11342:12;:31;11143:236;;;11300:13;;;;9013:34:351;;11315:25:128;;;;;;;9078:2:351;9063:18;;9056:43;9115:18;;9108:34;8972:2;8957:18;11143:236:128;8786:362:351;12844:91:101;;;:::i;1317:81:249:-;1364:7;1386;1317:81;;1386:7;;;;9299:74:351;;9287:2;9272:18;1317:81:249;9153:226:351;11950:123:101;;;:::i;5717:100::-;;;;;;:::i;:::-;5777:7;5799:13;;;:7;:13;;;;;;;5717:100;4781:89;;;;;;:::i;:::-;;:::i;11414:198:128:-;;;;11579:4;9952:41:351;;11512:13:128;10024:2:351;10009:18;;10002:34;;;10052:18;;;10045:51;;;;9940:2;9925:18;11414:198:128;9758:344:351;7534:3249:128;;;;;;:::i;:::-;;:::i;811:98:249:-;;;;;;:::i;:::-;;:::i;6431:283:101:-;;;;;;:::i;:::-;;:::i;5990:163::-;;;;;;:::i;:::-;;:::i;12143:99::-;12190:4;12215:10;12210:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12209:28;12202:35;;12143:99;:::o;4541:1964:128:-;4780:7;:14;4796:12;:19;4817:1;3603:430;;317:2:127;3711:10:128;:28;3707:74;;;3748:33;;;;;12731:2:351;3748:33:128;;;12713:21:351;12770:2;12750:18;;;12743:30;12809:18;12789;;;12782:46;12845:18;;3748:33:128;;;;;;;;3707:74;3791:1;3796;3791:6;3787:54;;3806:35;;;;;13076:2:351;3806:35:128;;;13058:21:351;13115:2;13095:18;;;13088:30;13154:20;13134:18;;;13127:48;13192:18;;3806:35:128;12874:342:351;3787:54:128;3865:15;3851:10;:29;3847:95;;3889:53;;;;;13423:2:351;3889:53:128;;;13405:21:351;13462:2;13442:18;;;13435:30;13501:34;13481:18;;;13474:62;13572:6;13552:18;;;13545:34;13596:19;;3889:53:128;13221:400:351;3847:95:128;3966:5;3970:1;3966;:5;:::i;:::-;3952:10;:19;3948:73;;3980:41;;;;;14190:2:351;3980:41:128;;;14172:21:351;14229:2;14209:18;;;14202:30;14268:26;14248:18;;;14241:54;14312:18;;3980:41:128;13988:348:351;3948:73:128;1941:20:249::1;:18;:20::i;:::-;4836:31:128::2;4853:13;4836:16;:31::i;:::-;4899:9;:16:::0;4873:23:::2;4921:134;4945:15;4941:1;:19;4921:134;;;4982:9;:23;4992:9;5002:1;4992:12;;;;;;;;:::i;:::-;;::::0;;;::::2;::::0;;;;;::::2;::::0;::::2;;4982:23:::0;;;::::2;::::0;;;;;;;;4975:30;;;;;;5030:14:::2;:17:::0;;5020:9:::2;::::0;4992:12;5030:14;5045:1;;5030:17;::::2;;;;;:::i;:::-;;::::0;;;::::2;::::0;;;;;::::2;::::0;::::2;;5020:28:::0;;;::::2;::::0;;;;;;;;5013:35;;;;;;4962:3:::2;::::0;::::2;:::i;:::-;;;4921:134;;;-1:-1:-1::0;5088:14:128;;5061:24:::2;5108:650;5132:16;5128:1;:20;5108:650;;;5209:14;5226:7;5234:1;5226:10;;;;;;;;:::i;:::-;;;;;;;5209:27;;5274:10;5248:36;;;;;;;;:::i;:::-;:17;::::0;::::2;;::::0;;;:9:::2;:17;::::0;;;;:22;::::2;::::0;::::2;;;:36;::::0;::::2;;;;;;:::i;:::-;;5244:89;;5293:40;::::0;::::2;::::0;;15121:2:351;5293:40:128::2;::::0;::::2;15103:21:351::0;15160:2;15140:18;;;15133:30;15199:25;15179:18;;;15172:53;15242:18;;5293:40:128::2;14919:347:351::0;5244:89:128::2;5345:20;::::0;::::2;5341:60;;5374:27;;;;;;;;;;;;;;5341:60;5429:29;::::0;;;;::::2;::::0;;;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;5446:11;5429:29:::0;;5409:17:::2;::::0;::::2;;::::0;;;:9:::2;:17;::::0;;;;;;;:49;;;;::::2;::::0;;::::2;::::0;;::::2;::::0;::::2;::::0;;;;::::2;::::0;:17;;;;:49;;;::::2;::::0;::::2;::::0;::::2;;;;;;:::i;:::-;;;;;;;;;5467:19;5489:12;5502:1;5489:15;;;;;;;;:::i;:::-;;;;;;;5467:37;;5547:10;5516:41;;;;;;;;:::i;:::-;:22;::::0;::::2;;::::0;;;:9:::2;:22;::::0;;;;:27;::::2;::::0;::::2;;;:41;::::0;::::2;;;;;;:::i;:::-;;5512:99;;5566:45;::::0;::::2;::::0;;15473:2:351;5566:45:128::2;::::0;::::2;15455:21:351::0;15512:2;15492:18;;;15485:30;15551;15531:18;;;15524:58;15599:18;;5566:45:128::2;15271:352:351::0;5512:99:128::2;5623:25;::::0;::::2;5619:65;;5657:27;;;;;;;;;;;;;;5619:65;5717:34;::::0;;;;::::2;::::0;;;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;5734:16;5717:34:::0;;5692:22:::2;::::0;::::2;;::::0;;;:9:::2;:22;::::0;;;;;;;:59;;;;::::2;::::0;;::::2;::::0;;::::2;::::0;::::2;::::0;;;;::::2;::::0;:22;;;;:59;;;::::2;::::0;::::2;::::0;::::2;;;;;;:::i;:::-;;;;;;;;;5155:603;;5150:3;;;;:::i;:::-;;;5108:650;;;-1:-1:-1::0;5764:19:128;;::::2;::::0;:9:::2;::::0;:19:::2;::::0;::::2;::::0;::::2;:::i;:::-;-1:-1:-1::0;5789:29:128;;::::2;::::0;:14:::2;::::0;:29:::2;::::0;::::2;::::0;::::2;:::i;:::-;-1:-1:-1::0;5825:14:128;:18;;::::2;5849:40:::0;;::::2;5825:18;5849:40;::::0;;;;5825:18;;::::2;5849:40:::0;::::2;::::0;;6008:13:::2;6006:15:::0;;5929:214:::2;::::0;5964:13:::2;::::0;5993:4:::2;::::0;6008:13;5825:14:::2;::::0;6006:15:::2;::::0;::::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;5929:214;;6029:7;6044:12;6064:1;6073:13;6094:21;6123:14;5929:27;:214::i;:::-;5895:12;:31;;:248;;;;6150:32;6185:25;::::0;::::2;;;;;;;;6150:60;;6251:12;6216:25;::::0;:48:::2;;;;;;;;;;;;;;;;;;6276:224;6293:25;6326:12;:31;;;6365:13;;;;;;;;;;;6386:7;6401:12;6421:1;6430:13;6451:21;6480:14;6276:224;;;;;;;;;;;;;;:::i;:::-;;;;;;;;4830:1675;;;4541:1964:::0;;;;;;;;;:::o;5244:153:101:-;1941:20:249;:18;:20::i;:::-;5339:26:101::1;:53:::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;5244:153::o;6749:398::-;12756:8;;6910:17;;12756:8;;;;;12573:34;;;12594:13;;;;;;;;;;;;;;12573:34;6935:12:::1;6950:64;6978:12;;6950:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;6950:64:101::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;;;;;;-1:-1:-1;6992:6:101;;-1:-1:-1;6992:6:101;;;;6950:64;::::1;::::0;6992:6;;6950:64;6992:6;6950:64;::::1;;::::0;::::1;::::0;;;;-1:-1:-1;7000:13:101;;-1:-1:-1;6950:27:101::1;::::0;-1:-1:-1;;6950:64:101:i:1;:::-;6935:79;;7077:15;7087:4;7077:9;:15::i;:::-;7072:45;;7109:1;7102:8;;;;;7072:45;7129:13;::::0;;;:7:::1;:13;::::0;;;;;;-1:-1:-1;12613:1:101::1;6749:398:::0;;;;;;;:::o;13012:96::-;1941:20:249;:18;:20::i;:::-;13056:8:101::1;:16:::0;;;::::1;::::0;;13083:20:::1;::::0;13092:10:::1;9299:74:351::0;;13083:20:101::1;::::0;9287:2:351;9272:18;13083:20:101::1;;;;;;;;13012:96::o:0;6968:100:128:-;7018:16;7049:14;7042:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6968:100;:::o;1001:265:249:-;1074:14;;;;1060:10;:28;1052:63;;;;;;;17283:2:351;1052:63:249;;;17265:21:351;17322:2;17302:18;;;17295:30;17361:24;17341:18;;;17334:52;17403:18;;1052:63:249;17081:346:351;1052:63:249;1122:16;1141:7;;1164:10;1154:20;;;;;;;;-1:-1:-1;1180:27:249;;;;;;;1219:42;;1141:7;;;;;1164:10;;1141:7;;1219:42;;;1046:220;1001:265::o;12844:91:101:-;1941:20:249;:18;:20::i;:::-;12886:8:101::1;:15:::0;;;::::1;::::0;::::1;::::0;;12912:18:::1;::::0;12919:10:::1;9299:74:351::0;;12912:18:101::1;::::0;9287:2:351;9272:18;12912::101::1;9153:226:351::0;11950:123:101;12008:4;12033:10;12028:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12027:28;:41;;;;-1:-1:-1;12060:8:101;;;;;;;12059:9;12027:41;12020:48;;11950:123;:::o;4781:89::-;1941:20:249;:18;:20::i;:::-;4844:10:101::1;:21:::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;4781:89::o;7534:3249:128:-;7988:50;7996:6;;8019:16;;;;7988:7;:50::i;:::-;8275:43;;;;;;;;8306:12;8275:43;;;;;;;;;;8253:16;8275:43;;;;;;;;;;;;;;;8253:16;;;8329:45;;8325:129;;8410:29;;8389:65;;;;;;;;17606:25:351;;;;17647:18;;;17640:34;;;17579:18;;8389:65:128;17432:248:351;8325:129:128;8776:13;8763:9;:26;8759:76;;8798:37;;;;;8810:9;8798:37;;;17606:25:351;8821:13:128;17647:18:351;;;17640:34;17579:18;;8798:37:128;17432:248:351;8759:76:128;8847:65;;;18110:25:351;;;8888:16:128;;;;;8909:1;8880:30;18183:10:351;18171:23;18151:18;;;18144:51;8847:65:128;;18083:18:351;8847:65:128;;;;;;;8919:29;8958:15;8954:158;;;9039:1;9023:10;:12;;;9008:10;:12;;;:27;;;;:::i;:::-;9007:33;;;;:::i;:::-;:37;;9043:1;9007:37;:::i;:::-;8983:61;;;;8954:158;;;9089:12;;;;:16;;9104:1;9089:16;:::i;:::-;9065:40;;;;8954:158;9121:34;;;9117:72;;9164:25;;;;;;;;;;;;;;9117:72;9199:22;;;9195:64;;9230:29;;;;;;;;;;;;;;9195:64;9369:10;9331:25;9359:21;;;:9;:21;;;;;;;;9331:49;;;;;;;;;;;;;;;;;;9359:21;;9331:49;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;9331:49:128;-1:-1:-1;9465:16:128;9445:11;:16;;;:36;;;;;;;;:::i;:::-;;:87;;;;;9499:14;9514:11;:17;;;9499:33;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;9485:10;:47;9445:87;9439:136;;9550:25;;;;;;;;;;;;;;9439:136;-1:-1:-1;9652:26:128;9863:22;:2;9883;9863:22;:::i;:::-;9801;:2;9821;9801:22;:::i;:::-;9681:75;9743:6;2910:411;9681:75;:::i;:::-;:142;;;;:::i;:::-;:204;;;;:::i;:::-;9652:233;-1:-1:-1;9927:8:128;:37;;9923:105;;9973:55;;;;;;;;17606:25:351;;;10012:8:128;17647:18:351;;;17640:34;17579:18;;9973:55:128;17432:248:351;9923:105:128;9644:391;10085:9;10134:6;;10124:17;;;;;;;:::i;:::-;;;;;;;;;10107:50;;10143:13;;10107:50;;;:::i;:::-;;;;;;;;;;;;;10097:61;;;;;;10085:73;;10164:35;;:::i;:::-;10235:2;10206:26;10250:529;10274:18;10270:1;:22;10250:529;;;10388:14;10405:48;10415:1;10424:5;10430:1;10424:8;;;;;;;:::i;:::-;10418:20;;10424:8;;10436:2;10418:20;:::i;:::-;10440:2;;10443:1;10440:5;;;;;;;:::i;:::-;;;;;;;10447:2;;10450:1;10447:5;;;;;;;:::i;:::-;;;;;;;10405:48;;;;;;;;;;;;;;;;;19629:25:351;;;19702:4;19690:17;;;;19685:2;19670:18;;19663:45;19739:2;19724:18;;19717:34;19782:2;19767:18;;19760:34;19616:3;19601:19;;19402:398;10405:48:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10405:48:128;;;;;;;10591:17;;;10568:20;10591:17;;;:9;10405:48;10591:17;;;;;;10568:40;;;;;;;;;;;;;;10405:48;;-1:-1:-1;10568:20:128;;-1:-1:-1;10405:48:128;;10591:17;10568:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;10568:40:128;-1:-1:-1;10635:11:128;10620:6;:11;;;:26;;;;;;;;:::i;:::-;;10616:59;;10655:20;;;;;;;;;;;;;;10616:59;10694:12;;10687:6;;:20;;;;;;;;;:::i;:::-;;;;;10683:54;;;10716:21;;;;;;;;;;;;;;10683:54;10768:4;10745:6;10752;:12;;;10745:20;;;;;;;;;:::i;:::-;:27;;;:20;;;;;:27;-1:-1:-1;10294:3:128;;-1:-1:-1;10294:3:128;;:::i;:::-;;;10250:529;;;;7883:2900;;;;;;7534:3249;;;;;;;;:::o;811:98:249:-;1941:20;:18;:20::i;:::-;882:22:::1;901:2;882:18;:22::i;:::-;811:98:::0;:::o;6431:283:101:-;1941:20:249;:18;:20::i;:::-;6522:9:101::1;6517:193;6537:22:::0;;::::1;6517:193;;;6574:12;6589:11;;6601:1;6589:14;;;;;;;:::i;:::-;;;;;;;6574:29;;6616:15;6626:4;6616:9;:15::i;:::-;6611:93;;6650:13;::::0;;;:7:::1;:13;::::0;;;;;6643:20;;;;6678:17;::::1;::::0;::::1;::::0;6658:4;7693:25:351;;7681:2;7666:18;;7547:177;6678:17:101::1;;;;;;;;6611:93;-1:-1:-1::0;6561:3:101::1;::::0;::::1;:::i;:::-;;;6517:193;;;;6431:283:::0;;:::o;5990:163::-;6090:57;;;;;;;;6128:4;6090:57;;;;;;;;6063:85;;;;;20213:13:351;;6063:26:101;20209:62:351;;;6063:85:101;;;20191:81:351;20310:24;;20288:20;;;20281:54;-1:-1:-1;;6068:10:101;6063:26;;;;20164:18:351;;6063:85:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6056:92;5990:163;-1:-1:-1;;5990:163:101:o;1715:111:249:-;1787:7;;;;1773:10;:21;1765:56;;;;;;;20548:2:351;1765:56:249;;;20530:21:351;20587:2;20567:18;;;20560:30;20626:24;20606:18;;;20599:52;20668:18;;1765:56:249;20346:346:351;1765:56:249;1715:111::o;10837:824:101:-;10915:34;10963:13;10952:42;;;;;;;;;;;;:::i;:::-;11005:27;;10915:79;;-1:-1:-1;11005:41:101;;11001:80;;11055:26;;;;;;;;;;;;;;11001:80;11088:31;;:15;:31;;;;;;;;;;;11400:26;:30;;;;;;11459:170;;;;;;;;11497:15;11459:170;;;;;;11543:21;11459:170;;;;;11582:8;11459:170;;;;;;11610:10;11459:170;;;;;;;11442:214;;;;;11088:31;;11442:214;:::i;:::-;;;;;;;;10909:752;10837:824;:::o;2886:820:127:-;3201:7;3216:9;3284:7;3303:15;3330:11;3353:7;3372:12;3396:1;3409:13;3434:21;3467:14;3262:229;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;3243:256;;3262:229;3243:256;;;;3688:11;3684:15;3602:20;3659:41;;-1:-1:-1;;2886:820:127;;;;;;;;;;;:::o;2474:1821:124:-;2659:13;;2700;;2606:7;;2659:13;2725:14;;;2721:48;;2748:21;;;;;;;;;;;;;;2721:48;2796:18;2783:31;;;;;:66;;-1:-1:-1;2831:18:124;2818:31;;;2783:66;2777:96;;2859:14;;;;;;;;;;;;;;2777:96;2903:25;:21;;;:25;590:3;2942:29;;;2936:59;;2981:14;;;;;;;;;;;;;;2936:59;3007:11;3022:1;3007:16;3003:57;;3042:6;3049:1;3042:9;;;;;;;;:::i;:::-;;;;;;;3035:16;;;;;;;3003:57;3067:23;3107:11;3093:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3093:26:124;-1:-1:-1;3067:52:124;-1:-1:-1;3128:15:124;;;;3200:903;3224:11;3220:1;:15;3200:903;;;3347:9;3399:1;:6;;3370:24;;;:36;3366:332;;3489:9;3479:7;:19;3475:127;;;3518:17;;3525:9;;;;3518:6;;:17;;;;;;:::i;:::-;;;;;;;3514:21;;3366:332;;3475:127;3572:17;;3579:9;;;;3572:6;;:17;;;;;;:::i;3366:332::-;3669:18;;3676:10;;;;3669:6;;:18;;;;;;:::i;:::-;;;;;;;3665:22;;3366:332;3866:9;3899;3889:7;:19;3885:119;;;3926:17;;3933:9;;;;3926:6;;:17;;;;;;:::i;:::-;;;;;;;3922:21;;3885:119;;;3976:17;;3983:9;;;;3976:6;;:17;;;;;;:::i;:::-;;;;;;;3972:21;;3885:119;4031:1;4020:7;:12;;4014:42;;4042:14;;;;;;;;;;;;;;4014:42;4079:15;4089:1;4092;4079:9;:15::i;:::-;4067:6;4074:1;4067:9;;;;;;;;:::i;:::-;;;;;;;;;;:27;-1:-1:-1;;3237:3:124;;3200:903;;;;4141:1;4127:11;:15;4116:7;:26;:50;;;;;4157:9;4146:7;:20;4116:50;:75;;;;;4182:9;4170:8;:21;4116:75;4110:105;;4201:14;;;;;;;;;;;;;;4110:105;4261:6;4282:1;4268:11;:15;4261:23;;;;;;;;:::i;:::-;;;;;;;4254:30;;;;;;;;;2474:1821;;;;;;:::o;8042:1842:101:-;12756:8;;;;;;;12573:34;;;12594:13;;;;;;;;;;;;;;12573:34;12392:10:::1;12387:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12383:54;;;12423:14;;;;;;;;;;;;;;12383:54;8161:26:::2;8190:41;::::0;;::::2;8201:13:::0;8190:41:::2;:::i;:::-;8292:19:::0;;:37;:44;8161:70;;-1:-1:-1;8292:48:101;;;:98:::2;;-1:-1:-1::0;8344:19:101;;:35:::2;;::::0;:42;:46;;8292:98:::2;8288:1009;;;8468:26;::::0;:42:::2;::::0;;::::2;:26:::0;;;::::2;;:42;8464:827;;;8592:26;:42:::0;;;::::2;::::0;::::2;::::0;::::2;;;::::0;;:26:::2;8714:29:::0;8758:19;;8699:79:::2;::::0;;;;8714:29:::2;::::0;;::::2;::::0;8699:58:::2;::::0;:79:::2;::::0;::::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;;;8933:17:101::2;::::0;::::2;::::0;8929:44:::2;;8966:7;6517:193:::1;6431:283:::0;;:::o;8929:44::-:2;8464:827;;;9229:17;::::0;::::2;::::0;9225:57:::2;;9269:13;;;;;;;;;;;;;;9225:57;9395:15;::::0;::::2;::::0;:19;9381:10:::2;::::0;:33:::2;:10:::0;;::::2;:33:::0;::::2;;;::::0;:78:::2;;-1:-1:-1::0;9440:15:101::2;::::0;;::::2;::::0;:19;;::::2;::::0;9418;;:41:::2;::::0;;::::2;::::0;::::2;;9381:78;9377:129;;;9490:6;:15;;;9474:32;;;;;;;;;;;:::i;9377:129::-;9517:17;::::0;::::2;::::0;9513:57:::2;;9557:13;;;;;;;;;;;;;;9513:57;9699:17;::::0;;::::2;::::0;9691:26:::2;::::0;;;:7:::2;:26;::::0;;;:31;9687:66:::2;;9731:22;;;;;;;;;;;;;;9687:66;9773:15;::::0;;::::2;::::0;:19:::2;::::0;:23:::2;::::0;9795:1:::2;9773:23;:::i;:::-;9760:10;:36:::0;;;::::2;;::::0;;;::::2;::::0;;;::::2;::::0;;9810:17:::2;::::0;;::::2;::::0;-1:-1:-1;9802:26:101;;;:7:::2;:26;::::0;;;;9831:15:::2;9802:44:::0;;9857:22;::::2;::::0;::::2;::::0;9810:17;;9857:22:::2;:::i;:::-;;;;;;;;8155:1729;8042:1842:::0;;;:::o;1482:188:249:-;1550:10;1544:16;;;;1536:52;;;;;;;29811:2:351;1536:52:249;;;29793:21:351;29850:2;29830:18;;;29823:30;29889:25;29869:18;;;29862:53;29932:18;;1536:52:249;29609:347:351;1536:52:249;1595:14;:19;;;;;;;;;;;;;;-1:-1:-1;1653:7:249;;1626:39;;1595:19;;1653:7;;1626:39;;-1:-1:-1;1626:39:249;1482:188;:::o;4697:147:124:-;4760:7;4786:1;4782;:5;:57;;4527:50;;;476:66;4527:50;;;;30163:25:351;;;;30204:18;;;30197:34;;;30247:18;;;;30240:34;;;4527:50:124;;;;;;;;;;30136:18:351;;;;4527:50:124;;;4517:61;;;;;4782:57;;;4527:50;;;476:66;4527:50;;;;30163:25:351;;;;30204:18;;;30197:34;;;30247:18;;;;30240:34;;;4527:50:124;;;;;;;;;;30136:18:351;;;;4527:50:124;;;4517:61;;;;;4790:23;4412:171;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;459:264:351;655:3;640:19;;668:49;644:9;699:6;90:18;147:2;139:5;133:12;129:21;124:3;117:34;212:2;204:4;197:5;193:16;187:23;183:32;176:4;171:3;167:14;160:56;;262:4;255:5;251:16;245:23;287:42;379:2;365:12;361:21;354:4;349:3;345:14;338:45;444:2;436:4;429:5;425:16;419:23;415:32;408:4;403:3;399:14;392:56;;;14:440;;;1125:482;1167:3;1205:5;1199:12;1232:6;1227:3;1220:19;1257:1;1267:162;1281:6;1278:1;1275:13;1267:162;;;1343:4;1399:13;;;1395:22;;1389:29;1371:11;;;1367:20;;1360:59;1296:12;1267:162;;;1271:3;1474:1;1467:4;1458:6;1453:3;1449:16;1445:27;1438:38;1596:4;1526:66;1521:2;1513:6;1509:15;1505:88;1500:3;1496:98;1492:109;1485:116;;;1125:482;;;;:::o;1612:220::-;1761:2;1750:9;1743:21;1724:4;1781:45;1822:2;1811:9;1807:18;1799:6;1781:45;:::i;1837:184::-;1889:77;1886:1;1879:88;1986:4;1983:1;1976:15;2010:4;2007:1;2000:15;2026:257;2098:4;2092:11;;;2130:17;;2177:18;2162:34;;2198:22;;;2159:62;2156:88;;;2224:18;;:::i;:::-;2260:4;2253:24;2026:257;:::o;2288:253::-;2360:2;2354:9;2402:4;2390:17;;2437:18;2422:34;;2458:22;;;2419:62;2416:88;;;2484:18;;:::i;2546:334::-;2617:2;2611:9;2673:2;2663:13;;2678:66;2659:86;2647:99;;2776:18;2761:34;;2797:22;;;2758:62;2755:88;;;2823:18;;:::i;:::-;2859:2;2852:22;2546:334;;-1:-1:-1;2546:334:351:o;2885:183::-;2945:4;2978:18;2970:6;2967:30;2964:56;;;3000:18;;:::i;:::-;-1:-1:-1;3045:1:351;3041:14;3057:4;3037:25;;2885:183::o;3073:154::-;3159:42;3152:5;3148:54;3141:5;3138:65;3128:93;;3217:1;3214;3207:12;3232:737;3286:5;3339:3;3332:4;3324:6;3320:17;3316:27;3306:55;;3357:1;3354;3347:12;3306:55;3393:6;3380:20;3419:4;3443:60;3459:43;3499:2;3459:43;:::i;:::-;3443:60;:::i;:::-;3537:15;;;3623:1;3619:10;;;;3607:23;;3603:32;;;3568:12;;;;3647:15;;;3644:35;;;3675:1;3672;3665:12;3644:35;3711:2;3703:6;3699:15;3723:217;3739:6;3734:3;3731:15;3723:217;;;3819:3;3806:17;3836:31;3861:5;3836:31;:::i;:::-;3880:18;;3918:12;;;;3756;;3723:217;;;-1:-1:-1;3958:5:351;3232:737;-1:-1:-1;;;;;;3232:737:351:o;3974:156::-;4040:20;;4100:4;4089:16;;4079:27;;4069:55;;4120:1;4117;4110:12;4069:55;3974:156;;;:::o;4135:589::-;4177:5;4230:3;4223:4;4215:6;4211:17;4207:27;4197:55;;4248:1;4245;4238:12;4197:55;4284:6;4271:20;4310:18;4306:2;4303:26;4300:52;;;4332:18;;:::i;:::-;4376:114;4484:4;4415:66;4408:4;4404:2;4400:13;4396:86;4392:97;4376:114;:::i;:::-;4515:2;4506:7;4499:19;4561:3;4554:4;4549:2;4541:6;4537:15;4533:26;4530:35;4527:55;;;4578:1;4575;4568:12;4527:55;4643:2;4636:4;4628:6;4624:17;4617:4;4608:7;4604:18;4591:55;4691:1;4666:16;;;4684:4;4662:27;4655:38;;;;4670:7;4135:589;-1:-1:-1;;;4135:589:351:o;4729:171::-;4796:20;;4856:18;4845:30;;4835:41;;4825:69;;4890:1;4887;4880:12;4905:1136;5074:6;5082;5090;5098;5106;5114;5167:3;5155:9;5146:7;5142:23;5138:33;5135:53;;;5184:1;5181;5174:12;5135:53;5224:9;5211:23;5253:18;5294:2;5286:6;5283:14;5280:34;;;5310:1;5307;5300:12;5280:34;5333:61;5386:7;5377:6;5366:9;5362:22;5333:61;:::i;:::-;5323:71;;5447:2;5436:9;5432:18;5419:32;5403:48;;5476:2;5466:8;5463:16;5460:36;;;5492:1;5489;5482:12;5460:36;5515:63;5570:7;5559:8;5548:9;5544:24;5515:63;:::i;:::-;5505:73;;5597:36;5629:2;5618:9;5614:18;5597:36;:::i;:::-;5587:46;;5686:2;5675:9;5671:18;5658:32;5642:48;;5715:2;5705:8;5702:16;5699:36;;;5731:1;5728;5721:12;5699:36;5754:51;5797:7;5786:8;5775:9;5771:24;5754:51;:::i;:::-;5744:61;;5824:38;5857:3;5846:9;5842:19;5824:38;:::i;:::-;5814:48;;5915:3;5904:9;5900:19;5887:33;5871:49;;5945:2;5935:8;5932:16;5929:36;;;5961:1;5958;5951:12;5929:36;;5984:51;6027:7;6016:8;6005:9;6001:24;5984:51;:::i;:::-;5974:61;;;4905:1136;;;;;;;;:::o;6046:278::-;6104:6;6157:2;6145:9;6136:7;6132:23;6128:32;6125:52;;;6173:1;6170;6163:12;6125:52;6212:9;6199:23;6262:12;6255:5;6251:24;6244:5;6241:35;6231:63;;6290:1;6287;6280:12;6329:367;6392:8;6402:6;6456:3;6449:4;6441:6;6437:17;6433:27;6423:55;;6474:1;6471;6464:12;6423:55;-1:-1:-1;6497:20:351;;6540:18;6529:30;;6526:50;;;6572:1;6569;6562:12;6526:50;6609:4;6601:6;6597:17;6585:29;;6669:3;6662:4;6652:6;6649:1;6645:14;6637:6;6633:27;6629:38;6626:47;6623:67;;;6686:1;6683;6676:12;6623:67;6329:367;;;;;:::o;6701:841::-;6832:6;6840;6848;6856;6864;6917:2;6905:9;6896:7;6892:23;6888:32;6885:52;;;6933:1;6930;6923:12;6885:52;6973:9;6960:23;7002:18;7043:2;7035:6;7032:14;7029:34;;;7059:1;7056;7049:12;7029:34;7098:70;7160:7;7151:6;7140:9;7136:22;7098:70;:::i;:::-;7187:8;;-1:-1:-1;7072:96:351;-1:-1:-1;7275:2:351;7260:18;;7247:32;;-1:-1:-1;7291:16:351;;;7288:36;;;7320:1;7317;7310:12;7288:36;;7359:72;7423:7;7412:8;7401:9;7397:24;7359:72;:::i;:::-;6701:841;;;;-1:-1:-1;7450:8:351;7532:2;7517:18;7504:32;;6701:841;-1:-1:-1;;;;6701:841:351:o;7729:484::-;7782:3;7820:5;7814:12;7847:6;7842:3;7835:19;7873:4;7902:2;7897:3;7893:12;7886:19;;7939:2;7932:5;7928:14;7960:1;7970:218;7984:6;7981:1;7978:13;7970:218;;;8049:13;;8064:42;8045:62;8033:75;;8128:12;;;;8163:15;;;;8006:1;7999:9;7970:218;;;-1:-1:-1;8204:3:351;;7729:484;-1:-1:-1;;;;;7729:484:351:o;8218:261::-;8397:2;8386:9;8379:21;8360:4;8417:56;8469:2;8458:9;8454:18;8446:6;8417:56;:::i;9384:180::-;9443:6;9496:2;9484:9;9475:7;9471:23;9467:32;9464:52;;;9512:1;9509;9502:12;9464:52;-1:-1:-1;9535:23:351;;9384:180;-1:-1:-1;9384:180:351:o;9569:184::-;9627:6;9680:2;9668:9;9659:7;9655:23;9651:32;9648:52;;;9696:1;9693;9686:12;9648:52;9719:28;9737:9;9719:28;:::i;10107:1441::-;10292:6;10300;10308;10316;10324;10332;10340;10348;10401:3;10389:9;10380:7;10376:23;10372:33;10369:53;;;10418:1;10415;10408:12;10369:53;10456:2;10445:9;10441:18;10478:7;10474:2;10471:15;10468:35;;;10499:1;10496;10489:12;10468:35;10522:9;;-1:-1:-1;10554:16:351;10589:18;10619:14;;;10616:34;;;10646:1;10643;10636:12;10616:34;10684:6;10673:9;10669:22;10659:32;;10729:7;10722:4;10718:2;10714:13;10710:27;10700:55;;10751:1;10748;10741:12;10700:55;10791:2;10778:16;10817:2;10809:6;10806:14;10803:34;;;10833:1;10830;10823:12;10803:34;10880:7;10873:4;10864:6;10860:2;10856:15;10852:26;10849:39;10846:59;;;10901:1;10898;10891:12;10846:59;10932:4;10928:2;10924:13;10914:23;;10956:6;10946:16;;;11015:3;11004:9;11000:19;10987:33;10971:49;;11045:2;11035:8;11032:16;11029:36;;;11061:1;11058;11051:12;11029:36;11100:72;11164:7;11153:8;11142:9;11138:24;11100:72;:::i;:::-;11191:8;;-1:-1:-1;11074:98:351;-1:-1:-1;11279:3:351;11264:19;;11251:33;;-1:-1:-1;11296:16:351;;;11293:36;;;11325:1;11322;11315:12;11293:36;;11364:72;11428:7;11417:8;11406:9;11402:24;11364:72;:::i;:::-;10107:1441;;;;-1:-1:-1;10107:1441:351;;;;;;11338:98;;11537:3;11522:19;11509:33;;10107:1441;-1:-1:-1;;;;10107:1441:351:o;11553:247::-;11612:6;11665:2;11653:9;11644:7;11640:23;11636:32;11633:52;;;11681:1;11678;11671:12;11633:52;11720:9;11707:23;11739:31;11764:5;11739:31;:::i;11805:437::-;11891:6;11899;11952:2;11940:9;11931:7;11927:23;11923:32;11920:52;;;11968:1;11965;11958:12;11920:52;12008:9;11995:23;12041:18;12033:6;12030:30;12027:50;;;12073:1;12070;12063:12;12027:50;12112:70;12174:7;12165:6;12154:9;12150:22;12112:70;:::i;:::-;12201:8;;12086:96;;-1:-1:-1;11805:437:351;-1:-1:-1;;;;11805:437:351:o;12247:277::-;12314:6;12367:2;12355:9;12346:7;12342:23;12338:32;12335:52;;;12383:1;12380;12373:12;12335:52;12415:9;12409:16;12468:5;12461:13;12454:21;12447:5;12444:32;12434:60;;12490:1;12487;12480:12;13626:184;13678:77;13675:1;13668:88;13775:4;13772:1;13765:15;13799:4;13796:1;13789:15;13815:168;13888:9;;;13919;;13936:15;;;13930:22;;13916:37;13906:71;;13957:18;;:::i;14341:184::-;14393:77;14390:1;14383:88;14490:4;14487:1;14480:15;14514:4;14511:1;14504:15;14530:195;14569:3;14600:66;14593:5;14590:77;14587:103;;14670:18;;:::i;:::-;-1:-1:-1;14717:1:351;14706:13;;14530:195::o;14730:184::-;14782:77;14779:1;14772:88;14879:4;14876:1;14869:15;14903:4;14900:1;14893:15;15628:201;15666:3;15694:10;15739:2;15732:5;15728:14;15766:2;15757:7;15754:15;15751:41;;15772:18;;:::i;:::-;15821:1;15808:15;;15628:201;-1:-1:-1;;;15628:201:351:o;15834:1242::-;16276:4;16305:3;16327:10;16376:2;16368:6;16364:15;16353:9;16346:34;16416:6;16411:2;16400:9;16396:18;16389:34;16471:2;16463:6;16459:15;16454:2;16443:9;16439:18;16432:43;;16511:2;16506;16495:9;16491:18;16484:30;16537:56;16589:2;16578:9;16574:18;16566:6;16537:56;:::i;:::-;16523:70;;16642:9;16634:6;16630:22;16624:3;16613:9;16609:19;16602:51;16676:44;16713:6;16705;16676:44;:::i;:::-;16662:58;;16769:4;16761:6;16757:17;16751:3;16740:9;16736:19;16729:46;16824:9;16816:6;16812:22;16806:3;16795:9;16791:19;16784:51;16858:33;16884:6;16876;16858:33;:::i;:::-;16844:47;;16940:18;16932:6;16928:31;16922:3;16911:9;16907:19;16900:60;17009:9;17001:6;16997:22;16991:3;16980:9;16976:19;16969:51;17037:33;17063:6;17055;17037:33;:::i;:::-;17029:41;15834:1242;-1:-1:-1;;;;;;;;;;;;15834:1242:351:o;18206:148::-;18294:4;18273:12;;;18287;;;18269:31;;18312:13;;18309:39;;;18328:18;;:::i;18359:319::-;18397:1;18431:4;18428:1;18424:12;18455:3;18445:191;;18492:77;18489:1;18482:88;18593:4;18590:1;18583:15;18621:4;18618:1;18611:15;18445:191;18668:3;18661:4;18658:1;18654:12;18650:22;18645:27;;;18359:319;;;;:::o;18683:125::-;18748:9;;;18769:10;;;18766:36;;;18782:18;;:::i;18813:271::-;18996:6;18988;18983:3;18970:33;18952:3;19022:16;;19047:13;;;19022:16;18813:271;-1:-1:-1;18813:271:351:o;19089:308::-;19306:6;19301:3;19294:19;19357:4;19349:6;19344:2;19339:3;19335:12;19322:40;19387:3;19378:13;;19089:308;-1:-1:-1;;19089:308:351:o;20697:516::-;20799:6;20852:2;20840:9;20831:7;20827:23;20823:32;20820:52;;;20868:1;20865;20858:12;20820:52;20901:2;20895:9;20943:2;20935:6;20931:15;21012:6;21000:10;20997:22;20976:18;20964:10;20961:34;20958:62;20955:88;;;21023:18;;:::i;:::-;21059:2;21052:22;21096:16;;21121:31;21096:16;21121:31;:::i;:::-;21161:21;;21168:6;20697:516;-1:-1:-1;;;20697:516:351:o;21218:456::-;21506:3;21491:19;;21519:49;21495:9;21550:6;90:18;147:2;139:5;133:12;129:21;124:3;117:34;212:2;204:4;197:5;193:16;187:23;183:32;176:4;171:3;167:14;160:56;;262:4;255:5;251:16;245:23;287:42;379:2;365:12;361:21;354:4;349:3;345:14;338:45;444:2;436:4;429:5;425:16;419:23;415:32;408:4;403:3;399:14;392:56;;;14:440;;;21519:49;21624:42;21615:6;21609:13;21605:62;21599:3;21588:9;21584:19;21577:91;21218:456;;;;;:::o;21679:1276::-;22123:4;22152:3;22182:6;22171:9;22164:25;22237:42;22229:6;22225:55;22220:2;22209:9;22205:18;22198:83;22300:18;22366:2;22358:6;22354:15;22349:2;22338:9;22334:18;22327:43;22406:2;22401;22390:9;22386:18;22379:30;22432:56;22484:2;22473:9;22469:18;22461:6;22432:56;:::i;:::-;22418:70;;22537:9;22529:6;22525:22;22519:3;22508:9;22504:19;22497:51;22571:44;22608:6;22600;22571:44;:::i;:::-;22557:58;;22664:4;22656:6;22652:17;22646:3;22635:9;22631:19;22624:46;22719:9;22711:6;22707:22;22701:3;22690:9;22686:19;22679:51;22753:33;22779:6;22771;22753:33;:::i;:::-;22823:15;;;22817:3;22802:19;;22795:44;22876:22;;;22870:3;22855:19;;22848:51;22739:47;-1:-1:-1;22916:33:351;22739:47;22934:6;22916:33;:::i;22960:212::-;23028:20;;23088:58;23077:70;;23067:81;;23057:109;;23162:1;23159;23152:12;23177:960;23245:5;23298:3;23291:4;23283:6;23279:17;23275:27;23265:55;;23316:1;23313;23306:12;23265:55;23352:6;23339:20;23378:4;23402:60;23418:43;23458:2;23418:43;:::i;23402:60::-;23496:15;;;23582:1;23578:10;;;;23566:23;;23562:32;;;23527:12;;;;23606:15;;;23603:35;;;23634:1;23631;23624:12;23603:35;23670:2;23662:6;23658:15;23682:426;23698:6;23693:3;23690:15;23682:426;;;23776:4;23770:3;23765;23761:13;23757:24;23754:114;;;23822:1;23851:2;23847;23840:14;23754:114;23894:22;;:::i;:::-;23943;23961:3;23943:22;:::i;:::-;23936:5;23929:37;24002:32;24030:2;24025:3;24021:12;24002:32;:::i;:::-;23986:14;;;23979:56;24048:18;;24086:12;;;;23724:4;23715:14;23682:426;;24142:293;24197:5;24245:4;24233:9;24228:3;24224:19;24220:30;24217:50;;;24263:1;24260;24253:12;24217:50;24285:22;;:::i;:::-;24276:31;;24330:28;24348:9;24330:28;:::i;:::-;24323:5;24316:43;24391:37;24424:2;24413:9;24409:18;24391:37;:::i;:::-;24386:2;24379:5;24375:14;24368:61;24142:293;;;;:::o;24440:2156::-;24530:6;24561:2;24604;24592:9;24583:7;24579:23;24575:32;24572:52;;;24620:1;24617;24610:12;24572:52;24660:9;24647:23;24689:18;24730:2;24722:6;24719:14;24716:34;;;24746:1;24743;24736:12;24716:34;24769:22;;;;24825:4;24807:16;;;24803:27;24800:47;;;24843:1;24840;24833:12;24800:47;24869:22;;:::i;:::-;24929:2;24916:16;24957:2;24947:8;24944:16;24941:36;;;24973:1;24970;24963:12;24941:36;24996:17;;25032:4;25052:16;;;25048:25;-1:-1:-1;25045:45:351;;;25086:1;25083;25076:12;25045:45;25114:22;;:::i;:::-;25174:2;25161:16;25202:2;25192:8;25189:16;25186:36;;;25218:1;25215;25208:12;25186:36;25241:17;;25289:4;25281:13;;25277:27;-1:-1:-1;25267:55:351;;25318:1;25315;25308:12;25267:55;25354:2;25341:16;25377:60;25393:43;25433:2;25393:43;:::i;25377:60::-;25471:15;;;25553:1;25549:10;;;;25541:19;;25537:28;;;25502:12;;;;25577:19;;;25574:39;;;25609:1;25606;25599:12;25574:39;25633:11;;;;25653:510;25669:6;25664:3;25661:15;25653:510;;;25749:2;25743:3;25734:7;25730:17;25726:26;25723:116;;;25793:1;25822:2;25818;25811:14;25723:116;25867:22;;:::i;:::-;25930:3;25917:17;25947:33;25972:7;25947:33;:::i;:::-;25993:24;;26055:32;26074:12;;;26055:32;:::i;:::-;26037:16;;;26030:58;26101:20;;25686:12;;;;26141;;;;25653:510;;;26172:22;;-1:-1:-1;;;26232:11:351;;;26219:25;26256:16;;;26253:36;;;26285:1;26282;26275:12;26253:36;26323:70;26385:7;26374:8;26370:2;26366:17;26323:70;:::i;:::-;26305:16;;;26298:96;-1:-1:-1;26403:22:351;;26457:48;26497:7;26484:11;;;26457:48;:::i;:::-;26452:2;26445:5;26441:14;26434:72;26559:4;26555:2;26551:13;26538:27;26533:2;26526:5;26522:14;26515:51;;;26585:5;26575:15;;;;;;24440:2156;;;;:::o;26601:1489::-;26750:12;;26684:4;26771:15;;;26835:19;;26709:12;;;26863:20;;;26656:3;;26932:4;;26959:21;;;;26910:2;26901:12;;;26656:3;27008:376;27022:6;27019:1;27016:13;27008:376;;;27081:13;;27125:9;;27136:42;27121:58;27107:73;;27226:11;;27220:18;27240:58;27216:83;27200:14;;;27193:107;27359:15;;;;27322:14;;;;27044:1;27037:9;27008:376;;;-1:-1:-1;;27421:14:351;;;27415:21;27466:15;;;27452:12;;;27445:37;27534:21;;27564:23;;;27644;;;;-1:-1:-1;27687:1:351;;27605:14;;;27697:366;27713:8;27708:3;27705:17;27697:366;;;27778:15;;27824:9;;27835:18;27820:34;27806:49;;27901:11;;27895:18;27915:58;27891:83;27875:14;;;27868:107;28036:17;;;;27741:1;27732:11;;;;;27997:14;;;;27697:366;;;-1:-1:-1;28079:5:351;26601:1489;-1:-1:-1;;;;;;;26601:1489:351:o;28095:275::-;28286:2;28275:9;28268:21;28249:4;28306:58;28360:2;28349:9;28345:18;28337:6;28306:58;:::i;28584:251::-;28772:2;28757:18;;28784:45;28761:9;28811:6;28490:12;;28447:18;28486:21;;;28474:34;;28561:4;28550:16;;;28544:23;28540:32;28524:14;;28517:56;28375:204;28840:180;28907:18;28945:10;;;28957;;;28941:27;;28980:11;;;28977:37;;;28994:18;;:::i;:::-;28977:37;28840:180;;;;:::o;29025:579::-;29216:2;29205:9;29198:21;29179:4;29254:6;29248:13;29297:4;29292:2;29281:9;29277:18;29270:32;29325:65;29385:3;29374:9;29370:19;29356:12;29325:65;:::i;:::-;29311:79;;29439:2;29431:6;29427:15;29421:22;29452:62;29510:2;29499:9;29495:18;29479:14;28490:12;;28447:18;28486:21;;;28474:34;;28561:4;28550:16;;;28544:23;28540:32;28524:14;;28517:56;28375:204;29452:62;;29570:2;29562:6;29558:15;29552:22;29545:4;29534:9;29530:20;29523:52;29592:6;29584:14;;;29025:579;;;;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "67278": [
        {
          "start": 465,
          "length": 32
        },
        {
          "start": 7025,
          "length": 32
        }
      ],
      "67280": [
        {
          "start": 513,
          "length": 32
        },
        {
          "start": 7072,
          "length": 32
        }
      ],
      "67282": [
        {
          "start": 561,
          "length": 32
        },
        {
          "start": 7111,
          "length": 32
        }
      ],
      "67284": [
        {
          "start": 621,
          "length": 32
        },
        {
          "start": 1335,
          "length": 32
        },
        {
          "start": 4467,
          "length": 32
        },
        {
          "start": 6559,
          "length": 32
        },
        {
          "start": 7150,
          "length": 32
        },
        {
          "start": 8299,
          "length": 32
        }
      ],
      "72514": [
        {
          "start": 5045,
          "length": 32
        }
      ],
      "72516": [
        {
          "start": 4846,
          "length": 32
        },
        {
          "start": 4922,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "acceptOwnership()": "79ba5097",
    "getDynamicConfig()": "7437ff9f",
    "getExpectedNextSequenceNumber()": "4120fccd",
    "getLatestPriceEpochAndRound()": "10c374ed",
    "getMerkleRoot(bytes32)": "a7206cd6",
    "getStaticConfig()": "06285c69",
    "getTransmitters()": "666cab8d",
    "isARMHealthy()": "0a6cd30d",
    "isBlessed(bytes32)": "ff888fb1",
    "isUnpausedAndARMHealthy()": "8db94e44",
    "latestConfigDetails()": "81ff7048",
    "latestConfigDigestAndEpoch()": "afcb95d7",
    "owner()": "8da5cb5b",
    "pause()": "8456cb59",
    "paused()": "5c975abb",
    "resetUnblessedRoots(bytes32[])": "f47a8690",
    "setLatestPriceEpochAndRound(uint40)": "29b980e4",
    "setMinSeqNr(uint64)": "ad7a22f8",
    "setOCR2Config(address[],address[],uint8,bytes,uint64,bytes)": "1ef38174",
    "transferOwnership(address)": "f2fde38b",
    "transmit(bytes32[3],bytes,bytes32[],bytes32[],bytes32)": "b1dc65a4",
    "typeAndVersion()": "181f5a77",
    "unpause()": "3f4ba83a",
    "verify(bytes32[],bytes32[],uint256)": "32048875"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"chainSelector\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"sourceChainSelector\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"onRamp\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"armProxy\",\"type\":\"address\"}],\"internalType\":\"struct CommitStore.StaticConfig\",\"name\":\"staticConfig\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BadARMSignal\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"expected\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"actual\",\"type\":\"bytes32\"}],\"name\":\"ConfigDigestMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actual\",\"type\":\"uint256\"}],\"name\":\"ForkedChain\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCommitStoreConfig\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"InvalidConfig\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"min\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"max\",\"type\":\"uint64\"}],\"internalType\":\"struct CommitStore.Interval\",\"name\":\"interval\",\"type\":\"tuple\"}],\"name\":\"InvalidInterval\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidProof\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRoot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LeavesCannotBeEmpty\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NonUniqueSignatures\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OracleCannotBeZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PausedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RootAlreadyCommitted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SignaturesOutOfRegistration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StaleReport\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedSigner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedTransmitter\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actual\",\"type\":\"uint256\"}],\"name\":\"WrongMessageLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WrongNumberOfSignatures\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"chainSelector\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"sourceChainSelector\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"onRamp\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"armProxy\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct CommitStore.StaticConfig\",\"name\":\"staticConfig\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"priceRegistry\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct CommitStore.DynamicConfig\",\"name\":\"dynamicConfig\",\"type\":\"tuple\"}],\"name\":\"ConfigSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"previousConfigBlockNumber\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"configDigest\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"configCount\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"transmitters\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"f\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"onchainConfig\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"offchainConfigVersion\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"offchainConfig\",\"type\":\"bytes\"}],\"name\":\"ConfigSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sourceToken\",\"type\":\"address\"},{\"internalType\":\"uint224\",\"name\":\"usdPerToken\",\"type\":\"uint224\"}],\"internalType\":\"struct Internal.TokenPriceUpdate[]\",\"name\":\"tokenPriceUpdates\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"destChainSelector\",\"type\":\"uint64\"},{\"internalType\":\"uint224\",\"name\":\"usdPerUnitGas\",\"type\":\"uint224\"}],\"internalType\":\"struct Internal.GasPriceUpdate[]\",\"name\":\"gasPriceUpdates\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Internal.PriceUpdates\",\"name\":\"priceUpdates\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"min\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"max\",\"type\":\"uint64\"}],\"internalType\":\"struct CommitStore.Interval\",\"name\":\"interval\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"indexed\":false,\"internalType\":\"struct CommitStore.CommitReport\",\"name\":\"report\",\"type\":\"tuple\"}],\"name\":\"ReportAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"}],\"name\":\"RootRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"configDigest\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"epoch\",\"type\":\"uint32\"}],\"name\":\"Transmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDynamicConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"priceRegistry\",\"type\":\"address\"}],\"internalType\":\"struct CommitStore.DynamicConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getExpectedNextSequenceNumber\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestPriceEpochAndRound\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"}],\"name\":\"getMerkleRoot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStaticConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"chainSelector\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"sourceChainSelector\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"onRamp\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"armProxy\",\"type\":\"address\"}],\"internalType\":\"struct CommitStore.StaticConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTransmitters\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isARMHealthy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"}],\"name\":\"isBlessed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isUnpausedAndARMHealthy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestConfigDetails\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"configCount\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"configDigest\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestConfigDigestAndEpoch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"scanLogs\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"configDigest\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"epoch\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"rootToReset\",\"type\":\"bytes32[]\"}],\"name\":\"resetUnblessedRoots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint40\",\"name\":\"latestPriceEpochAndRound\",\"type\":\"uint40\"}],\"name\":\"setLatestPriceEpochAndRound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"minSeqNr\",\"type\":\"uint64\"}],\"name\":\"setMinSeqNr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"transmitters\",\"type\":\"address[]\"},{\"internalType\":\"uint8\",\"name\":\"f\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"onchainConfig\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"offchainConfigVersion\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"offchainConfig\",\"type\":\"bytes\"}],\"name\":\"setOCR2Config\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[3]\",\"name\":\"reportContext\",\"type\":\"bytes32[3]\"},{\"internalType\":\"bytes\",\"name\":\"report\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"rs\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"ss\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32\",\"name\":\"rawVs\",\"type\":\"bytes32\"}],\"name\":\"transmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"typeAndVersion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"hashedLeaves\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"proofs\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"proofFlagBits\",\"type\":\"uint256\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ConfigSet(uint32,bytes32,uint64,address[],address[],uint8,bytes,uint64,bytes)\":{\"params\":{\"configCount\":\"ordinal number of this config setting among all config settings over the life of this contract\",\"configDigest\":\"configDigest of this configuration\",\"f\":\"maximum number of faulty/dishonest oracles the protocol can tolerate while still working correctly\",\"offchainConfig\":\"serialized configuration used by the oracles exclusively and only passed through the contract\",\"offchainConfigVersion\":\"version of the serialization format used for \\\"offchainConfig\\\" parameter\",\"onchainConfig\":\"serialized configuration used by the contract (and possibly oracles)\",\"previousConfigBlockNumber\":\"block in which the previous config was set, to simplify historic analysis\",\"signers\":\"ith element is address ith oracle uses to sign a report\",\"transmitters\":\"ith element is address ith oracle uses to transmit a report via the transmit method\"}},\"ReportAccepted((((address,uint224)[],(uint64,uint224)[]),(uint64,uint64),bytes32))\":{\"details\":\"RMN depends on this event, if changing, please notify the RMN maintainers.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"When instantiating OCR2Base we set UNIQUE_REPORTS to false, which means that we do not require 2f+1 signatures on a report, only f+1 to save gas. 2f+1 is required only if one must strictly ensure that for a given round there is only one valid report ever generated by the DON. In our case additional valid reports (i.e. approved by >= f+1 oracles) are not a problem, as they will will either be ignored (reverted as an invalid interval) or will be accepted as an additional valid price update.\",\"params\":{\"staticConfig\":\"Containing the static part of the commitStore config\"}},\"getDynamicConfig()\":{\"returns\":{\"_0\":\"the configuration.\"}},\"getExpectedNextSequenceNumber()\":{\"returns\":{\"_0\":\"the next expected sequenceNumber.\"}},\"getLatestPriceEpochAndRound()\":{\"returns\":{\"_0\":\"the latest price epoch and round.\"}},\"getMerkleRoot(bytes32)\":{\"params\":{\"root\":\"The merkle root to check the commit status for.\"},\"returns\":{\"_0\":\"the timestamp of the committed root or zero in the case that it was never committed.\"}},\"getStaticConfig()\":{\"details\":\"RMN depends on this function, if changing, please notify the RMN maintainers.\",\"returns\":{\"_0\":\"the configuration.\"}},\"getTransmitters()\":{\"details\":\"The list will match the order used to specify the transmitter during setConfig\",\"returns\":{\"_0\":\"list of addresses permitted to transmit reports to this contract\"}},\"isBlessed(bytes32)\":{\"params\":{\"root\":\"The merkle root to check the blessing status for.\"},\"returns\":{\"_0\":\"whether the root is blessed or not.\"}},\"latestConfigDetails()\":{\"returns\":{\"blockNumber\":\"block at which this config was set\",\"configCount\":\"ordinal number of current config, out of all configs applied to this contract so far\",\"configDigest\":\"domain-separation tag for current config (see _configDigestFromConfigData)\"}},\"latestConfigDigestAndEpoch()\":{\"returns\":{\"configDigest\":\"configDigest\",\"epoch\":\"epoch\",\"scanLogs\":\"indicates whether to rely on the configDigest and epoch returned or whether to scan logs for the Transmitted event instead.\"}},\"pause()\":{\"details\":\"only callable by the owner\"},\"resetUnblessedRoots(bytes32[])\":{\"params\":{\"rootToReset\":\"The roots that will be reset. This function will only reset roots that are not blessed.\"}},\"setLatestPriceEpochAndRound(uint40)\":{\"params\":{\"latestPriceEpochAndRound\":\"The new epoch and round for prices.\"}},\"setMinSeqNr(uint64)\":{\"params\":{\"minSeqNr\":\"The new minimum sequence number.\"}},\"setOCR2Config(address[],address[],uint8,bytes,uint64,bytes)\":{\"params\":{\"f\":\"number of faulty oracles the system can tolerate\",\"offchainConfig\":\"encoded off-chain oracle configuration\",\"offchainConfigVersion\":\"version number for offchainEncoding schema\",\"onchainConfig\":\"encoded on-chain contract configuration\",\"signers\":\"addresses with which oracles sign the reports\",\"transmitters\":\"addresses oracles use to transmit the reports\"}},\"transmit(bytes32[3],bytes,bytes32[],bytes32[],bytes32)\":{\"params\":{\"rawVs\":\"ith element is the the V component of the ith signature\",\"report\":\"serialized report, which the signatures are signing.\",\"rs\":\"ith element is the R components of the ith signature on report. Must have at most MAX_NUM_ORACLES entries\",\"ss\":\"ith element is the S components of the ith signature on report. Must have at most MAX_NUM_ORACLES entries\"}},\"unpause()\":{\"details\":\"only callable by the owner\"},\"verify(bytes32[],bytes32[],uint256)\":{\"details\":\"This method uses a merkle tree within a merkle tree, with the hashedLeaves, proofs and proofFlagBits being used to get the root of the inner tree. This root is then used as the singular leaf of the outer tree.\"}},\"stateVariables\":{\"s_latestPriceEpochAndRound\":{\"details\":\"The epoch and round of the last report\"},\"s_paused\":{\"details\":\"Whether this OnRamp is paused or not\"}},\"version\":1},\"userdoc\":{\"events\":{\"ConfigSet(uint32,bytes32,uint64,address[],address[],uint8,bytes,uint64,bytes)\":{\"notice\":\"triggers a new run of the offchain reporting protocol\"},\"Transmitted(bytes32,uint32)\":{\"notice\":\"optionally emitted to indicate the latest configDigest and epoch for which a report was successfully transmitted. Alternatively, the contract may use latestConfigDigestAndEpoch with scanLogs set to false.\"}},\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"getDynamicConfig()\":{\"notice\":\"Returns the dynamic commit store config.\"},\"getExpectedNextSequenceNumber()\":{\"notice\":\"Returns the next expected sequence number.\"},\"getLatestPriceEpochAndRound()\":{\"notice\":\"Returns the epoch and round of the last price update.\"},\"getMerkleRoot(bytes32)\":{\"notice\":\"Returns the timestamp of a potentially previously committed merkle root. If the root was never committed 0 will be returned.\"},\"getStaticConfig()\":{\"notice\":\"Returns the static commit store config.\"},\"isARMHealthy()\":{\"notice\":\"Support querying whether health checker is healthy.\"},\"isBlessed(bytes32)\":{\"notice\":\"Returns if a root is blessed or not.\"},\"isUnpausedAndARMHealthy()\":{\"notice\":\"Single function to check the status of the commitStore.\"},\"latestConfigDetails()\":{\"notice\":\"information about current offchain reporting protocol configuration\"},\"latestConfigDigestAndEpoch()\":{\"notice\":\"optionally returns the latest configDigest and epoch for which a report was successfully transmitted. Alternatively, the contract may return scanLogs set to true and use Transmitted events to provide this information to offchain watchers.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"pause()\":{\"notice\":\"Pause the contract\"},\"paused()\":{\"notice\":\"Returns true if the contract is paused, and false otherwise.\"},\"resetUnblessedRoots(bytes32[])\":{\"notice\":\"Used by the owner in case an invalid sequence of roots has been posted and needs to be removed. The interval in the report is trusted.\"},\"setLatestPriceEpochAndRound(uint40)\":{\"notice\":\"Sets the latest epoch and round for price update.\"},\"setMinSeqNr(uint64)\":{\"notice\":\"Sets the minimum sequence number.\"},\"setOCR2Config(address[],address[],uint8,bytes,uint64,bytes)\":{\"notice\":\"sets offchain reporting protocol configuration incl. participating oracles\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address, pending.\"},\"transmit(bytes32[3],bytes,bytes32[],bytes32[],bytes32)\":{\"notice\":\"transmit is called to post a new report to the contract\"},\"unpause()\":{\"notice\":\"Unpause the contract\"},\"verify(bytes32[],bytes32[],uint256)\":{\"notice\":\"Returns timestamp of when root was accepted or 0 if verification fails.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/v0.8/ccip/CommitStore.sol\":\"CommitStore\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@ERC3643/=lib/ERC-3643/contracts/\",\":@chainlink/contracts-ccip/=src/v0.8/\",\":@chainlink/contracts/=node_modules/@chainlink/contracts/src/v0.6/\",\":@erc721a/=lib/ERC721A/contracts/\",\":@onchain-id/solidity/contracts/=lib/solidity/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/test/=lib/prb-test/src/\",\":ERC-3643/=lib/ERC-3643/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/contracts-upgradleable/=lib/openzeppelin-contracts-upgradleable/contracts/\",\":prb-test/=lib/prb-test/src/\",\":solidity/=lib/solidity/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"src/v0.8/ccip/CommitStore.sol\":{\"keccak256\":\"0xcfa75b67c70ff8df73dd08ed1fdb5359a278d1739f4e7e5774e060d79b59812d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2af0ceb21e9942b2b38ec51cea240af45e22b6705ad5821564adb538eb537628\",\"dweb:/ipfs/QmU4PBRUbow4NkDusuPupnhEEBMKfv6yP2k62MWaSVe1ru\"]},\"src/v0.8/ccip/interfaces/IARM.sol\":{\"keccak256\":\"0x7d0609f6b36bce268df88bb6b525d1b53033f5ad443579a22f06ba92974f89cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9899c4237f92f635ed23f8403963091c996dcc2d5bac540f5cb0010b95246429\",\"dweb:/ipfs/QmSri7Q36D5UCPRvDoCFr9RJYQKLKr9188wRxrVYyADVH4\"]},\"src/v0.8/ccip/interfaces/ICommitStore.sol\":{\"keccak256\":\"0x07eefec62840b0cbb72d2c3ae0db5185e7be3bf18a4e46c7321092df4582ca4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9a4fa46de25eef979b73256c125160fed84bef208501de933a45c83b5f7b60c\",\"dweb:/ipfs/QmdBwDXe9Ra2BB2JAaNwVN6YqTJPziffah2RkEtc2ZkhWS\"]},\"src/v0.8/ccip/interfaces/IPriceRegistry.sol\":{\"keccak256\":\"0xa720e33296cbb18dffe5dcf9d7e3c4b4c0532bdd09dec689243bda01d50d07e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aebab6f04456ec25ce4ec289012b9401ec10fb4426c09095595ac4ffca15ae77\",\"dweb:/ipfs/QmfCnSXWSSiXd5pPTYZKkq6NcbpCto6tFM6EGeWqZ6TyMv\"]},\"src/v0.8/ccip/libraries/Client.sol\":{\"keccak256\":\"0x8af3ac1085c87342373772fb1a0107c7b90258e6bfed318ab2a601a14477e679\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://14395fefc8310c9a355262359c8f51036f83c004982fb600164c2a007629f81e\",\"dweb:/ipfs/QmeCLr8a5bDVyLQm8v947ULgV4CZmUeQPjVyWixzieBD5o\"]},\"src/v0.8/ccip/libraries/Internal.sol\":{\"keccak256\":\"0x47b734c896e5a286ff0f18d20fd208bc87150ceb724aebda836c681f58fe2013\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://394af09ff5d59cf031fadf2ada0562ea8703f28582034e1ba8edfd673925df20\",\"dweb:/ipfs/Qmdm4N95RKwq6QLce8scsccT5pvNPAccQKt3i4WniUwLaj\"]},\"src/v0.8/ccip/libraries/MerkleMultiProof.sol\":{\"keccak256\":\"0x9f2e5edd718cd1b5aa7143ca39ee50d7c15b8456ce32c49c10833c9ef3b0eb72\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c2591501ed4b28164009e58166324634a0ce79a0599ee682d47d825f302a9955\",\"dweb:/ipfs/QmeN35m4PFQDBc1ew2Q5koYNfchf8DcTemUmXVFVSuZV5t\"]},\"src/v0.8/ccip/ocr/OCR2Abstract.sol\":{\"keccak256\":\"0xdac140f9da44203be2953c220a463e3ea6d49ac4a72bcbff103f57af89ae77e9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://bb68c19d2aea9b1813d7a2895a4e1e78f0d86b4310d773a068f5cd139139b691\",\"dweb:/ipfs/QmQe5RHRU3tjiX2USo23Pasg6tCoJ9UMrsDKSihtuDZfKc\"]},\"src/v0.8/ccip/ocr/OCR2Base.sol\":{\"keccak256\":\"0xc92eb69254114118568f4424cde6f7c93cf874c48c4453a7652b82488af5fcb6\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a1384ab49a95fb3de4f878fa43ec25504b62d045095b5cb394d0e7174c6a628a\",\"dweb:/ipfs/QmeSdEzhPwZ4BsTduseKkkqZ1RC78bJTJRNUQZkZ29PpuF\"]},\"src/v0.8/shared/access/ConfirmedOwner.sol\":{\"keccak256\":\"0x99d0b0786fe368970009c703f2249bfbc56340ddf1a28b60d2915bb58c34cd72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af0371c1af45db651823b9a3d5af761b08243c78f105166342eee28de356c8dd\",\"dweb:/ipfs/QmPnC9qNDKwJFd5unwLb9pxjrutoe8MWjm5EXHTxq2kJ4x\"]},\"src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"keccak256\":\"0x215529a99534a40e6257ef2282a91ea4a95b66debc3997866406907622efb405\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecc56a2cddb1ba6225ca0cffb07fdf6e24bcc4234cc87710c42a59c0a21ae395\",\"dweb:/ipfs/QmSpW4vkPHeRNZ14beMEk2LEtqY5JQTueNJC4sCT8JaSoc\"]},\"src/v0.8/shared/access/OwnerIsCreator.sol\":{\"keccak256\":\"0x895af02d6a3df2930bbb6ec1f2d68118b492ca6e710ba0c34fcb6b574a0906aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4c69fab5eea1c0448f856a51d7e5736454fe5cc083d36c60bf3ee23bb3d0e8e\",\"dweb:/ipfs/QmP4fYQ9k7xeZms6cwnqnQuuAkRkeE2TWewyvCD8Mrc2DZ\"]},\"src/v0.8/shared/interfaces/IOwnable.sol\":{\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921\",\"dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q\"]},\"src/v0.8/shared/interfaces/ITypeAndVersion.sol\":{\"keccak256\":\"0xf5827cb463c01d055021684d04f9186391c2d9ac850e0d0819f76140e4fc84ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a19c7bae07330e6d7904a0a21cf0ab0067ef096b66c1653a2e012801a931c5b9\",\"dweb:/ipfs/QmckpvSuLx8UL8zfVzAtN6ZRxyXHUSVqqz2JwYZ2jrK58h\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "struct CommitStore.StaticConfig",
              "name": "staticConfig",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint64",
                  "name": "chainSelector",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "sourceChainSelector",
                  "type": "uint64"
                },
                {
                  "internalType": "address",
                  "name": "onRamp",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "armProxy",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BadARMSignal"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "expected",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "actual",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "ConfigDigestMismatch"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "expected",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "actual",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ForkedChain"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidCommitStoreConfig"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "message",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "InvalidConfig"
        },
        {
          "inputs": [
            {
              "internalType": "struct CommitStore.Interval",
              "name": "interval",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint64",
                  "name": "min",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "max",
                  "type": "uint64"
                }
              ]
            }
          ],
          "type": "error",
          "name": "InvalidInterval"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidProof"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidRoot"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LeavesCannotBeEmpty"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NonUniqueSignatures"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OracleCannotBeZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PausedError"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RootAlreadyCommitted"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SignaturesOutOfRegistration"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "StaleReport"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnauthorizedSigner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnauthorizedTransmitter"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "expected",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "actual",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "WrongMessageLength"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "WrongNumberOfSignatures"
        },
        {
          "inputs": [
            {
              "internalType": "struct CommitStore.StaticConfig",
              "name": "staticConfig",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint64",
                  "name": "chainSelector",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "sourceChainSelector",
                  "type": "uint64"
                },
                {
                  "internalType": "address",
                  "name": "onRamp",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "armProxy",
                  "type": "address"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "struct CommitStore.DynamicConfig",
              "name": "dynamicConfig",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "priceRegistry",
                  "type": "address"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ConfigSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "previousConfigBlockNumber",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "configDigest",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "uint64",
              "name": "configCount",
              "type": "uint64",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "signers",
              "type": "address[]",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "transmitters",
              "type": "address[]",
              "indexed": false
            },
            {
              "internalType": "uint8",
              "name": "f",
              "type": "uint8",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "onchainConfig",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "uint64",
              "name": "offchainConfigVersion",
              "type": "uint64",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "offchainConfig",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ConfigSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferRequested",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct CommitStore.CommitReport",
              "name": "report",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct Internal.PriceUpdates",
                  "name": "priceUpdates",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "struct Internal.TokenPriceUpdate[]",
                      "name": "tokenPriceUpdates",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "sourceToken",
                          "type": "address"
                        },
                        {
                          "internalType": "uint224",
                          "name": "usdPerToken",
                          "type": "uint224"
                        }
                      ]
                    },
                    {
                      "internalType": "struct Internal.GasPriceUpdate[]",
                      "name": "gasPriceUpdates",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "uint64",
                          "name": "destChainSelector",
                          "type": "uint64"
                        },
                        {
                          "internalType": "uint224",
                          "name": "usdPerUnitGas",
                          "type": "uint224"
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "struct CommitStore.Interval",
                  "name": "interval",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint64",
                      "name": "min",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "max",
                      "type": "uint64"
                    }
                  ]
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ReportAccepted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RootRemoved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "configDigest",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "epoch",
              "type": "uint32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transmitted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDynamicConfig",
          "outputs": [
            {
              "internalType": "struct CommitStore.DynamicConfig",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "priceRegistry",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getExpectedNextSequenceNumber",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getLatestPriceEpochAndRound",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMerkleRoot",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getStaticConfig",
          "outputs": [
            {
              "internalType": "struct CommitStore.StaticConfig",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint64",
                  "name": "chainSelector",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "sourceChainSelector",
                  "type": "uint64"
                },
                {
                  "internalType": "address",
                  "name": "onRamp",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "armProxy",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getTransmitters",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isARMHealthy",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isBlessed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isUnpausedAndARMHealthy",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "latestConfigDetails",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "configCount",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "blockNumber",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "configDigest",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "latestConfigDigestAndEpoch",
          "outputs": [
            {
              "internalType": "bool",
              "name": "scanLogs",
              "type": "bool"
            },
            {
              "internalType": "bytes32",
              "name": "configDigest",
              "type": "bytes32"
            },
            {
              "internalType": "uint32",
              "name": "epoch",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32[]",
              "name": "rootToReset",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "resetUnblessedRoots"
        },
        {
          "inputs": [
            {
              "internalType": "uint40",
              "name": "latestPriceEpochAndRound",
              "type": "uint40"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setLatestPriceEpochAndRound"
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "minSeqNr",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMinSeqNr"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "signers",
              "type": "address[]"
            },
            {
              "internalType": "address[]",
              "name": "transmitters",
              "type": "address[]"
            },
            {
              "internalType": "uint8",
              "name": "f",
              "type": "uint8"
            },
            {
              "internalType": "bytes",
              "name": "onchainConfig",
              "type": "bytes"
            },
            {
              "internalType": "uint64",
              "name": "offchainConfigVersion",
              "type": "uint64"
            },
            {
              "internalType": "bytes",
              "name": "offchainConfig",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOCR2Config"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32[3]",
              "name": "reportContext",
              "type": "bytes32[3]"
            },
            {
              "internalType": "bytes",
              "name": "report",
              "type": "bytes"
            },
            {
              "internalType": "bytes32[]",
              "name": "rs",
              "type": "bytes32[]"
            },
            {
              "internalType": "bytes32[]",
              "name": "ss",
              "type": "bytes32[]"
            },
            {
              "internalType": "bytes32",
              "name": "rawVs",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transmit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "typeAndVersion",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32[]",
              "name": "hashedLeaves",
              "type": "bytes32[]"
            },
            {
              "internalType": "bytes32[]",
              "name": "proofs",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "proofFlagBits",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verify",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "details": "When instantiating OCR2Base we set UNIQUE_REPORTS to false, which means that we do not require 2f+1 signatures on a report, only f+1 to save gas. 2f+1 is required only if one must strictly ensure that for a given round there is only one valid report ever generated by the DON. In our case additional valid reports (i.e. approved by >= f+1 oracles) are not a problem, as they will will either be ignored (reverted as an invalid interval) or will be accepted as an additional valid price update.",
            "params": {
              "staticConfig": "Containing the static part of the commitStore config"
            }
          },
          "getDynamicConfig()": {
            "returns": {
              "_0": "the configuration."
            }
          },
          "getExpectedNextSequenceNumber()": {
            "returns": {
              "_0": "the next expected sequenceNumber."
            }
          },
          "getLatestPriceEpochAndRound()": {
            "returns": {
              "_0": "the latest price epoch and round."
            }
          },
          "getMerkleRoot(bytes32)": {
            "params": {
              "root": "The merkle root to check the commit status for."
            },
            "returns": {
              "_0": "the timestamp of the committed root or zero in the case that it was never committed."
            }
          },
          "getStaticConfig()": {
            "details": "RMN depends on this function, if changing, please notify the RMN maintainers.",
            "returns": {
              "_0": "the configuration."
            }
          },
          "getTransmitters()": {
            "details": "The list will match the order used to specify the transmitter during setConfig",
            "returns": {
              "_0": "list of addresses permitted to transmit reports to this contract"
            }
          },
          "isBlessed(bytes32)": {
            "params": {
              "root": "The merkle root to check the blessing status for."
            },
            "returns": {
              "_0": "whether the root is blessed or not."
            }
          },
          "latestConfigDetails()": {
            "returns": {
              "blockNumber": "block at which this config was set",
              "configCount": "ordinal number of current config, out of all configs applied to this contract so far",
              "configDigest": "domain-separation tag for current config (see _configDigestFromConfigData)"
            }
          },
          "latestConfigDigestAndEpoch()": {
            "returns": {
              "configDigest": "configDigest",
              "epoch": "epoch",
              "scanLogs": "indicates whether to rely on the configDigest and epoch returned or whether to scan logs for the Transmitted event instead."
            }
          },
          "pause()": {
            "details": "only callable by the owner"
          },
          "resetUnblessedRoots(bytes32[])": {
            "params": {
              "rootToReset": "The roots that will be reset. This function will only reset roots that are not blessed."
            }
          },
          "setLatestPriceEpochAndRound(uint40)": {
            "params": {
              "latestPriceEpochAndRound": "The new epoch and round for prices."
            }
          },
          "setMinSeqNr(uint64)": {
            "params": {
              "minSeqNr": "The new minimum sequence number."
            }
          },
          "setOCR2Config(address[],address[],uint8,bytes,uint64,bytes)": {
            "params": {
              "f": "number of faulty oracles the system can tolerate",
              "offchainConfig": "encoded off-chain oracle configuration",
              "offchainConfigVersion": "version number for offchainEncoding schema",
              "onchainConfig": "encoded on-chain contract configuration",
              "signers": "addresses with which oracles sign the reports",
              "transmitters": "addresses oracles use to transmit the reports"
            }
          },
          "transmit(bytes32[3],bytes,bytes32[],bytes32[],bytes32)": {
            "params": {
              "rawVs": "ith element is the the V component of the ith signature",
              "report": "serialized report, which the signatures are signing.",
              "rs": "ith element is the R components of the ith signature on report. Must have at most MAX_NUM_ORACLES entries",
              "ss": "ith element is the S components of the ith signature on report. Must have at most MAX_NUM_ORACLES entries"
            }
          },
          "unpause()": {
            "details": "only callable by the owner"
          },
          "verify(bytes32[],bytes32[],uint256)": {
            "details": "This method uses a merkle tree within a merkle tree, with the hashedLeaves, proofs and proofFlagBits being used to get the root of the inner tree. This root is then used as the singular leaf of the outer tree."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "acceptOwnership()": {
            "notice": "Allows an ownership transfer to be completed by the recipient."
          },
          "getDynamicConfig()": {
            "notice": "Returns the dynamic commit store config."
          },
          "getExpectedNextSequenceNumber()": {
            "notice": "Returns the next expected sequence number."
          },
          "getLatestPriceEpochAndRound()": {
            "notice": "Returns the epoch and round of the last price update."
          },
          "getMerkleRoot(bytes32)": {
            "notice": "Returns the timestamp of a potentially previously committed merkle root. If the root was never committed 0 will be returned."
          },
          "getStaticConfig()": {
            "notice": "Returns the static commit store config."
          },
          "isARMHealthy()": {
            "notice": "Support querying whether health checker is healthy."
          },
          "isBlessed(bytes32)": {
            "notice": "Returns if a root is blessed or not."
          },
          "isUnpausedAndARMHealthy()": {
            "notice": "Single function to check the status of the commitStore."
          },
          "latestConfigDetails()": {
            "notice": "information about current offchain reporting protocol configuration"
          },
          "latestConfigDigestAndEpoch()": {
            "notice": "optionally returns the latest configDigest and epoch for which a report was successfully transmitted. Alternatively, the contract may return scanLogs set to true and use Transmitted events to provide this information to offchain watchers."
          },
          "owner()": {
            "notice": "Get the current owner"
          },
          "pause()": {
            "notice": "Pause the contract"
          },
          "paused()": {
            "notice": "Returns true if the contract is paused, and false otherwise."
          },
          "resetUnblessedRoots(bytes32[])": {
            "notice": "Used by the owner in case an invalid sequence of roots has been posted and needs to be removed. The interval in the report is trusted."
          },
          "setLatestPriceEpochAndRound(uint40)": {
            "notice": "Sets the latest epoch and round for price update."
          },
          "setMinSeqNr(uint64)": {
            "notice": "Sets the minimum sequence number."
          },
          "setOCR2Config(address[],address[],uint8,bytes,uint64,bytes)": {
            "notice": "sets offchain reporting protocol configuration incl. participating oracles"
          },
          "transferOwnership(address)": {
            "notice": "Allows an owner to begin transferring ownership to a new address, pending."
          },
          "transmit(bytes32[3],bytes,bytes32[],bytes32[],bytes32)": {
            "notice": "transmit is called to post a new report to the contract"
          },
          "unpause()": {
            "notice": "Unpause the contract"
          },
          "verify(bytes32[],bytes32[],uint256)": {
            "notice": "Returns timestamp of when root was accepted or 0 if verification fails."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ERC3643/=lib/ERC-3643/contracts/",
        "@chainlink/contracts-ccip/=src/v0.8/",
        "@chainlink/contracts/=node_modules/@chainlink/contracts/src/v0.6/",
        "@erc721a/=lib/ERC721A/contracts/",
        "@onchain-id/solidity/contracts/=lib/solidity/contracts/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@prb/test/=lib/prb-test/src/",
        "ERC-3643/=lib/ERC-3643/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/contracts-upgradleable/=lib/openzeppelin-contracts-upgradleable/contracts/",
        "prb-test/=lib/prb-test/src/",
        "solidity/=lib/solidity/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10000
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/v0.8/ccip/CommitStore.sol": "CommitStore"
      },
      "libraries": {}
    },
    "sources": {
      "src/v0.8/ccip/CommitStore.sol": {
        "keccak256": "0xcfa75b67c70ff8df73dd08ed1fdb5359a278d1739f4e7e5774e060d79b59812d",
        "urls": [
          "bzz-raw://2af0ceb21e9942b2b38ec51cea240af45e22b6705ad5821564adb538eb537628",
          "dweb:/ipfs/QmU4PBRUbow4NkDusuPupnhEEBMKfv6yP2k62MWaSVe1ru"
        ],
        "license": "BUSL-1.1"
      },
      "src/v0.8/ccip/interfaces/IARM.sol": {
        "keccak256": "0x7d0609f6b36bce268df88bb6b525d1b53033f5ad443579a22f06ba92974f89cb",
        "urls": [
          "bzz-raw://9899c4237f92f635ed23f8403963091c996dcc2d5bac540f5cb0010b95246429",
          "dweb:/ipfs/QmSri7Q36D5UCPRvDoCFr9RJYQKLKr9188wRxrVYyADVH4"
        ],
        "license": "MIT"
      },
      "src/v0.8/ccip/interfaces/ICommitStore.sol": {
        "keccak256": "0x07eefec62840b0cbb72d2c3ae0db5185e7be3bf18a4e46c7321092df4582ca4b",
        "urls": [
          "bzz-raw://b9a4fa46de25eef979b73256c125160fed84bef208501de933a45c83b5f7b60c",
          "dweb:/ipfs/QmdBwDXe9Ra2BB2JAaNwVN6YqTJPziffah2RkEtc2ZkhWS"
        ],
        "license": "MIT"
      },
      "src/v0.8/ccip/interfaces/IPriceRegistry.sol": {
        "keccak256": "0xa720e33296cbb18dffe5dcf9d7e3c4b4c0532bdd09dec689243bda01d50d07e8",
        "urls": [
          "bzz-raw://aebab6f04456ec25ce4ec289012b9401ec10fb4426c09095595ac4ffca15ae77",
          "dweb:/ipfs/QmfCnSXWSSiXd5pPTYZKkq6NcbpCto6tFM6EGeWqZ6TyMv"
        ],
        "license": "MIT"
      },
      "src/v0.8/ccip/libraries/Client.sol": {
        "keccak256": "0x8af3ac1085c87342373772fb1a0107c7b90258e6bfed318ab2a601a14477e679",
        "urls": [
          "bzz-raw://14395fefc8310c9a355262359c8f51036f83c004982fb600164c2a007629f81e",
          "dweb:/ipfs/QmeCLr8a5bDVyLQm8v947ULgV4CZmUeQPjVyWixzieBD5o"
        ],
        "license": "MIT"
      },
      "src/v0.8/ccip/libraries/Internal.sol": {
        "keccak256": "0x47b734c896e5a286ff0f18d20fd208bc87150ceb724aebda836c681f58fe2013",
        "urls": [
          "bzz-raw://394af09ff5d59cf031fadf2ada0562ea8703f28582034e1ba8edfd673925df20",
          "dweb:/ipfs/Qmdm4N95RKwq6QLce8scsccT5pvNPAccQKt3i4WniUwLaj"
        ],
        "license": "MIT"
      },
      "src/v0.8/ccip/libraries/MerkleMultiProof.sol": {
        "keccak256": "0x9f2e5edd718cd1b5aa7143ca39ee50d7c15b8456ce32c49c10833c9ef3b0eb72",
        "urls": [
          "bzz-raw://c2591501ed4b28164009e58166324634a0ce79a0599ee682d47d825f302a9955",
          "dweb:/ipfs/QmeN35m4PFQDBc1ew2Q5koYNfchf8DcTemUmXVFVSuZV5t"
        ],
        "license": "BUSL-1.1"
      },
      "src/v0.8/ccip/ocr/OCR2Abstract.sol": {
        "keccak256": "0xdac140f9da44203be2953c220a463e3ea6d49ac4a72bcbff103f57af89ae77e9",
        "urls": [
          "bzz-raw://bb68c19d2aea9b1813d7a2895a4e1e78f0d86b4310d773a068f5cd139139b691",
          "dweb:/ipfs/QmQe5RHRU3tjiX2USo23Pasg6tCoJ9UMrsDKSihtuDZfKc"
        ],
        "license": "BUSL-1.1"
      },
      "src/v0.8/ccip/ocr/OCR2Base.sol": {
        "keccak256": "0xc92eb69254114118568f4424cde6f7c93cf874c48c4453a7652b82488af5fcb6",
        "urls": [
          "bzz-raw://a1384ab49a95fb3de4f878fa43ec25504b62d045095b5cb394d0e7174c6a628a",
          "dweb:/ipfs/QmeSdEzhPwZ4BsTduseKkkqZ1RC78bJTJRNUQZkZ29PpuF"
        ],
        "license": "BUSL-1.1"
      },
      "src/v0.8/shared/access/ConfirmedOwner.sol": {
        "keccak256": "0x99d0b0786fe368970009c703f2249bfbc56340ddf1a28b60d2915bb58c34cd72",
        "urls": [
          "bzz-raw://af0371c1af45db651823b9a3d5af761b08243c78f105166342eee28de356c8dd",
          "dweb:/ipfs/QmPnC9qNDKwJFd5unwLb9pxjrutoe8MWjm5EXHTxq2kJ4x"
        ],
        "license": "MIT"
      },
      "src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol": {
        "keccak256": "0x215529a99534a40e6257ef2282a91ea4a95b66debc3997866406907622efb405",
        "urls": [
          "bzz-raw://ecc56a2cddb1ba6225ca0cffb07fdf6e24bcc4234cc87710c42a59c0a21ae395",
          "dweb:/ipfs/QmSpW4vkPHeRNZ14beMEk2LEtqY5JQTueNJC4sCT8JaSoc"
        ],
        "license": "MIT"
      },
      "src/v0.8/shared/access/OwnerIsCreator.sol": {
        "keccak256": "0x895af02d6a3df2930bbb6ec1f2d68118b492ca6e710ba0c34fcb6b574a0906aa",
        "urls": [
          "bzz-raw://c4c69fab5eea1c0448f856a51d7e5736454fe5cc083d36c60bf3ee23bb3d0e8e",
          "dweb:/ipfs/QmP4fYQ9k7xeZms6cwnqnQuuAkRkeE2TWewyvCD8Mrc2DZ"
        ],
        "license": "MIT"
      },
      "src/v0.8/shared/interfaces/IOwnable.sol": {
        "keccak256": "0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767",
        "urls": [
          "bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921",
          "dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q"
        ],
        "license": "MIT"
      },
      "src/v0.8/shared/interfaces/ITypeAndVersion.sol": {
        "keccak256": "0xf5827cb463c01d055021684d04f9186391c2d9ac850e0d0819f76140e4fc84ed",
        "urls": [
          "bzz-raw://a19c7bae07330e6d7904a0a21cf0ab0067ef096b66c1653a2e012801a931c5b9",
          "dweb:/ipfs/QmckpvSuLx8UL8zfVzAtN6ZRxyXHUSVqqz2JwYZ2jrK58h"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/v0.8/ccip/CommitStore.sol",
    "id": 67833,
    "exportedSymbols": {
      "CommitStore": [
        67832
      ],
      "IARM": [
        70844
      ],
      "ICommitStore": [
        70891
      ],
      "IPriceRegistry": [
        71055
      ],
      "ITypeAndVersion": [
        122903
      ],
      "Internal": [
        71518
      ],
      "MerkleMultiProof": [
        71800
      ],
      "OCR2Base": [
        73148
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:13074:101",
    "nodes": [
      {
        "id": 67179,
        "nodeType": "PragmaDirective",
        "src": "37:24:101",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 67181,
        "nodeType": "ImportDirective",
        "src": "63:73:101",
        "nodes": [],
        "absolutePath": "src/v0.8/shared/interfaces/ITypeAndVersion.sol",
        "file": "../shared/interfaces/ITypeAndVersion.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 67833,
        "sourceUnit": 122904,
        "symbolAliases": [
          {
            "foreign": {
              "id": 67180,
              "name": "ITypeAndVersion",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 122903,
              "src": "71:15:101",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 67183,
        "nodeType": "ImportDirective",
        "src": "137:59:101",
        "nodes": [],
        "absolutePath": "src/v0.8/ccip/interfaces/ICommitStore.sol",
        "file": "./interfaces/ICommitStore.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 67833,
        "sourceUnit": 70892,
        "symbolAliases": [
          {
            "foreign": {
              "id": 67182,
              "name": "ICommitStore",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 70891,
              "src": "145:12:101",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 67185,
        "nodeType": "ImportDirective",
        "src": "197:43:101",
        "nodes": [],
        "absolutePath": "src/v0.8/ccip/interfaces/IARM.sol",
        "file": "./interfaces/IARM.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 67833,
        "sourceUnit": 70845,
        "symbolAliases": [
          {
            "foreign": {
              "id": 67184,
              "name": "IARM",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 70844,
              "src": "205:4:101",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 67187,
        "nodeType": "ImportDirective",
        "src": "241:63:101",
        "nodes": [],
        "absolutePath": "src/v0.8/ccip/interfaces/IPriceRegistry.sol",
        "file": "./interfaces/IPriceRegistry.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 67833,
        "sourceUnit": 71056,
        "symbolAliases": [
          {
            "foreign": {
              "id": 67186,
              "name": "IPriceRegistry",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 71055,
              "src": "249:14:101",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 67189,
        "nodeType": "ImportDirective",
        "src": "306:44:101",
        "nodes": [],
        "absolutePath": "src/v0.8/ccip/ocr/OCR2Base.sol",
        "file": "./ocr/OCR2Base.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 67833,
        "sourceUnit": 73149,
        "symbolAliases": [
          {
            "foreign": {
              "id": 67188,
              "name": "OCR2Base",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 73148,
              "src": "314:8:101",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 67191,
        "nodeType": "ImportDirective",
        "src": "351:50:101",
        "nodes": [],
        "absolutePath": "src/v0.8/ccip/libraries/Internal.sol",
        "file": "./libraries/Internal.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 67833,
        "sourceUnit": 71519,
        "symbolAliases": [
          {
            "foreign": {
              "id": 67190,
              "name": "Internal",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 71518,
              "src": "359:8:101",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 67193,
        "nodeType": "ImportDirective",
        "src": "402:66:101",
        "nodes": [],
        "absolutePath": "src/v0.8/ccip/libraries/MerkleMultiProof.sol",
        "file": "./libraries/MerkleMultiProof.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 67833,
        "sourceUnit": 71801,
        "symbolAliases": [
          {
            "foreign": {
              "id": 67192,
              "name": "MerkleMultiProof",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 71800,
              "src": "410:16:101",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 67832,
        "nodeType": "ContractDefinition",
        "src": "470:12640:101",
        "nodes": [
          {
            "id": 67201,
            "nodeType": "ErrorDefinition",
            "src": "538:20:101",
            "nodes": [],
            "errorSelector": "f803a2ca",
            "name": "StaleReport",
            "nameLocation": "544:11:101",
            "parameters": {
              "id": 67200,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "555:2:101"
            }
          },
          {
            "id": 67203,
            "nodeType": "ErrorDefinition",
            "src": "561:20:101",
            "nodes": [],
            "errorSelector": "eced32bc",
            "name": "PausedError",
            "nameLocation": "567:11:101",
            "parameters": {
              "id": 67202,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "578:2:101"
            }
          },
          {
            "id": 67208,
            "nodeType": "ErrorDefinition",
            "src": "584:41:101",
            "nodes": [],
            "errorSelector": "bb1ae18d",
            "name": "InvalidInterval",
            "nameLocation": "590:15:101",
            "parameters": {
              "id": 67207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67206,
                  "mutability": "mutable",
                  "name": "interval",
                  "nameLocation": "615:8:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 67208,
                  "src": "606:17:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Interval_$67262_memory_ptr",
                    "typeString": "struct CommitStore.Interval"
                  },
                  "typeName": {
                    "id": 67205,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 67204,
                      "name": "Interval",
                      "nameLocations": [
                        "606:8:101"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 67262,
                      "src": "606:8:101"
                    },
                    "referencedDeclaration": 67262,
                    "src": "606:8:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Interval_$67262_storage_ptr",
                      "typeString": "struct CommitStore.Interval"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "605:19:101"
            }
          },
          {
            "id": 67210,
            "nodeType": "ErrorDefinition",
            "src": "628:20:101",
            "nodes": [],
            "errorSelector": "504570e3",
            "name": "InvalidRoot",
            "nameLocation": "634:11:101",
            "parameters": {
              "id": 67209,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "645:2:101"
            }
          },
          {
            "id": 67212,
            "nodeType": "ErrorDefinition",
            "src": "651:33:101",
            "nodes": [],
            "errorSelector": "3f8be2be",
            "name": "InvalidCommitStoreConfig",
            "nameLocation": "657:24:101",
            "parameters": {
              "id": 67211,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "681:2:101"
            }
          },
          {
            "id": 67214,
            "nodeType": "ErrorDefinition",
            "src": "687:21:101",
            "nodes": [],
            "errorSelector": "c1483715",
            "name": "BadARMSignal",
            "nameLocation": "693:12:101",
            "parameters": {
              "id": 67213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "705:2:101"
            }
          },
          {
            "id": 67216,
            "nodeType": "ErrorDefinition",
            "src": "711:29:101",
            "nodes": [],
            "errorSelector": "a0bce24f",
            "name": "RootAlreadyCommitted",
            "nameLocation": "717:20:101",
            "parameters": {
              "id": 67215,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "737:2:101"
            }
          },
          {
            "id": 67220,
            "nodeType": "EventDefinition",
            "src": "744:30:101",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
            "name": "Paused",
            "nameLocation": "750:6:101",
            "parameters": {
              "id": 67219,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67218,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "765:7:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 67220,
                  "src": "757:15:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67217,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "757:7:101",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "756:17:101"
            }
          },
          {
            "id": 67224,
            "nodeType": "EventDefinition",
            "src": "777:32:101",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
            "name": "Unpaused",
            "nameLocation": "783:8:101",
            "parameters": {
              "id": 67223,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67222,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "800:7:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 67224,
                  "src": "792:15:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67221,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "792:7:101",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "791:17:101"
            }
          },
          {
            "id": 67230,
            "nodeType": "EventDefinition",
            "src": "898:42:101",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 67225,
              "nodeType": "StructuredDocumentation",
              "src": "812:83:101",
              "text": "@dev RMN depends on this event, if changing, please notify the RMN maintainers."
            },
            "eventSelector": "291698c01aa71f912280535d88a00d2c59fb63530a3f5d0098560468acb9ebf5",
            "name": "ReportAccepted",
            "nameLocation": "904:14:101",
            "parameters": {
              "id": 67229,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67228,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "report",
                  "nameLocation": "932:6:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 67230,
                  "src": "919:19:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CommitReport_$67272_memory_ptr",
                    "typeString": "struct CommitStore.CommitReport"
                  },
                  "typeName": {
                    "id": 67227,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 67226,
                      "name": "CommitReport",
                      "nameLocations": [
                        "919:12:101"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 67272,
                      "src": "919:12:101"
                    },
                    "referencedDeclaration": 67272,
                    "src": "919:12:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CommitReport_$67272_storage_ptr",
                      "typeString": "struct CommitStore.CommitReport"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "918:21:101"
            }
          },
          {
            "id": 67238,
            "nodeType": "EventDefinition",
            "src": "943:72:101",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "c9d7123efd4203e60b0f0a4b1dbc4800fc97ce63679f71c3a27279b24a7ddec3",
            "name": "ConfigSet",
            "nameLocation": "949:9:101",
            "parameters": {
              "id": 67237,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67233,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "staticConfig",
                  "nameLocation": "972:12:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 67238,
                  "src": "959:25:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StaticConfig_$67252_memory_ptr",
                    "typeString": "struct CommitStore.StaticConfig"
                  },
                  "typeName": {
                    "id": 67232,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 67231,
                      "name": "StaticConfig",
                      "nameLocations": [
                        "959:12:101"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 67252,
                      "src": "959:12:101"
                    },
                    "referencedDeclaration": 67252,
                    "src": "959:12:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StaticConfig_$67252_storage_ptr",
                      "typeString": "struct CommitStore.StaticConfig"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67236,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "dynamicConfig",
                  "nameLocation": "1000:13:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 67238,
                  "src": "986:27:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DynamicConfig_$67256_memory_ptr",
                    "typeString": "struct CommitStore.DynamicConfig"
                  },
                  "typeName": {
                    "id": 67235,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 67234,
                      "name": "DynamicConfig",
                      "nameLocations": [
                        "986:13:101"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 67256,
                      "src": "986:13:101"
                    },
                    "referencedDeclaration": 67256,
                    "src": "986:13:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DynamicConfig_$67256_storage_ptr",
                      "typeString": "struct CommitStore.DynamicConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "958:56:101"
            }
          },
          {
            "id": 67242,
            "nodeType": "EventDefinition",
            "src": "1018:32:101",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "202f1139a3e334b6056064c0e9b19fd07e44a88d8f6e5ded571b24cf8c371f12",
            "name": "RootRemoved",
            "nameLocation": "1024:11:101",
            "parameters": {
              "id": 67241,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67240,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "root",
                  "nameLocation": "1044:4:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 67242,
                  "src": "1036:12:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 67239,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1036:7:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1035:14:101"
            }
          },
          {
            "id": 67252,
            "nodeType": "StructDefinition",
            "src": "1182:271:101",
            "nodes": [],
            "canonicalName": "CommitStore.StaticConfig",
            "documentation": {
              "id": 67243,
              "nodeType": "StructuredDocumentation",
              "src": "1054:125:101",
              "text": "@notice Static commit store config\n @dev RMN depends on this struct, if changing, please notify the RMN maintainers."
            },
            "members": [
              {
                "constant": false,
                "id": 67245,
                "mutability": "mutable",
                "name": "chainSelector",
                "nameLocation": "1215:13:101",
                "nodeType": "VariableDeclaration",
                "scope": 67252,
                "src": "1208:20:101",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 67244,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "1208:6:101",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 67247,
                "mutability": "mutable",
                "name": "sourceChainSelector",
                "nameLocation": "1296:19:101",
                "nodeType": "VariableDeclaration",
                "scope": 67252,
                "src": "1289:26:101",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 67246,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "1289:6:101",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 67249,
                "mutability": "mutable",
                "name": "onRamp",
                "nameLocation": "1361:6:101",
                "nodeType": "VariableDeclaration",
                "scope": 67252,
                "src": "1353:14:101",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 67248,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1353:7:101",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 67251,
                "mutability": "mutable",
                "name": "armProxy",
                "nameLocation": "1419:8:101",
                "nodeType": "VariableDeclaration",
                "scope": 67252,
                "src": "1411:16:101",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 67250,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1411:7:101",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "StaticConfig",
            "nameLocation": "1189:12:101",
            "scope": 67832,
            "visibility": "public"
          },
          {
            "id": 67256,
            "nodeType": "StructDefinition",
            "src": "1499:104:101",
            "nodes": [],
            "canonicalName": "CommitStore.DynamicConfig",
            "documentation": {
              "id": 67253,
              "nodeType": "StructuredDocumentation",
              "src": "1457:39:101",
              "text": "@notice Dynamic commit store config"
            },
            "members": [
              {
                "constant": false,
                "id": 67255,
                "mutability": "mutable",
                "name": "priceRegistry",
                "nameLocation": "1534:13:101",
                "nodeType": "VariableDeclaration",
                "scope": 67256,
                "src": "1526:21:101",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 67254,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1526:7:101",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "DynamicConfig",
            "nameLocation": "1506:13:101",
            "scope": 67832,
            "visibility": "public"
          },
          {
            "id": 67262,
            "nodeType": "StructDefinition",
            "src": "1734:155:101",
            "nodes": [],
            "canonicalName": "CommitStore.Interval",
            "documentation": {
              "id": 67257,
              "nodeType": "StructuredDocumentation",
              "src": "1607:124:101",
              "text": "@notice a sequenceNumber interval\n @dev RMN depends on this struct, if changing, please notify the RMN maintainers."
            },
            "members": [
              {
                "constant": false,
                "id": 67259,
                "mutability": "mutable",
                "name": "min",
                "nameLocation": "1763:3:101",
                "nodeType": "VariableDeclaration",
                "scope": 67262,
                "src": "1756:10:101",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 67258,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "1756:6:101",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 67261,
                "mutability": "mutable",
                "name": "max",
                "nameLocation": "1830:3:101",
                "nodeType": "VariableDeclaration",
                "scope": 67262,
                "src": "1823:10:101",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 67260,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "1823:6:101",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Interval",
            "nameLocation": "1741:8:101",
            "scope": 67832,
            "visibility": "public"
          },
          {
            "id": 67272,
            "nodeType": "StructDefinition",
            "src": "2064:112:101",
            "nodes": [],
            "canonicalName": "CommitStore.CommitReport",
            "documentation": {
              "id": 67263,
              "nodeType": "StructuredDocumentation",
              "src": "1893:168:101",
              "text": "@notice Report that is committed by the observing DON at the committing phase\n @dev RMN depends on this struct, if changing, please notify the RMN maintainers."
            },
            "members": [
              {
                "constant": false,
                "id": 67266,
                "mutability": "mutable",
                "name": "priceUpdates",
                "nameLocation": "2112:12:101",
                "nodeType": "VariableDeclaration",
                "scope": 67272,
                "src": "2090:34:101",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_PriceUpdates_$71330_storage_ptr",
                  "typeString": "struct Internal.PriceUpdates"
                },
                "typeName": {
                  "id": 67265,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 67264,
                    "name": "Internal.PriceUpdates",
                    "nameLocations": [
                      "2090:8:101",
                      "2099:12:101"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 71330,
                    "src": "2090:21:101"
                  },
                  "referencedDeclaration": 71330,
                  "src": "2090:21:101",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PriceUpdates_$71330_storage_ptr",
                    "typeString": "struct Internal.PriceUpdates"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 67269,
                "mutability": "mutable",
                "name": "interval",
                "nameLocation": "2139:8:101",
                "nodeType": "VariableDeclaration",
                "scope": 67272,
                "src": "2130:17:101",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Interval_$67262_storage_ptr",
                  "typeString": "struct CommitStore.Interval"
                },
                "typeName": {
                  "id": 67268,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 67267,
                    "name": "Interval",
                    "nameLocations": [
                      "2130:8:101"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 67262,
                    "src": "2130:8:101"
                  },
                  "referencedDeclaration": 67262,
                  "src": "2130:8:101",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Interval_$67262_storage_ptr",
                    "typeString": "struct CommitStore.Interval"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 67271,
                "mutability": "mutable",
                "name": "merkleRoot",
                "nameLocation": "2161:10:101",
                "nodeType": "VariableDeclaration",
                "scope": 67272,
                "src": "2153:18:101",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 67270,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "2153:7:101",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "CommitReport",
            "nameLocation": "2071:12:101",
            "scope": 67832,
            "visibility": "public"
          },
          {
            "id": 67276,
            "nodeType": "VariableDeclaration",
            "src": "2285:68:101",
            "nodes": [],
            "baseFunctions": [
              122902
            ],
            "constant": true,
            "functionSelector": "181f5a77",
            "mutability": "constant",
            "name": "typeAndVersion",
            "nameLocation": "2317:14:101",
            "overrides": {
              "id": 67274,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2308:8:101"
            },
            "scope": 67832,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 67273,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "2285:6:101",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "436f6d6d697453746f726520312e322e30",
              "id": 67275,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2334:19:101",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_4dd5d2b8a2d11f368bbf671da6a2416878c9f75b78b8fd6c06312925d50a20aa",
                "typeString": "literal_string \"CommitStore 1.2.0\""
              },
              "value": "CommitStore 1.2.0"
            },
            "visibility": "public"
          },
          {
            "id": 67278,
            "nodeType": "VariableDeclaration",
            "src": "2385:41:101",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "i_chainSelector",
            "nameLocation": "2411:15:101",
            "scope": 67832,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 67277,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "2385:6:101",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 67280,
            "nodeType": "VariableDeclaration",
            "src": "2464:47:101",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "i_sourceChainSelector",
            "nameLocation": "2490:21:101",
            "scope": 67832,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 67279,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "2464:6:101",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 67282,
            "nodeType": "VariableDeclaration",
            "src": "2559:35:101",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "i_onRamp",
            "nameLocation": "2586:8:101",
            "scope": 67832,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 67281,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2559:7:101",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 67284,
            "nodeType": "VariableDeclaration",
            "src": "2632:37:101",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "i_armProxy",
            "nameLocation": "2659:10:101",
            "scope": 67832,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 67283,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2632:7:101",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 67287,
            "nodeType": "VariableDeclaration",
            "src": "2730:38:101",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "s_dynamicConfig",
            "nameLocation": "2753:15:101",
            "scope": 67832,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_DynamicConfig_$67256_storage",
              "typeString": "struct CommitStore.DynamicConfig"
            },
            "typeName": {
              "id": 67286,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 67285,
                "name": "DynamicConfig",
                "nameLocations": [
                  "2730:13:101"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 67256,
                "src": "2730:13:101"
              },
              "referencedDeclaration": 67256,
              "src": "2730:13:101",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_DynamicConfig_$67256_storage_ptr",
                "typeString": "struct CommitStore.DynamicConfig"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 67290,
            "nodeType": "VariableDeclaration",
            "src": "2842:29:101",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "s_minSeqNr",
            "nameLocation": "2857:10:101",
            "scope": 67832,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 67288,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "2842:6:101",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 67289,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2870:1:101",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "private"
          },
          {
            "id": 67293,
            "nodeType": "VariableDeclaration",
            "src": "2925:41:101",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 67291,
              "nodeType": "StructuredDocumentation",
              "src": "2875:47:101",
              "text": "@dev The epoch and round of the last report"
            },
            "mutability": "mutable",
            "name": "s_latestPriceEpochAndRound",
            "nameLocation": "2940:26:101",
            "scope": 67832,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint40",
              "typeString": "uint40"
            },
            "typeName": {
              "id": 67292,
              "name": "uint40",
              "nodeType": "ElementaryTypeName",
              "src": "2925:6:101",
              "typeDescriptions": {
                "typeIdentifier": "t_uint40",
                "typeString": "uint40"
              }
            },
            "visibility": "private"
          },
          {
            "id": 67297,
            "nodeType": "VariableDeclaration",
            "src": "3018:29:101",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 67294,
              "nodeType": "StructuredDocumentation",
              "src": "2970:45:101",
              "text": "@dev Whether this OnRamp is paused or not"
            },
            "mutability": "mutable",
            "name": "s_paused",
            "nameLocation": "3031:8:101",
            "scope": 67832,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 67295,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "3018:4:101",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 67296,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3042:5:101",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "private"
          },
          {
            "id": 67301,
            "nodeType": "VariableDeclaration",
            "src": "3094:64:101",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "s_roots",
            "nameLocation": "3151:7:101",
            "scope": 67832,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
              "typeString": "mapping(bytes32 => uint256)"
            },
            "typeName": {
              "id": 67300,
              "keyName": "merkleRoot",
              "keyNameLocation": "3110:10:101",
              "keyType": {
                "id": 67298,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "3102:7:101",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "3094:48:101",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                "typeString": "mapping(bytes32 => uint256)"
              },
              "valueName": "timestamp",
              "valueNameLocation": "3132:9:101",
              "valueType": {
                "id": 67299,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3124:7:101",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 67361,
            "nodeType": "FunctionDefinition",
            "src": "3771:479:101",
            "nodes": [],
            "body": {
              "id": 67360,
              "nodeType": "Block",
              "src": "3833:417:101",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 67335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 67327,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 67322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 67317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 67311,
                              "name": "staticConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67305,
                              "src": "3850:12:101",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StaticConfig_$67252_memory_ptr",
                                "typeString": "struct CommitStore.StaticConfig memory"
                              }
                            },
                            "id": 67312,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3863:6:101",
                            "memberName": "onRamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 67249,
                            "src": "3850:19:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 67315,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3881:1:101",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 67314,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3873:7:101",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 67313,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3873:7:101",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 67316,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3873:10:101",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3850:33:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          "id": 67321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 67318,
                              "name": "staticConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67305,
                              "src": "3893:12:101",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StaticConfig_$67252_memory_ptr",
                                "typeString": "struct CommitStore.StaticConfig memory"
                              }
                            },
                            "id": 67319,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3906:13:101",
                            "memberName": "chainSelector",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 67245,
                            "src": "3893:26:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 67320,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3923:1:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3893:31:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3850:74:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 67326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 67323,
                            "name": "staticConfig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67305,
                            "src": "3934:12:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StaticConfig_$67252_memory_ptr",
                              "typeString": "struct CommitStore.StaticConfig memory"
                            }
                          },
                          "id": 67324,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3947:19:101",
                          "memberName": "sourceChainSelector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 67247,
                          "src": "3934:32:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 67325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3970:1:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3934:37:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "3850:121:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 67334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 67328,
                          "name": "staticConfig",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67305,
                          "src": "3981:12:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StaticConfig_$67252_memory_ptr",
                            "typeString": "struct CommitStore.StaticConfig memory"
                          }
                        },
                        "id": 67329,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3994:8:101",
                        "memberName": "armProxy",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 67251,
                        "src": "3981:21:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 67332,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4014:1:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 67331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4006:7:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 67330,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4006:7:101",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 67333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4006:10:101",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3981:35:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3850:166:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 67339,
                  "nodeType": "IfStatement",
                  "src": "3839:217:101",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 67336,
                        "name": "InvalidCommitStoreConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67212,
                        "src": "4030:24:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 67337,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4030:26:101",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 67338,
                    "nodeType": "RevertStatement",
                    "src": "4023:33:101"
                  }
                },
                {
                  "expression": {
                    "id": 67343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 67340,
                      "name": "i_chainSelector",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67278,
                      "src": "4063:15:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 67341,
                        "name": "staticConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67305,
                        "src": "4081:12:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StaticConfig_$67252_memory_ptr",
                          "typeString": "struct CommitStore.StaticConfig memory"
                        }
                      },
                      "id": 67342,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4094:13:101",
                      "memberName": "chainSelector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 67245,
                      "src": "4081:26:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "4063:44:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 67344,
                  "nodeType": "ExpressionStatement",
                  "src": "4063:44:101"
                },
                {
                  "expression": {
                    "id": 67348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 67345,
                      "name": "i_sourceChainSelector",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67280,
                      "src": "4113:21:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 67346,
                        "name": "staticConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67305,
                        "src": "4137:12:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StaticConfig_$67252_memory_ptr",
                          "typeString": "struct CommitStore.StaticConfig memory"
                        }
                      },
                      "id": 67347,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4150:19:101",
                      "memberName": "sourceChainSelector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 67247,
                      "src": "4137:32:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "4113:56:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 67349,
                  "nodeType": "ExpressionStatement",
                  "src": "4113:56:101"
                },
                {
                  "expression": {
                    "id": 67353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 67350,
                      "name": "i_onRamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67282,
                      "src": "4175:8:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 67351,
                        "name": "staticConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67305,
                        "src": "4186:12:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StaticConfig_$67252_memory_ptr",
                          "typeString": "struct CommitStore.StaticConfig memory"
                        }
                      },
                      "id": 67352,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4199:6:101",
                      "memberName": "onRamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 67249,
                      "src": "4186:19:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4175:30:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 67354,
                  "nodeType": "ExpressionStatement",
                  "src": "4175:30:101"
                },
                {
                  "expression": {
                    "id": 67358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 67355,
                      "name": "i_armProxy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67284,
                      "src": "4211:10:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 67356,
                        "name": "staticConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67305,
                        "src": "4224:12:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StaticConfig_$67252_memory_ptr",
                          "typeString": "struct CommitStore.StaticConfig memory"
                        }
                      },
                      "id": 67357,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4237:8:101",
                      "memberName": "armProxy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 67251,
                      "src": "4224:21:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4211:34:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 67359,
                  "nodeType": "ExpressionStatement",
                  "src": "4211:34:101"
                }
              ]
            },
            "documentation": {
              "id": 67302,
              "nodeType": "StructuredDocumentation",
              "src": "3163:605:101",
              "text": "@param staticConfig Containing the static part of the commitStore config\n @dev When instantiating OCR2Base we set UNIQUE_REPORTS to false, which means\n that we do not require 2f+1 signatures on a report, only f+1 to save gas. 2f+1 is required\n only if one must strictly ensure that for a given round there is only one valid report ever generated by\n the DON. In our case additional valid reports (i.e. approved by >= f+1 oracles) are not a problem, as they will\n will either be ignored (reverted as an invalid interval) or will be accepted as an additional valid price update."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "66616c7365",
                    "id": 67308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3826:5:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  }
                ],
                "id": 67309,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 67307,
                  "name": "OCR2Base",
                  "nameLocations": [
                    "3817:8:101"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 73148,
                  "src": "3817:8:101"
                },
                "nodeType": "ModifierInvocation",
                "src": "3817:15:101"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 67306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67305,
                  "mutability": "mutable",
                  "name": "staticConfig",
                  "nameLocation": "3803:12:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 67361,
                  "src": "3783:32:101",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StaticConfig_$67252_memory_ptr",
                    "typeString": "struct CommitStore.StaticConfig"
                  },
                  "typeName": {
                    "id": 67304,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 67303,
                      "name": "StaticConfig",
                      "nameLocations": [
                        "3783:12:101"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 67252,
                      "src": "3783:12:101"
                    },
                    "referencedDeclaration": 67252,
                    "src": "3783:12:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StaticConfig_$67252_storage_ptr",
                      "typeString": "struct CommitStore.StaticConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3782:34:101"
            },
            "returnParameters": {
              "id": 67310,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3833:0:101"
            },
            "scope": 67832,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 67370,
            "nodeType": "FunctionDefinition",
            "src": "4574:100:101",
            "nodes": [],
            "body": {
              "id": 67369,
              "nodeType": "Block",
              "src": "4646:28:101",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 67367,
                    "name": "s_minSeqNr",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 67290,
                    "src": "4659:10:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "functionReturnParameters": 67366,
                  "id": 67368,
                  "nodeType": "Return",
                  "src": "4652:17:101"
                }
              ]
            },
            "baseFunctions": [
              70890
            ],
            "documentation": {
              "id": 67362,
              "nodeType": "StructuredDocumentation",
              "src": "4469:102:101",
              "text": "@notice Returns the next expected sequence number.\n @return the next expected sequenceNumber."
            },
            "functionSelector": "4120fccd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getExpectedNextSequenceNumber",
            "nameLocation": "4583:29:101",
            "parameters": {
              "id": 67363,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4612:2:101"
            },
            "returnParameters": {
              "id": 67366,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67365,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 67370,
                  "src": "4638:6:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 67364,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "4638:6:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4637:8:101"
            },
            "scope": 67832,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67383,
            "nodeType": "FunctionDefinition",
            "src": "4781:89:101",
            "nodes": [],
            "body": {
              "id": 67382,
              "nodeType": "Block",
              "src": "4838:32:101",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 67380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 67378,
                      "name": "s_minSeqNr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67290,
                      "src": "4844:10:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 67379,
                      "name": "minSeqNr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67373,
                      "src": "4857:8:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "4844:21:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 67381,
                  "nodeType": "ExpressionStatement",
                  "src": "4844:21:101"
                }
              ]
            },
            "documentation": {
              "id": 67371,
              "nodeType": "StructuredDocumentation",
              "src": "4678:100:101",
              "text": "@notice Sets the minimum sequence number.\n @param minSeqNr The new minimum sequence number."
            },
            "functionSelector": "ad7a22f8",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 67376,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 67375,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4828:9:101"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 122432,
                  "src": "4828:9:101"
                },
                "nodeType": "ModifierInvocation",
                "src": "4828:9:101"
              }
            ],
            "name": "setMinSeqNr",
            "nameLocation": "4790:11:101",
            "parameters": {
              "id": 67374,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67373,
                  "mutability": "mutable",
                  "name": "minSeqNr",
                  "nameLocation": "4809:8:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 67383,
                  "src": "4802:15:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 67372,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "4802:6:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4801:17:101"
            },
            "returnParameters": {
              "id": 67377,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4838:0:101"
            },
            "scope": 67832,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67392,
            "nodeType": "FunctionDefinition",
            "src": "4990:112:101",
            "nodes": [],
            "body": {
              "id": 67391,
              "nodeType": "Block",
              "src": "5058:44:101",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 67389,
                    "name": "s_latestPriceEpochAndRound",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 67293,
                    "src": "5071:26:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "functionReturnParameters": 67388,
                  "id": 67390,
                  "nodeType": "Return",
                  "src": "5064:33:101"
                }
              ]
            },
            "documentation": {
              "id": 67384,
              "nodeType": "StructuredDocumentation",
              "src": "4874:113:101",
              "text": "@notice Returns the epoch and round of the last price update.\n @return the latest price epoch and round."
            },
            "functionSelector": "10c374ed",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLatestPriceEpochAndRound",
            "nameLocation": "4999:27:101",
            "parameters": {
              "id": 67385,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5026:2:101"
            },
            "returnParameters": {
              "id": 67388,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67387,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 67392,
                  "src": "5050:6:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 67386,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "5050:6:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5049:8:101"
            },
            "scope": 67832,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 67405,
            "nodeType": "FunctionDefinition",
            "src": "5244:153:101",
            "nodes": [],
            "body": {
              "id": 67404,
              "nodeType": "Block",
              "src": "5333:64:101",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 67402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 67400,
                      "name": "s_latestPriceEpochAndRound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67293,
                      "src": "5339:26:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 67401,
                      "name": "latestPriceEpochAndRound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67395,
                      "src": "5368:24:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "5339:53:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 67403,
                  "nodeType": "ExpressionStatement",
                  "src": "5339:53:101"
                }
              ]
            },
            "documentation": {
              "id": 67393,
              "nodeType": "StructuredDocumentation",
              "src": "5106:135:101",
              "text": "@notice Sets the latest epoch and round for price update.\n @param latestPriceEpochAndRound The new epoch and round for prices."
            },
            "functionSelector": "29b980e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 67398,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 67397,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "5323:9:101"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 122432,
                  "src": "5323:9:101"
                },
                "nodeType": "ModifierInvocation",
                "src": "5323:9:101"
              }
            ],
            "name": "setLatestPriceEpochAndRound",
            "nameLocation": "5253:27:101",
            "parameters": {
              "id": 67396,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67395,
                  "mutability": "mutable",
                  "name": "latestPriceEpochAndRound",
                  "nameLocation": "5288:24:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 67405,
                  "src": "5281:31:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 67394,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "5281:6:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5280:33:101"
            },
            "returnParameters": {
              "id": 67399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5333:0:101"
            },
            "scope": 67832,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67418,
            "nodeType": "FunctionDefinition",
            "src": "5717:100:101",
            "nodes": [],
            "body": {
              "id": 67417,
              "nodeType": "Block",
              "src": "5786:31:101",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 67413,
                      "name": "s_roots",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67301,
                      "src": "5799:7:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                        "typeString": "mapping(bytes32 => uint256)"
                      }
                    },
                    "id": 67415,
                    "indexExpression": {
                      "id": 67414,
                      "name": "root",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67408,
                      "src": "5807:4:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5799:13:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 67412,
                  "id": 67416,
                  "nodeType": "Return",
                  "src": "5792:20:101"
                }
              ]
            },
            "documentation": {
              "id": 67406,
              "nodeType": "StructuredDocumentation",
              "src": "5401:313:101",
              "text": "@notice Returns the timestamp of a potentially previously committed merkle root.\n If the root was never committed 0 will be returned.\n @param root The merkle root to check the commit status for.\n @return the timestamp of the committed root or zero in the case that it was never\n committed."
            },
            "functionSelector": "a7206cd6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMerkleRoot",
            "nameLocation": "5726:13:101",
            "parameters": {
              "id": 67409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67408,
                  "mutability": "mutable",
                  "name": "root",
                  "nameLocation": "5748:4:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 67418,
                  "src": "5740:12:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 67407,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5740:7:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5739:14:101"
            },
            "returnParameters": {
              "id": 67412,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67411,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 67418,
                  "src": "5777:7:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67410,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5777:7:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5776:9:101"
            },
            "scope": 67832,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67441,
            "nodeType": "FunctionDefinition",
            "src": "5990:163:101",
            "nodes": [],
            "body": {
              "id": 67440,
              "nodeType": "Block",
              "src": "6050:103:101",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 67434,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "6128:4:101",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CommitStore_$67832",
                                  "typeString": "contract CommitStore"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CommitStore_$67832",
                                  "typeString": "contract CommitStore"
                                }
                              ],
                              "id": 67433,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6120:7:101",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 67432,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6120:7:101",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 67435,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6120:13:101",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 67436,
                            "name": "root",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67421,
                            "src": "6141:4:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 67430,
                            "name": "IARM",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70844,
                            "src": "6090:4:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IARM_$70844_$",
                              "typeString": "type(contract IARM)"
                            }
                          },
                          "id": 67431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6095:10:101",
                          "memberName": "TaggedRoot",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 70828,
                          "src": "6090:15:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_TaggedRoot_$70828_storage_ptr_$",
                            "typeString": "type(struct IARM.TaggedRoot storage pointer)"
                          }
                        },
                        "id": 67437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [
                          "6107:11:101",
                          "6135:4:101"
                        ],
                        "names": [
                          "commitStore",
                          "root"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "6090:57:101",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaggedRoot_$70828_memory_ptr",
                          "typeString": "struct IARM.TaggedRoot memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TaggedRoot_$70828_memory_ptr",
                          "typeString": "struct IARM.TaggedRoot memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 67427,
                            "name": "i_armProxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67284,
                            "src": "6068:10:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 67426,
                          "name": "IARM",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70844,
                          "src": "6063:4:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IARM_$70844_$",
                            "typeString": "type(contract IARM)"
                          }
                        },
                        "id": 67428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6063:16:101",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IARM_$70844",
                          "typeString": "contract IARM"
                        }
                      },
                      "id": 67429,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6080:9:101",
                      "memberName": "isBlessed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70837,
                      "src": "6063:26:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_struct$_TaggedRoot_$70828_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (struct IARM.TaggedRoot memory) view external returns (bool)"
                      }
                    },
                    "id": 67438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6063:85:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 67425,
                  "id": 67439,
                  "nodeType": "Return",
                  "src": "6056:92:101"
                }
              ]
            },
            "documentation": {
              "id": 67419,
              "nodeType": "StructuredDocumentation",
              "src": "5821:166:101",
              "text": "@notice Returns if a root is blessed or not.\n @param root The merkle root to check the blessing status for.\n @return whether the root is blessed or not."
            },
            "functionSelector": "ff888fb1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isBlessed",
            "nameLocation": "5999:9:101",
            "parameters": {
              "id": 67422,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67421,
                  "mutability": "mutable",
                  "name": "root",
                  "nameLocation": "6017:4:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 67441,
                  "src": "6009:12:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 67420,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6009:7:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6008:14:101"
            },
            "returnParameters": {
              "id": 67425,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67424,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 67441,
                  "src": "6044:4:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 67423,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6044:4:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6043:6:101"
            },
            "scope": 67832,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 67485,
            "nodeType": "FunctionDefinition",
            "src": "6431:283:101",
            "nodes": [],
            "body": {
              "id": 67484,
              "nodeType": "Block",
              "src": "6511:203:101",
              "nodes": [],
              "statements": [
                {
                  "body": {
                    "id": 67482,
                    "nodeType": "Block",
                    "src": "6566:144:101",
                    "statements": [
                      {
                        "assignments": [
                          67462
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 67462,
                            "mutability": "mutable",
                            "name": "root",
                            "nameLocation": "6582:4:101",
                            "nodeType": "VariableDeclaration",
                            "scope": 67482,
                            "src": "6574:12:101",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 67461,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "6574:7:101",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 67466,
                        "initialValue": {
                          "baseExpression": {
                            "id": 67463,
                            "name": "rootToReset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67445,
                            "src": "6589:11:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            }
                          },
                          "id": 67465,
                          "indexExpression": {
                            "id": 67464,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67451,
                            "src": "6601:1:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6589:14:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6574:29:101"
                      },
                      {
                        "condition": {
                          "id": 67470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "6615:16:101",
                          "subExpression": {
                            "arguments": [
                              {
                                "id": 67468,
                                "name": "root",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67462,
                                "src": "6626:4:101",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 67467,
                              "name": "isBlessed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67441,
                              "src": "6616:9:101",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bool_$",
                                "typeString": "function (bytes32) view returns (bool)"
                              }
                            },
                            "id": 67469,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6616:15:101",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 67481,
                        "nodeType": "IfStatement",
                        "src": "6611:93:101",
                        "trueBody": {
                          "id": 67480,
                          "nodeType": "Block",
                          "src": "6633:71:101",
                          "statements": [
                            {
                              "expression": {
                                "id": 67474,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "6643:20:101",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 67471,
                                    "name": "s_roots",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 67301,
                                    "src": "6650:7:101",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                      "typeString": "mapping(bytes32 => uint256)"
                                    }
                                  },
                                  "id": 67473,
                                  "indexExpression": {
                                    "id": 67472,
                                    "name": "root",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 67462,
                                    "src": "6658:4:101",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "6650:13:101",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 67475,
                              "nodeType": "ExpressionStatement",
                              "src": "6643:20:101"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 67477,
                                    "name": "root",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 67462,
                                    "src": "6690:4:101",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 67476,
                                  "name": "RootRemoved",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 67242,
                                  "src": "6678:11:101",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                                    "typeString": "function (bytes32)"
                                  }
                                },
                                "id": 67478,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6678:17:101",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 67479,
                              "nodeType": "EmitStatement",
                              "src": "6673:22:101"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 67457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 67454,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67451,
                      "src": "6537:1:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 67455,
                        "name": "rootToReset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67445,
                        "src": "6541:11:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      },
                      "id": 67456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6553:6:101",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6541:18:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6537:22:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 67483,
                  "initializationExpression": {
                    "assignments": [
                      67451
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 67451,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6530:1:101",
                        "nodeType": "VariableDeclaration",
                        "scope": 67483,
                        "src": "6522:9:101",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 67450,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6522:7:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 67453,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 67452,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6534:1:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6522:13:101"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 67459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "6561:3:101",
                      "subExpression": {
                        "id": 67458,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67451,
                        "src": "6563:1:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 67460,
                    "nodeType": "ExpressionStatement",
                    "src": "6561:3:101"
                  },
                  "nodeType": "ForStatement",
                  "src": "6517:193:101"
                }
              ]
            },
            "documentation": {
              "id": 67442,
              "nodeType": "StructuredDocumentation",
              "src": "6157:271:101",
              "text": "@notice Used by the owner in case an invalid sequence of roots has been\n posted and needs to be removed. The interval in the report is trusted.\n @param rootToReset The roots that will be reset. This function will only\n reset roots that are not blessed."
            },
            "functionSelector": "f47a8690",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 67448,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 67447,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "6501:9:101"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 122432,
                  "src": "6501:9:101"
                },
                "nodeType": "ModifierInvocation",
                "src": "6501:9:101"
              }
            ],
            "name": "resetUnblessedRoots",
            "nameLocation": "6440:19:101",
            "parameters": {
              "id": 67446,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67445,
                  "mutability": "mutable",
                  "name": "rootToReset",
                  "nameLocation": "6479:11:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 67485,
                  "src": "6460:30:101",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 67443,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "6460:7:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 67444,
                    "nodeType": "ArrayTypeName",
                    "src": "6460:9:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6459:32:101"
            },
            "returnParameters": {
              "id": 67449,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6511:0:101"
            },
            "scope": 67832,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67524,
            "nodeType": "FunctionDefinition",
            "src": "6749:398:101",
            "nodes": [],
            "body": {
              "id": 67523,
              "nodeType": "Block",
              "src": "6929:218:101",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    67503
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 67503,
                      "mutability": "mutable",
                      "name": "root",
                      "nameLocation": "6943:4:101",
                      "nodeType": "VariableDeclaration",
                      "scope": 67523,
                      "src": "6935:12:101",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 67502,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6935:7:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 67510,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 67506,
                        "name": "hashedLeaves",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67489,
                        "src": "6978:12:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      },
                      {
                        "id": 67507,
                        "name": "proofs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67492,
                        "src": "6992:6:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      },
                      {
                        "id": 67508,
                        "name": "proofFlagBits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67494,
                        "src": "7000:13:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 67504,
                        "name": "MerkleMultiProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71800,
                        "src": "6950:16:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MerkleMultiProof_$71800_$",
                          "typeString": "type(library MerkleMultiProof)"
                        }
                      },
                      "id": 67505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6967:10:101",
                      "memberName": "merkleRoot",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71755,
                      "src": "6950:27:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32[] memory,bytes32[] memory,uint256) pure returns (bytes32)"
                      }
                    },
                    "id": 67509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6950:64:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6935:79:101"
                },
                {
                  "condition": {
                    "id": 67514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "7076:16:101",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 67512,
                          "name": "root",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67503,
                          "src": "7087:4:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 67511,
                        "name": "isBlessed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67441,
                        "src": "7077:9:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bool_$",
                          "typeString": "function (bytes32) view returns (bool)"
                        }
                      },
                      "id": 67513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7077:15:101",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 67518,
                  "nodeType": "IfStatement",
                  "src": "7072:45:101",
                  "trueBody": {
                    "id": 67517,
                    "nodeType": "Block",
                    "src": "7094:23:101",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 67515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7109:1:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 67501,
                        "id": 67516,
                        "nodeType": "Return",
                        "src": "7102:8:101"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 67519,
                      "name": "s_roots",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67301,
                      "src": "7129:7:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                        "typeString": "mapping(bytes32 => uint256)"
                      }
                    },
                    "id": 67521,
                    "indexExpression": {
                      "id": 67520,
                      "name": "root",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67503,
                      "src": "7137:4:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7129:13:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 67501,
                  "id": 67522,
                  "nodeType": "Return",
                  "src": "7122:20:101"
                }
              ]
            },
            "baseFunctions": [
              70884
            ],
            "documentation": {
              "id": 67486,
              "nodeType": "StructuredDocumentation",
              "src": "6718:28:101",
              "text": "@inheritdoc ICommitStore"
            },
            "functionSelector": "32048875",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 67498,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 67497,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "6887:13:101"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 67790,
                  "src": "6887:13:101"
                },
                "nodeType": "ModifierInvocation",
                "src": "6887:13:101"
              }
            ],
            "name": "verify",
            "nameLocation": "6758:6:101",
            "overrides": {
              "id": 67496,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6878:8:101"
            },
            "parameters": {
              "id": 67495,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67489,
                  "mutability": "mutable",
                  "name": "hashedLeaves",
                  "nameLocation": "6789:12:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 67524,
                  "src": "6770:31:101",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 67487,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "6770:7:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 67488,
                    "nodeType": "ArrayTypeName",
                    "src": "6770:9:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67492,
                  "mutability": "mutable",
                  "name": "proofs",
                  "nameLocation": "6826:6:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 67524,
                  "src": "6807:25:101",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 67490,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "6807:7:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 67491,
                    "nodeType": "ArrayTypeName",
                    "src": "6807:9:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67494,
                  "mutability": "mutable",
                  "name": "proofFlagBits",
                  "nameLocation": "6846:13:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 67524,
                  "src": "6838:21:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67493,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6838:7:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6764:99:101"
            },
            "returnParameters": {
              "id": 67501,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67500,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "6918:9:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 67524,
                  "src": "6910:17:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67499,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6910:7:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6909:19:101"
            },
            "scope": 67832,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67662,
            "nodeType": "FunctionDefinition",
            "src": "8042:1842:101",
            "nodes": [],
            "body": {
              "id": 67661,
              "nodeType": "Block",
              "src": "8155:1729:101",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    67539
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 67539,
                      "mutability": "mutable",
                      "name": "report",
                      "nameLocation": "8181:6:101",
                      "nodeType": "VariableDeclaration",
                      "scope": 67661,
                      "src": "8161:26:101",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CommitReport_$67272_memory_ptr",
                        "typeString": "struct CommitStore.CommitReport"
                      },
                      "typeName": {
                        "id": 67538,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 67537,
                          "name": "CommitReport",
                          "nameLocations": [
                            "8161:12:101"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 67272,
                          "src": "8161:12:101"
                        },
                        "referencedDeclaration": 67272,
                        "src": "8161:12:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CommitReport_$67272_storage_ptr",
                          "typeString": "struct CommitStore.CommitReport"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 67546,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 67542,
                        "name": "encodedReport",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67527,
                        "src": "8201:13:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 67543,
                            "name": "CommitReport",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67272,
                            "src": "8217:12:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_CommitReport_$67272_storage_ptr_$",
                              "typeString": "type(struct CommitStore.CommitReport storage pointer)"
                            }
                          }
                        ],
                        "id": 67544,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "8216:14:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_CommitReport_$67272_storage_ptr_$",
                          "typeString": "type(struct CommitStore.CommitReport storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_CommitReport_$67272_storage_ptr_$",
                          "typeString": "type(struct CommitStore.CommitReport storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 67540,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "8190:3:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 67541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "8194:6:101",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "8190:10:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 67545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8190:41:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CommitReport_$67272_memory_ptr",
                      "typeString": "struct CommitStore.CommitReport memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8161:70:101"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 67559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 67552,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "expression": {
                            "expression": {
                              "id": 67547,
                              "name": "report",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67539,
                              "src": "8292:6:101",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CommitReport_$67272_memory_ptr",
                                "typeString": "struct CommitStore.CommitReport memory"
                              }
                            },
                            "id": 67548,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8299:12:101",
                            "memberName": "priceUpdates",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 67266,
                            "src": "8292:19:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PriceUpdates_$71330_memory_ptr",
                              "typeString": "struct Internal.PriceUpdates memory"
                            }
                          },
                          "id": 67549,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8312:17:101",
                          "memberName": "tokenPriceUpdates",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 71325,
                          "src": "8292:37:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_TokenPriceUpdate_$71336_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct Internal.TokenPriceUpdate memory[] memory"
                          }
                        },
                        "id": 67550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8330:6:101",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "8292:44:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 67551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8339:1:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "8292:48:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 67558,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "expression": {
                            "expression": {
                              "id": 67553,
                              "name": "report",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67539,
                              "src": "8344:6:101",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CommitReport_$67272_memory_ptr",
                                "typeString": "struct CommitStore.CommitReport memory"
                              }
                            },
                            "id": 67554,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8351:12:101",
                            "memberName": "priceUpdates",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 67266,
                            "src": "8344:19:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PriceUpdates_$71330_memory_ptr",
                              "typeString": "struct Internal.PriceUpdates memory"
                            }
                          },
                          "id": 67555,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8364:15:101",
                          "memberName": "gasPriceUpdates",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 71329,
                          "src": "8344:35:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_GasPriceUpdate_$71342_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct Internal.GasPriceUpdate memory[] memory"
                          }
                        },
                        "id": 67556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8380:6:101",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "8344:42:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 67557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8389:1:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "8344:46:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "8292:98:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 67600,
                  "nodeType": "IfStatement",
                  "src": "8288:1009:101",
                  "trueBody": {
                    "id": 67599,
                    "nodeType": "Block",
                    "src": "8392:905:101",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint40",
                            "typeString": "uint40"
                          },
                          "id": 67562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 67560,
                            "name": "s_latestPriceEpochAndRound",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67293,
                            "src": "8468:26:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint40",
                              "typeString": "uint40"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 67561,
                            "name": "epochAndRound",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67529,
                            "src": "8497:13:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint40",
                              "typeString": "uint40"
                            }
                          },
                          "src": "8468:42:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 67597,
                          "nodeType": "Block",
                          "src": "8987:304:101",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                "id": 67592,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 67586,
                                    "name": "report",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 67539,
                                    "src": "9229:6:101",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CommitReport_$67272_memory_ptr",
                                      "typeString": "struct CommitStore.CommitReport memory"
                                    }
                                  },
                                  "id": 67587,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9236:10:101",
                                  "memberName": "merkleRoot",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 67271,
                                  "src": "9229:17:101",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 67590,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9258:1:101",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 67589,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "9250:7:101",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes32_$",
                                      "typeString": "type(bytes32)"
                                    },
                                    "typeName": {
                                      "id": 67588,
                                      "name": "bytes32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "9250:7:101",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 67591,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9250:10:101",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "9229:31:101",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 67596,
                              "nodeType": "IfStatement",
                              "src": "9225:57:101",
                              "trueBody": {
                                "errorCall": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 67593,
                                    "name": "StaleReport",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 67201,
                                    "src": "9269:11:101",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 67594,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9269:13:101",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 67595,
                                "nodeType": "RevertStatement",
                                "src": "9262:20:101"
                              }
                            }
                          ]
                        },
                        "id": 67598,
                        "nodeType": "IfStatement",
                        "src": "8464:827:101",
                        "trueBody": {
                          "id": 67585,
                          "nodeType": "Block",
                          "src": "8512:469:101",
                          "statements": [
                            {
                              "expression": {
                                "id": 67565,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 67563,
                                  "name": "s_latestPriceEpochAndRound",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 67293,
                                  "src": "8592:26:101",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint40",
                                    "typeString": "uint40"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 67564,
                                  "name": "epochAndRound",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 67529,
                                  "src": "8621:13:101",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint40",
                                    "typeString": "uint40"
                                  }
                                },
                                "src": "8592:42:101",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "id": 67566,
                              "nodeType": "ExpressionStatement",
                              "src": "8592:42:101"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 67572,
                                      "name": "report",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 67539,
                                      "src": "8758:6:101",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CommitReport_$67272_memory_ptr",
                                        "typeString": "struct CommitStore.CommitReport memory"
                                      }
                                    },
                                    "id": 67573,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "8765:12:101",
                                    "memberName": "priceUpdates",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 67266,
                                    "src": "8758:19:101",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PriceUpdates_$71330_memory_ptr",
                                      "typeString": "struct Internal.PriceUpdates memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_PriceUpdates_$71330_memory_ptr",
                                      "typeString": "struct Internal.PriceUpdates memory"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 67568,
                                          "name": "s_dynamicConfig",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 67287,
                                          "src": "8714:15:101",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_DynamicConfig_$67256_storage",
                                            "typeString": "struct CommitStore.DynamicConfig storage ref"
                                          }
                                        },
                                        "id": 67569,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "8730:13:101",
                                        "memberName": "priceRegistry",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 67255,
                                        "src": "8714:29:101",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 67567,
                                      "name": "IPriceRegistry",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 71055,
                                      "src": "8699:14:101",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IPriceRegistry_$71055_$",
                                        "typeString": "type(contract IPriceRegistry)"
                                      }
                                    },
                                    "id": 67570,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8699:45:101",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IPriceRegistry_$71055",
                                      "typeString": "contract IPriceRegistry"
                                    }
                                  },
                                  "id": 67571,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8745:12:101",
                                  "memberName": "updatePrices",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 70993,
                                  "src": "8699:58:101",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_struct$_PriceUpdates_$71330_memory_ptr_$returns$__$",
                                    "typeString": "function (struct Internal.PriceUpdates memory) external"
                                  }
                                },
                                "id": 67574,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8699:79:101",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 67575,
                              "nodeType": "ExpressionStatement",
                              "src": "8699:79:101"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                "id": 67582,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 67576,
                                    "name": "report",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 67539,
                                    "src": "8933:6:101",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CommitReport_$67272_memory_ptr",
                                      "typeString": "struct CommitStore.CommitReport memory"
                                    }
                                  },
                                  "id": 67577,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8940:10:101",
                                  "memberName": "merkleRoot",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 67271,
                                  "src": "8933:17:101",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 67580,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "8962:1:101",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 67579,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "8954:7:101",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes32_$",
                                      "typeString": "type(bytes32)"
                                    },
                                    "typeName": {
                                      "id": 67578,
                                      "name": "bytes32",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "8954:7:101",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 67581,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8954:10:101",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "8933:31:101",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 67584,
                              "nodeType": "IfStatement",
                              "src": "8929:44:101",
                              "trueBody": {
                                "functionReturnParameters": 67536,
                                "id": 67583,
                                "nodeType": "Return",
                                "src": "8966:7:101"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 67613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "id": 67605,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 67601,
                        "name": "s_minSeqNr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67290,
                        "src": "9381:10:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "expression": {
                          "expression": {
                            "id": 67602,
                            "name": "report",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67539,
                            "src": "9395:6:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CommitReport_$67272_memory_ptr",
                              "typeString": "struct CommitStore.CommitReport memory"
                            }
                          },
                          "id": 67603,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9402:8:101",
                          "memberName": "interval",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 67269,
                          "src": "9395:15:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Interval_$67262_memory_ptr",
                            "typeString": "struct CommitStore.Interval memory"
                          }
                        },
                        "id": 67604,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9411:3:101",
                        "memberName": "min",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 67259,
                        "src": "9395:19:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "src": "9381:33:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "id": 67612,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "expression": {
                            "id": 67606,
                            "name": "report",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67539,
                            "src": "9418:6:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CommitReport_$67272_memory_ptr",
                              "typeString": "struct CommitStore.CommitReport memory"
                            }
                          },
                          "id": 67607,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9425:8:101",
                          "memberName": "interval",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 67269,
                          "src": "9418:15:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Interval_$67262_memory_ptr",
                            "typeString": "struct CommitStore.Interval memory"
                          }
                        },
                        "id": 67608,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9434:3:101",
                        "memberName": "min",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 67259,
                        "src": "9418:19:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "expression": {
                          "expression": {
                            "id": 67609,
                            "name": "report",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67539,
                            "src": "9440:6:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CommitReport_$67272_memory_ptr",
                              "typeString": "struct CommitStore.CommitReport memory"
                            }
                          },
                          "id": 67610,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9447:8:101",
                          "memberName": "interval",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 67269,
                          "src": "9440:15:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Interval_$67262_memory_ptr",
                            "typeString": "struct CommitStore.Interval memory"
                          }
                        },
                        "id": 67611,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9456:3:101",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 67261,
                        "src": "9440:19:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "src": "9418:41:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "9381:78:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 67619,
                  "nodeType": "IfStatement",
                  "src": "9377:129:101",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 67615,
                            "name": "report",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67539,
                            "src": "9490:6:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CommitReport_$67272_memory_ptr",
                              "typeString": "struct CommitStore.CommitReport memory"
                            }
                          },
                          "id": 67616,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9497:8:101",
                          "memberName": "interval",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 67269,
                          "src": "9490:15:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Interval_$67262_memory_ptr",
                            "typeString": "struct CommitStore.Interval memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Interval_$67262_memory_ptr",
                            "typeString": "struct CommitStore.Interval memory"
                          }
                        ],
                        "id": 67614,
                        "name": "InvalidInterval",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67208,
                        "src": "9474:15:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_struct$_Interval_$67262_memory_ptr_$returns$__$",
                          "typeString": "function (struct CommitStore.Interval memory) pure"
                        }
                      },
                      "id": 67617,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9474:32:101",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 67618,
                    "nodeType": "RevertStatement",
                    "src": "9467:39:101"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 67626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 67620,
                        "name": "report",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67539,
                        "src": "9517:6:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CommitReport_$67272_memory_ptr",
                          "typeString": "struct CommitStore.CommitReport memory"
                        }
                      },
                      "id": 67621,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9524:10:101",
                      "memberName": "merkleRoot",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 67271,
                      "src": "9517:17:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 67624,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9546:1:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 67623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9538:7:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 67622,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "9538:7:101",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 67625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9538:10:101",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "9517:31:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 67630,
                  "nodeType": "IfStatement",
                  "src": "9513:57:101",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 67627,
                        "name": "InvalidRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67210,
                        "src": "9557:11:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 67628,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9557:13:101",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 67629,
                    "nodeType": "RevertStatement",
                    "src": "9550:20:101"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 67636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 67631,
                        "name": "s_roots",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67301,
                        "src": "9691:7:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 67634,
                      "indexExpression": {
                        "expression": {
                          "id": 67632,
                          "name": "report",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67539,
                          "src": "9699:6:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CommitReport_$67272_memory_ptr",
                            "typeString": "struct CommitStore.CommitReport memory"
                          }
                        },
                        "id": 67633,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9706:10:101",
                        "memberName": "merkleRoot",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 67271,
                        "src": "9699:17:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9691:26:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 67635,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9721:1:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9691:31:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 67640,
                  "nodeType": "IfStatement",
                  "src": "9687:66:101",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 67637,
                        "name": "RootAlreadyCommitted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67216,
                        "src": "9731:20:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 67638,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9731:22:101",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 67639,
                    "nodeType": "RevertStatement",
                    "src": "9724:29:101"
                  }
                },
                {
                  "expression": {
                    "id": 67647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 67641,
                      "name": "s_minSeqNr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67290,
                      "src": "9760:10:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "id": 67646,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "expression": {
                            "id": 67642,
                            "name": "report",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67539,
                            "src": "9773:6:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CommitReport_$67272_memory_ptr",
                              "typeString": "struct CommitStore.CommitReport memory"
                            }
                          },
                          "id": 67643,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9780:8:101",
                          "memberName": "interval",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 67269,
                          "src": "9773:15:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Interval_$67262_memory_ptr",
                            "typeString": "struct CommitStore.Interval memory"
                          }
                        },
                        "id": 67644,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9789:3:101",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 67261,
                        "src": "9773:19:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 67645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9795:1:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "9773:23:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "9760:36:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 67648,
                  "nodeType": "ExpressionStatement",
                  "src": "9760:36:101"
                },
                {
                  "expression": {
                    "id": 67655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 67649,
                        "name": "s_roots",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67301,
                        "src": "9802:7:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 67652,
                      "indexExpression": {
                        "expression": {
                          "id": 67650,
                          "name": "report",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67539,
                          "src": "9810:6:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CommitReport_$67272_memory_ptr",
                            "typeString": "struct CommitStore.CommitReport memory"
                          }
                        },
                        "id": 67651,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9817:10:101",
                        "memberName": "merkleRoot",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 67271,
                        "src": "9810:17:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9802:26:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 67653,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "9831:5:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 67654,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9837:9:101",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "9831:15:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9802:44:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 67656,
                  "nodeType": "ExpressionStatement",
                  "src": "9802:44:101"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 67658,
                        "name": "report",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67539,
                        "src": "9872:6:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CommitReport_$67272_memory_ptr",
                          "typeString": "struct CommitStore.CommitReport memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_CommitReport_$67272_memory_ptr",
                          "typeString": "struct CommitStore.CommitReport memory"
                        }
                      ],
                      "id": 67657,
                      "name": "ReportAccepted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67230,
                      "src": "9857:14:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_CommitReport_$67272_memory_ptr_$returns$__$",
                        "typeString": "function (struct CommitStore.CommitReport memory)"
                      }
                    },
                    "id": 67659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9857:22:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67660,
                  "nodeType": "EmitStatement",
                  "src": "9852:27:101"
                }
              ]
            },
            "baseFunctions": [
              73147
            ],
            "documentation": {
              "id": 67525,
              "nodeType": "StructuredDocumentation",
              "src": "7151:888:101",
              "text": "@inheritdoc OCR2Base\n @dev A commitReport can have two distinct parts (batched together to amortize the cost of checking sigs):\n 1. Price updates\n 2. A merkle root and sequence number interval\n Both have their own, separate, staleness checks, with price updates using the epoch and round\n number of the latest price update. The merkle root checks for staleness based on the seqNums.\n They need to be separate because a price report for round t+2 might be included before a report\n containing a merkle root for round t+1. This merkle root report for round t+1 is still valid\n and should not be rejected. When a report with a stale root but valid price updates is submitted,\n we are OK to revert to preserve the invariant that we always revert on invalid sequence number ranges.\n If that happens, prices will be updates in later rounds."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 67533,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 67532,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "8129:13:101"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 67790,
                  "src": "8129:13:101"
                },
                "nodeType": "ModifierInvocation",
                "src": "8129:13:101"
              },
              {
                "id": 67535,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 67534,
                  "name": "whenHealthy",
                  "nameLocations": [
                    "8143:11:101"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 67779,
                  "src": "8143:11:101"
                },
                "nodeType": "ModifierInvocation",
                "src": "8143:11:101"
              }
            ],
            "name": "_report",
            "nameLocation": "8051:7:101",
            "overrides": {
              "id": 67531,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8120:8:101"
            },
            "parameters": {
              "id": 67530,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67527,
                  "mutability": "mutable",
                  "name": "encodedReport",
                  "nameLocation": "8074:13:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 67662,
                  "src": "8059:28:101",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 67526,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8059:5:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67529,
                  "mutability": "mutable",
                  "name": "epochAndRound",
                  "nameLocation": "8096:13:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 67662,
                  "src": "8089:20:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 67528,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "8089:6:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8058:52:101"
            },
            "returnParameters": {
              "id": 67536,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8155:0:101"
            },
            "scope": 67832,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 67677,
            "nodeType": "FunctionDefinition",
            "src": "10279:265:101",
            "nodes": [],
            "body": {
              "id": 67676,
              "nodeType": "Block",
              "src": "10350:194:101",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 67670,
                        "name": "i_chainSelector",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67278,
                        "src": "10407:15:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 67671,
                        "name": "i_sourceChainSelector",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67280,
                        "src": "10453:21:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 67672,
                        "name": "i_onRamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67282,
                        "src": "10492:8:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 67673,
                        "name": "i_armProxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67284,
                        "src": "10520:10:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 67669,
                      "name": "StaticConfig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67252,
                      "src": "10369:12:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_StaticConfig_$67252_storage_ptr_$",
                        "typeString": "type(struct CommitStore.StaticConfig storage pointer)"
                      }
                    },
                    "id": 67674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "10392:13:101",
                      "10432:19:101",
                      "10484:6:101",
                      "10510:8:101"
                    ],
                    "names": [
                      "chainSelector",
                      "sourceChainSelector",
                      "onRamp",
                      "armProxy"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "10369:170:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StaticConfig_$67252_memory_ptr",
                      "typeString": "struct CommitStore.StaticConfig memory"
                    }
                  },
                  "functionReturnParameters": 67668,
                  "id": 67675,
                  "nodeType": "Return",
                  "src": "10356:183:101"
                }
              ]
            },
            "documentation": {
              "id": 67663,
              "nodeType": "StructuredDocumentation",
              "src": "10103:173:101",
              "text": "@notice Returns the static commit store config.\n @dev RMN depends on this function, if changing, please notify the RMN maintainers.\n @return the configuration."
            },
            "functionSelector": "06285c69",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStaticConfig",
            "nameLocation": "10288:15:101",
            "parameters": {
              "id": 67664,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10303:2:101"
            },
            "returnParameters": {
              "id": 67668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67667,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 67677,
                  "src": "10329:19:101",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StaticConfig_$67252_memory_ptr",
                    "typeString": "struct CommitStore.StaticConfig"
                  },
                  "typeName": {
                    "id": 67666,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 67665,
                      "name": "StaticConfig",
                      "nameLocations": [
                        "10329:12:101"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 67252,
                      "src": "10329:12:101"
                    },
                    "referencedDeclaration": 67252,
                    "src": "10329:12:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StaticConfig_$67252_storage_ptr",
                      "typeString": "struct CommitStore.StaticConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10328:21:101"
            },
            "scope": 67832,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67687,
            "nodeType": "FunctionDefinition",
            "src": "10636:106:101",
            "nodes": [],
            "body": {
              "id": 67686,
              "nodeType": "Block",
              "src": "10709:33:101",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 67684,
                    "name": "s_dynamicConfig",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 67287,
                    "src": "10722:15:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DynamicConfig_$67256_storage",
                      "typeString": "struct CommitStore.DynamicConfig storage ref"
                    }
                  },
                  "functionReturnParameters": 67683,
                  "id": 67685,
                  "nodeType": "Return",
                  "src": "10715:22:101"
                }
              ]
            },
            "documentation": {
              "id": 67678,
              "nodeType": "StructuredDocumentation",
              "src": "10548:85:101",
              "text": "@notice Returns the dynamic commit store config.\n @return the configuration."
            },
            "functionSelector": "7437ff9f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDynamicConfig",
            "nameLocation": "10645:16:101",
            "parameters": {
              "id": 67679,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10661:2:101"
            },
            "returnParameters": {
              "id": 67683,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67682,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 67687,
                  "src": "10687:20:101",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DynamicConfig_$67256_memory_ptr",
                    "typeString": "struct CommitStore.DynamicConfig"
                  },
                  "typeName": {
                    "id": 67681,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 67680,
                      "name": "DynamicConfig",
                      "nameLocations": [
                        "10687:13:101"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 67256,
                      "src": "10687:13:101"
                    },
                    "referencedDeclaration": 67256,
                    "src": "10687:13:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DynamicConfig_$67256_storage_ptr",
                      "typeString": "struct CommitStore.DynamicConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10686:22:101"
            },
            "scope": 67832,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67734,
            "nodeType": "FunctionDefinition",
            "src": "10837:824:101",
            "nodes": [],
            "body": {
              "id": 67733,
              "nodeType": "Block",
              "src": "10909:752:101",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    67696
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 67696,
                      "mutability": "mutable",
                      "name": "dynamicConfig",
                      "nameLocation": "10936:13:101",
                      "nodeType": "VariableDeclaration",
                      "scope": 67733,
                      "src": "10915:34:101",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DynamicConfig_$67256_memory_ptr",
                        "typeString": "struct CommitStore.DynamicConfig"
                      },
                      "typeName": {
                        "id": 67695,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 67694,
                          "name": "DynamicConfig",
                          "nameLocations": [
                            "10915:13:101"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 67256,
                          "src": "10915:13:101"
                        },
                        "referencedDeclaration": 67256,
                        "src": "10915:13:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DynamicConfig_$67256_storage_ptr",
                          "typeString": "struct CommitStore.DynamicConfig"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 67703,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 67699,
                        "name": "onchainConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67690,
                        "src": "10963:13:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 67700,
                            "name": "DynamicConfig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67256,
                            "src": "10979:13:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_DynamicConfig_$67256_storage_ptr_$",
                              "typeString": "type(struct CommitStore.DynamicConfig storage pointer)"
                            }
                          }
                        ],
                        "id": 67701,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "10978:15:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_DynamicConfig_$67256_storage_ptr_$",
                          "typeString": "type(struct CommitStore.DynamicConfig storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_DynamicConfig_$67256_storage_ptr_$",
                          "typeString": "type(struct CommitStore.DynamicConfig storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 67697,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "10952:3:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 67698,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "10956:6:101",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "10952:10:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 67702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10952:42:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DynamicConfig_$67256_memory_ptr",
                      "typeString": "struct CommitStore.DynamicConfig memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10915:79:101"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 67710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 67704,
                        "name": "dynamicConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67696,
                        "src": "11005:13:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DynamicConfig_$67256_memory_ptr",
                          "typeString": "struct CommitStore.DynamicConfig memory"
                        }
                      },
                      "id": 67705,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11019:13:101",
                      "memberName": "priceRegistry",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 67255,
                      "src": "11005:27:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 67708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11044:1:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 67707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "11036:7:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 67706,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11036:7:101",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 67709,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11036:10:101",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11005:41:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 67714,
                  "nodeType": "IfStatement",
                  "src": "11001:80:101",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 67711,
                        "name": "InvalidCommitStoreConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67212,
                        "src": "11055:24:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 67712,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11055:26:101",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 67713,
                    "nodeType": "RevertStatement",
                    "src": "11048:33:101"
                  }
                },
                {
                  "expression": {
                    "id": 67717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 67715,
                      "name": "s_dynamicConfig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67287,
                      "src": "11088:15:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DynamicConfig_$67256_storage",
                        "typeString": "struct CommitStore.DynamicConfig storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 67716,
                      "name": "dynamicConfig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67696,
                      "src": "11106:13:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DynamicConfig_$67256_memory_ptr",
                        "typeString": "struct CommitStore.DynamicConfig memory"
                      }
                    },
                    "src": "11088:31:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DynamicConfig_$67256_storage",
                      "typeString": "struct CommitStore.DynamicConfig storage ref"
                    }
                  },
                  "id": 67718,
                  "nodeType": "ExpressionStatement",
                  "src": "11088:31:101"
                },
                {
                  "expression": {
                    "id": 67721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 67719,
                      "name": "s_latestPriceEpochAndRound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67293,
                      "src": "11400:26:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 67720,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11429:1:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "11400:30:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 67722,
                  "nodeType": "ExpressionStatement",
                  "src": "11400:30:101"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 67725,
                            "name": "i_chainSelector",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67278,
                            "src": "11497:15:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          {
                            "id": 67726,
                            "name": "i_sourceChainSelector",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67280,
                            "src": "11543:21:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          {
                            "id": 67727,
                            "name": "i_onRamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67282,
                            "src": "11582:8:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 67728,
                            "name": "i_armProxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67284,
                            "src": "11610:10:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 67724,
                          "name": "StaticConfig",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67252,
                          "src": "11459:12:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_StaticConfig_$67252_storage_ptr_$",
                            "typeString": "type(struct CommitStore.StaticConfig storage pointer)"
                          }
                        },
                        "id": 67729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [
                          "11482:13:101",
                          "11522:19:101",
                          "11574:6:101",
                          "11600:8:101"
                        ],
                        "names": [
                          "chainSelector",
                          "sourceChainSelector",
                          "onRamp",
                          "armProxy"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "11459:170:101",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StaticConfig_$67252_memory_ptr",
                          "typeString": "struct CommitStore.StaticConfig memory"
                        }
                      },
                      {
                        "id": 67730,
                        "name": "dynamicConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67696,
                        "src": "11637:13:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DynamicConfig_$67256_memory_ptr",
                          "typeString": "struct CommitStore.DynamicConfig memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_StaticConfig_$67252_memory_ptr",
                          "typeString": "struct CommitStore.StaticConfig memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_DynamicConfig_$67256_memory_ptr",
                          "typeString": "struct CommitStore.DynamicConfig memory"
                        }
                      ],
                      "id": 67723,
                      "name": "ConfigSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        67238,
                        72265
                      ],
                      "referencedDeclaration": 67238,
                      "src": "11442:9:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_StaticConfig_$67252_memory_ptr_$_t_struct$_DynamicConfig_$67256_memory_ptr_$returns$__$",
                        "typeString": "function (struct CommitStore.StaticConfig memory,struct CommitStore.DynamicConfig memory)"
                      }
                    },
                    "id": 67731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11442:214:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67732,
                  "nodeType": "EmitStatement",
                  "src": "11437:219:101"
                }
              ]
            },
            "baseFunctions": [
              72814
            ],
            "documentation": {
              "id": 67688,
              "nodeType": "StructuredDocumentation",
              "src": "10746:88:101",
              "text": "@notice Sets the dynamic config. This function is called during `setOCR2Config` flow"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeSetConfig",
            "nameLocation": "10846:16:101",
            "overrides": {
              "id": 67692,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10900:8:101"
            },
            "parameters": {
              "id": 67691,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67690,
                  "mutability": "mutable",
                  "name": "onchainConfig",
                  "nameLocation": "10876:13:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 67734,
                  "src": "10863:26:101",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 67689,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10863:5:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10862:28:101"
            },
            "returnParameters": {
              "id": 67693,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10909:0:101"
            },
            "scope": 67832,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 67751,
            "nodeType": "FunctionDefinition",
            "src": "11950:123:101",
            "nodes": [],
            "body": {
              "id": 67750,
              "nodeType": "Block",
              "src": "12014:59:101",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 67748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 67745,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "12027:28:101",
                      "subExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 67741,
                                "name": "i_armProxy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67284,
                                "src": "12033:10:101",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 67740,
                              "name": "IARM",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 70844,
                              "src": "12028:4:101",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IARM_$70844_$",
                                "typeString": "type(contract IARM)"
                              }
                            },
                            "id": 67742,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12028:16:101",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IARM_$70844",
                              "typeString": "contract IARM"
                            }
                          },
                          "id": 67743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12045:8:101",
                          "memberName": "isCursed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 70843,
                          "src": "12028:25:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 67744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12028:27:101",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 67747,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "12059:9:101",
                      "subExpression": {
                        "id": 67746,
                        "name": "s_paused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67297,
                        "src": "12060:8:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "12027:41:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 67739,
                  "id": 67749,
                  "nodeType": "Return",
                  "src": "12020:48:101"
                }
              ]
            },
            "documentation": {
              "id": 67735,
              "nodeType": "StructuredDocumentation",
              "src": "11880:67:101",
              "text": "@notice Single function to check the status of the commitStore."
            },
            "functionSelector": "8db94e44",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isUnpausedAndARMHealthy",
            "nameLocation": "11959:23:101",
            "parameters": {
              "id": 67736,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11982:2:101"
            },
            "returnParameters": {
              "id": 67739,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67738,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 67751,
                  "src": "12008:4:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 67737,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12008:4:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12007:6:101"
            },
            "scope": 67832,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67765,
            "nodeType": "FunctionDefinition",
            "src": "12143:99:101",
            "nodes": [],
            "body": {
              "id": 67764,
              "nodeType": "Block",
              "src": "12196:46:101",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 67762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "12209:28:101",
                    "subExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 67758,
                              "name": "i_armProxy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67284,
                              "src": "12215:10:101",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 67757,
                            "name": "IARM",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70844,
                            "src": "12210:4:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IARM_$70844_$",
                              "typeString": "type(contract IARM)"
                            }
                          },
                          "id": 67759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12210:16:101",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IARM_$70844",
                            "typeString": "contract IARM"
                          }
                        },
                        "id": 67760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12227:8:101",
                        "memberName": "isCursed",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 70843,
                        "src": "12210:25:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                          "typeString": "function () view external returns (bool)"
                        }
                      },
                      "id": 67761,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12210:27:101",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 67756,
                  "id": 67763,
                  "nodeType": "Return",
                  "src": "12202:35:101"
                }
              ]
            },
            "documentation": {
              "id": 67752,
              "nodeType": "StructuredDocumentation",
              "src": "12077:63:101",
              "text": "@notice Support querying whether health checker is healthy."
            },
            "functionSelector": "0a6cd30d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isARMHealthy",
            "nameLocation": "12152:12:101",
            "parameters": {
              "id": 67753,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12164:2:101"
            },
            "returnParameters": {
              "id": 67756,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67755,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 67765,
                  "src": "12190:4:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 67754,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12190:4:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12189:6:101"
            },
            "scope": 67832,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67779,
            "nodeType": "ModifierDefinition",
            "src": "12354:95:101",
            "nodes": [],
            "body": {
              "id": 67778,
              "nodeType": "Block",
              "src": "12377:72:101",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 67769,
                            "name": "i_armProxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67284,
                            "src": "12392:10:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 67768,
                          "name": "IARM",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70844,
                          "src": "12387:4:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IARM_$70844_$",
                            "typeString": "type(contract IARM)"
                          }
                        },
                        "id": 67770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12387:16:101",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IARM_$70844",
                          "typeString": "contract IARM"
                        }
                      },
                      "id": 67771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12404:8:101",
                      "memberName": "isCursed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70843,
                      "src": "12387:25:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                        "typeString": "function () view external returns (bool)"
                      }
                    },
                    "id": 67772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12387:27:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 67776,
                  "nodeType": "IfStatement",
                  "src": "12383:54:101",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 67773,
                        "name": "BadARMSignal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67214,
                        "src": "12423:12:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 67774,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12423:14:101",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 67775,
                    "nodeType": "RevertStatement",
                    "src": "12416:21:101"
                  }
                },
                {
                  "id": 67777,
                  "nodeType": "PlaceholderStatement",
                  "src": "12443:1:101"
                }
              ]
            },
            "documentation": {
              "id": 67766,
              "nodeType": "StructuredDocumentation",
              "src": "12246:105:101",
              "text": "@notice Ensure that the ARM has not emitted a bad signal, and that the latest heartbeat is not stale."
            },
            "name": "whenHealthy",
            "nameLocation": "12363:11:101",
            "parameters": {
              "id": 67767,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12374:2:101"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 67790,
            "nodeType": "ModifierDefinition",
            "src": "12542:77:101",
            "nodes": [],
            "body": {
              "id": 67789,
              "nodeType": "Block",
              "src": "12567:52:101",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 67782,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67799,
                      "src": "12577:6:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                        "typeString": "function () view returns (bool)"
                      }
                    },
                    "id": 67783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12577:8:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 67787,
                  "nodeType": "IfStatement",
                  "src": "12573:34:101",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 67784,
                        "name": "PausedError",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67203,
                        "src": "12594:11:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 67785,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12594:13:101",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 67786,
                    "nodeType": "RevertStatement",
                    "src": "12587:20:101"
                  }
                },
                {
                  "id": 67788,
                  "nodeType": "PlaceholderStatement",
                  "src": "12613:1:101"
                }
              ]
            },
            "documentation": {
              "id": 67780,
              "nodeType": "StructuredDocumentation",
              "src": "12453:86:101",
              "text": "@notice Modifier to make a function callable only when the contract is not paused."
            },
            "name": "whenNotPaused",
            "nameLocation": "12551:13:101",
            "parameters": {
              "id": 67781,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12564:2:101"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 67799,
            "nodeType": "FunctionDefinition",
            "src": "12698:71:101",
            "nodes": [],
            "body": {
              "id": 67798,
              "nodeType": "Block",
              "src": "12743:26:101",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 67796,
                    "name": "s_paused",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 67297,
                    "src": "12756:8:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 67795,
                  "id": 67797,
                  "nodeType": "Return",
                  "src": "12749:15:101"
                }
              ]
            },
            "documentation": {
              "id": 67791,
              "nodeType": "StructuredDocumentation",
              "src": "12623:72:101",
              "text": "@notice Returns true if the contract is paused, and false otherwise."
            },
            "functionSelector": "5c975abb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "paused",
            "nameLocation": "12707:6:101",
            "parameters": {
              "id": 67792,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12713:2:101"
            },
            "returnParameters": {
              "id": 67795,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67794,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 67799,
                  "src": "12737:4:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 67793,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12737:4:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12736:6:101"
            },
            "scope": 67832,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 67815,
            "nodeType": "FunctionDefinition",
            "src": "12844:91:101",
            "nodes": [],
            "body": {
              "id": 67814,
              "nodeType": "Block",
              "src": "12880:55:101",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 67807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 67805,
                      "name": "s_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67297,
                      "src": "12886:8:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 67806,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12897:4:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "12886:15:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 67808,
                  "nodeType": "ExpressionStatement",
                  "src": "12886:15:101"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 67810,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "12919:3:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 67811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12923:6:101",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12919:10:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 67809,
                      "name": "Paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67220,
                      "src": "12912:6:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 67812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12912:18:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67813,
                  "nodeType": "EmitStatement",
                  "src": "12907:23:101"
                }
              ]
            },
            "documentation": {
              "id": 67800,
              "nodeType": "StructuredDocumentation",
              "src": "12773:68:101",
              "text": "@notice Pause the contract\n @dev only callable by the owner"
            },
            "functionSelector": "8456cb59",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 67803,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 67802,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "12870:9:101"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 122432,
                  "src": "12870:9:101"
                },
                "nodeType": "ModifierInvocation",
                "src": "12870:9:101"
              }
            ],
            "name": "pause",
            "nameLocation": "12853:5:101",
            "parameters": {
              "id": 67801,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12858:2:101"
            },
            "returnParameters": {
              "id": 67804,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12880:0:101"
            },
            "scope": 67832,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67831,
            "nodeType": "FunctionDefinition",
            "src": "13012:96:101",
            "nodes": [],
            "body": {
              "id": 67830,
              "nodeType": "Block",
              "src": "13050:58:101",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 67823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 67821,
                      "name": "s_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67297,
                      "src": "13056:8:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 67822,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13067:5:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "13056:16:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 67824,
                  "nodeType": "ExpressionStatement",
                  "src": "13056:16:101"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 67826,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "13092:3:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 67827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13096:6:101",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "13092:10:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 67825,
                      "name": "Unpaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67224,
                      "src": "13083:8:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 67828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13083:20:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67829,
                  "nodeType": "EmitStatement",
                  "src": "13078:25:101"
                }
              ]
            },
            "documentation": {
              "id": 67816,
              "nodeType": "StructuredDocumentation",
              "src": "12939:70:101",
              "text": "@notice Unpause the contract\n @dev only callable by the owner"
            },
            "functionSelector": "3f4ba83a",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 67819,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 67818,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "13040:9:101"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 122432,
                  "src": "13040:9:101"
                },
                "nodeType": "ModifierInvocation",
                "src": "13040:9:101"
              }
            ],
            "name": "unpause",
            "nameLocation": "13021:7:101",
            "parameters": {
              "id": 67817,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13028:2:101"
            },
            "returnParameters": {
              "id": 67820,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13050:0:101"
            },
            "scope": 67832,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 67194,
              "name": "ICommitStore",
              "nameLocations": [
                "494:12:101"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 70891,
              "src": "494:12:101"
            },
            "id": 67195,
            "nodeType": "InheritanceSpecifier",
            "src": "494:12:101"
          },
          {
            "baseName": {
              "id": 67196,
              "name": "ITypeAndVersion",
              "nameLocations": [
                "508:15:101"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 122903,
              "src": "508:15:101"
            },
            "id": 67197,
            "nodeType": "InheritanceSpecifier",
            "src": "508:15:101"
          },
          {
            "baseName": {
              "id": 67198,
              "name": "OCR2Base",
              "nameLocations": [
                "525:8:101"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 73148,
              "src": "525:8:101"
            },
            "id": 67199,
            "nodeType": "InheritanceSpecifier",
            "src": "525:8:101"
          }
        ],
        "canonicalName": "CommitStore",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          67832,
          73148,
          72411,
          122903,
          122449,
          122271,
          122433,
          122895,
          70891
        ],
        "name": "CommitStore",
        "nameLocation": "479:11:101",
        "scope": 67833,
        "usedErrors": [
          67201,
          67203,
          67208,
          67210,
          67212,
          67214,
          67216,
          71533,
          71535,
          72426,
          72432,
          72438,
          72444,
          72446,
          72448,
          72450,
          72452,
          72454,
          72456
        ],
        "usedEvents": [
          67220,
          67224,
          67230,
          67238,
          67242,
          72265,
          72382,
          122287,
          122293
        ]
      }
    ],
    "license": "BUSL-1.1"
  },
  "id": 101
}
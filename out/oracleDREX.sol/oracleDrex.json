{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientAllowance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "approver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidApprover",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSpender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "governor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "authorized",
          "type": "bool"
        }
      ],
      "name": "NewGovernor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum oracleDrex.State",
          "name": "state",
          "type": "uint8"
        }
      ],
      "name": "StateUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "authorized",
          "type": "bool"
        }
      ],
      "name": "UpdatedAuthorization",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "authorizedAddresses",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_shares",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "emergencyPause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "governor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_shares",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_value",
          "type": "bool"
        }
      ],
      "name": "setAuthorized",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_governance",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_value",
          "type": "bool"
        }
      ],
      "name": "setGovernor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setLock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum oracleDrex.State",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stateBeforePause",
      "outputs": [
        {
          "internalType": "enum oracleDrex.State",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b503360405180604001604052806004815260200163088a48ab60e31b815250604051806040016040528060058152602001640e688a48ab60db1b81525081600390816200005f9190620001c0565b5060046200006e8282620001c0565b5050506001600160a01b038116620000a057604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000ab81620000c9565b506005805460ff60a01b1916600160a01b179055426006556200028c565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200014657607f821691505b6020821081036200016757634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001bb57600081815260208120601f850160051c81016020861015620001965750805b601f850160051c820191505b81811015620001b757828155600101620001a2565b5050505b505050565b81516001600160401b03811115620001dc57620001dc6200011b565b620001f481620001ed845462000131565b846200016d565b602080601f8311600181146200022c5760008415620002135750858301515b600019600386901b1c1916600185901b178555620001b7565b600085815260208120601f198616915b828110156200025d578886015182559484019460019091019084016200023c565b50858210156200027c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6112a0806200029c6000396000f3fe608060405234801561001057600080fd5b506004361061018d5760003560e01c8063715018a6116100e35780639dc29fac1161008c578063dd62ed3e11610066578063dd62ed3e1461036a578063f19e207e146103b0578063f2fde38b146103d357600080fd5b80639dc29fac1461031f578063a9059cbb14610332578063c19d93fb1461034557600080fd5b80638d64fd60116100bd5780638d64fd60146102bc5780638da5cb5b146102ef57806395d89b411461031757600080fd5b8063715018a6146102a357806378e97925146102ab5780637aba6f37146102b457600080fd5b806340c10f191161014557806370a082311161011f57806370a082311461023757806370ec42e81461026d578063711bf9b21461029057600080fd5b806340c10f19146102075780635160696c1461021c57806351858e271461022f57600080fd5b806318160ddd1161017657806318160ddd146101d357806323b872dd146101e5578063313ce567146101f857600080fd5b806306fdde0314610192578063095ea7b3146101b0575b600080fd5b61019a6103e6565b6040516101a7919061100a565b60405180910390f35b6101c36101be36600461109f565b610478565b60405190151581526020016101a7565b6002545b6040519081526020016101a7565b6101c36101f33660046110c9565b610492565b604051601281526020016101a7565b61021a61021536600461109f565b6104b6565b005b61021a61022a366004611105565b610561565b61021a6105fc565b6101d7610245366004611141565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6101c361027b366004611141565b60086020526000908152604090205460ff1681565b61021a61029e366004611105565b6106ef565b61021a61077a565b6101d760065481565b61021a61078e565b6005546102e2907501000000000000000000000000000000000000000000900460ff1681565b6040516101a79190611192565b60055460405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101a7565b61019a610860565b61021a61032d36600461109f565b61086f565b6101c361034036600461109f565b610919565b6005546102e29074010000000000000000000000000000000000000000900460ff1681565b6101d76103783660046111d3565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b6101c36103be366004611141565b60076020526000908152604090205460ff1681565b61021a6103e1366004611141565b610927565b6060600380546103f590611206565b80601f016020809104026020016040519081016040528092919081815260200182805461042190611206565b801561046e5780601f106104435761010080835404028352916020019161046e565b820191906000526020600020905b81548152906001019060200180831161045157829003601f168201915b5050505050905090565b60003361048681858561098b565b60019150505b92915050565b6000336104a085828561099d565b6104ab858585610a6c565b506001949350505050565b600160055474010000000000000000000000000000000000000000900460ff1660028111156104e7576104e7611163565b14610553576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f21556e6c6f636b6564000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b61055d8282610b17565b5050565b610569610b73565b610571610bc6565b73ffffffffffffffffffffffffffffffffffffffff821660008181526008602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685151590811790915591519182527fbb35d79a0e42810e1556183f4de163f21b0dfa425332429ffc7f12d1b1be36d991015b60405180910390a25050565b610604610b73565b6005805460ff7401000000000000000000000000000000000000000082041691907fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff16750100000000000000000000000000000000000000000083600281111561067057610670611163565b0217905550600580547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16740200000000000000000000000000000000000000001790556040517f23ad33ab6a13a00aa7d06cd167b2abd03dec86af3cf3cc91759dcd3ae8411887906106e590600290611192565b60405180910390a1565b6106f7610bc6565b73ffffffffffffffffffffffffffffffffffffffff821660008181526007602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685151590811790915591519182527f8d6437292b994fc738dc2a2d36adca80c5c3516dde0ca63fedcbb70101b21a3191016105f0565b610782610b73565b61078c6000610c44565b565b610796610b73565b6005805460ff7401000000000000000000000000000000000000000082041691907fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff16750100000000000000000000000000000000000000000083600281111561080257610802611163565b0217905550600580547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1690556040517f23ad33ab6a13a00aa7d06cd167b2abd03dec86af3cf3cc91759dcd3ae8411887906106e590600090611192565b6060600480546103f590611206565b600160055474010000000000000000000000000000000000000000900460ff1660028111156108a0576108a0611163565b14610907576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f21556e6c6f636b65640000000000000000000000000000000000000000000000604482015260640161054a565b61090f610bc6565b61055d8282610cbb565b600033610486818585610a6c565b61092f610b73565b73ffffffffffffffffffffffffffffffffffffffff811661097f576040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526000600482015260240161054a565b61098881610c44565b50565b6109988383836001610d17565b505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a665781811015610a57576040517ffb8f41b200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84166004820152602481018290526044810183905260640161054a565b610a6684848484036000610d17565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316610abc576040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526000600482015260240161054a565b73ffffffffffffffffffffffffffffffffffffffff8216610b0c576040517fec442f050000000000000000000000000000000000000000000000000000000081526000600482015260240161054a565b610998838383610e5f565b73ffffffffffffffffffffffffffffffffffffffff8216610b67576040517fec442f050000000000000000000000000000000000000000000000000000000081526000600482015260240161054a565b61055d60008383610e5f565b60055473ffffffffffffffffffffffffffffffffffffffff16331461078c576040517f118cdaa700000000000000000000000000000000000000000000000000000000815233600482015260240161054a565b3360009081526008602052604090205460ff16151560011461078c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f21676f7665726e6f720000000000000000000000000000000000000000000000604482015260640161054a565b6005805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b73ffffffffffffffffffffffffffffffffffffffff8216610d0b576040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526000600482015260240161054a565b61055d82600083610e5f565b73ffffffffffffffffffffffffffffffffffffffff8416610d67576040517fe602df050000000000000000000000000000000000000000000000000000000081526000600482015260240161054a565b73ffffffffffffffffffffffffffffffffffffffff8316610db7576040517f94280d620000000000000000000000000000000000000000000000000000000081526000600482015260240161054a565b73ffffffffffffffffffffffffffffffffffffffff80851660009081526001602090815260408083209387168352929052208290558015610a66578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610e5191815260200190565b60405180910390a350505050565b73ffffffffffffffffffffffffffffffffffffffff8316610e97578060026000828254610e8c9190611259565b90915550610f499050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481811015610f1d576040517fe450d38c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85166004820152602481018290526044810183905260640161054a565b73ffffffffffffffffffffffffffffffffffffffff841660009081526020819052604090209082900390555b73ffffffffffffffffffffffffffffffffffffffff8216610f7257600280548290039055610f9e565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604090208054820190555b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610ffd91815260200190565b60405180910390a3505050565b600060208083528351808285015260005b818110156110375785810183015185820160400152820161101b565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461109a57600080fd5b919050565b600080604083850312156110b257600080fd5b6110bb83611076565b946020939093013593505050565b6000806000606084860312156110de57600080fd5b6110e784611076565b92506110f560208501611076565b9150604084013590509250925092565b6000806040838503121561111857600080fd5b61112183611076565b91506020830135801515811461113657600080fd5b809150509250929050565b60006020828403121561115357600080fd5b61115c82611076565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60208101600383106111cd577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b91905290565b600080604083850312156111e657600080fd5b6111ef83611076565b91506111fd60208401611076565b90509250929050565b600181811c9082168061121a57607f821691505b602082108103611253577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b8082018082111561048c577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea164736f6c6343000815000a",
    "sourceMap": "344:2587:89:-:0;;;1197:101;;;;;;;;;;382:10;1896:113:45;;;;;;;;;;;;;-1:-1:-1;;;1896:113:45;;;;;;;;;;;;;;;;-1:-1:-1;;;1896:113:45;;;1970:5;1962;:13;;;;;;:::i;:::-;-1:-1:-1;1985:7:45;:17;1995:7;1985;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:34;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:34;;1350:1;1322:31;;;2881:51:351;2854:18;;1322:31:34;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1238:5:89::1;:22:::0;;-1:-1:-1;;;;1238:22:89::1;-1:-1:-1::0;;;1238:22:89::1;::::0;;1278:15:::1;1266:9;:27:::0;344:2587;;2912:187:34;3004:6;;;-1:-1:-1;;;;;3020:17:34;;;-1:-1:-1;;;;;;3020:17:34;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:127:351:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:351;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:351;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:351;;;2580:26;2531:89;-1:-1:-1;;1335:1:351;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:351;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:351;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:351;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:351:o;2943:127::-;344:2587:89;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061018d5760003560e01c8063715018a6116100e35780639dc29fac1161008c578063dd62ed3e11610066578063dd62ed3e1461036a578063f19e207e146103b0578063f2fde38b146103d357600080fd5b80639dc29fac1461031f578063a9059cbb14610332578063c19d93fb1461034557600080fd5b80638d64fd60116100bd5780638d64fd60146102bc5780638da5cb5b146102ef57806395d89b411461031757600080fd5b8063715018a6146102a357806378e97925146102ab5780637aba6f37146102b457600080fd5b806340c10f191161014557806370a082311161011f57806370a082311461023757806370ec42e81461026d578063711bf9b21461029057600080fd5b806340c10f19146102075780635160696c1461021c57806351858e271461022f57600080fd5b806318160ddd1161017657806318160ddd146101d357806323b872dd146101e5578063313ce567146101f857600080fd5b806306fdde0314610192578063095ea7b3146101b0575b600080fd5b61019a6103e6565b6040516101a7919061100a565b60405180910390f35b6101c36101be36600461109f565b610478565b60405190151581526020016101a7565b6002545b6040519081526020016101a7565b6101c36101f33660046110c9565b610492565b604051601281526020016101a7565b61021a61021536600461109f565b6104b6565b005b61021a61022a366004611105565b610561565b61021a6105fc565b6101d7610245366004611141565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6101c361027b366004611141565b60086020526000908152604090205460ff1681565b61021a61029e366004611105565b6106ef565b61021a61077a565b6101d760065481565b61021a61078e565b6005546102e2907501000000000000000000000000000000000000000000900460ff1681565b6040516101a79190611192565b60055460405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101a7565b61019a610860565b61021a61032d36600461109f565b61086f565b6101c361034036600461109f565b610919565b6005546102e29074010000000000000000000000000000000000000000900460ff1681565b6101d76103783660046111d3565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b6101c36103be366004611141565b60076020526000908152604090205460ff1681565b61021a6103e1366004611141565b610927565b6060600380546103f590611206565b80601f016020809104026020016040519081016040528092919081815260200182805461042190611206565b801561046e5780601f106104435761010080835404028352916020019161046e565b820191906000526020600020905b81548152906001019060200180831161045157829003601f168201915b5050505050905090565b60003361048681858561098b565b60019150505b92915050565b6000336104a085828561099d565b6104ab858585610a6c565b506001949350505050565b600160055474010000000000000000000000000000000000000000900460ff1660028111156104e7576104e7611163565b14610553576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f21556e6c6f636b6564000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b61055d8282610b17565b5050565b610569610b73565b610571610bc6565b73ffffffffffffffffffffffffffffffffffffffff821660008181526008602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685151590811790915591519182527fbb35d79a0e42810e1556183f4de163f21b0dfa425332429ffc7f12d1b1be36d991015b60405180910390a25050565b610604610b73565b6005805460ff7401000000000000000000000000000000000000000082041691907fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff16750100000000000000000000000000000000000000000083600281111561067057610670611163565b0217905550600580547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16740200000000000000000000000000000000000000001790556040517f23ad33ab6a13a00aa7d06cd167b2abd03dec86af3cf3cc91759dcd3ae8411887906106e590600290611192565b60405180910390a1565b6106f7610bc6565b73ffffffffffffffffffffffffffffffffffffffff821660008181526007602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685151590811790915591519182527f8d6437292b994fc738dc2a2d36adca80c5c3516dde0ca63fedcbb70101b21a3191016105f0565b610782610b73565b61078c6000610c44565b565b610796610b73565b6005805460ff7401000000000000000000000000000000000000000082041691907fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff16750100000000000000000000000000000000000000000083600281111561080257610802611163565b0217905550600580547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1690556040517f23ad33ab6a13a00aa7d06cd167b2abd03dec86af3cf3cc91759dcd3ae8411887906106e590600090611192565b6060600480546103f590611206565b600160055474010000000000000000000000000000000000000000900460ff1660028111156108a0576108a0611163565b14610907576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f21556e6c6f636b65640000000000000000000000000000000000000000000000604482015260640161054a565b61090f610bc6565b61055d8282610cbb565b600033610486818585610a6c565b61092f610b73565b73ffffffffffffffffffffffffffffffffffffffff811661097f576040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526000600482015260240161054a565b61098881610c44565b50565b6109988383836001610d17565b505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a665781811015610a57576040517ffb8f41b200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84166004820152602481018290526044810183905260640161054a565b610a6684848484036000610d17565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316610abc576040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526000600482015260240161054a565b73ffffffffffffffffffffffffffffffffffffffff8216610b0c576040517fec442f050000000000000000000000000000000000000000000000000000000081526000600482015260240161054a565b610998838383610e5f565b73ffffffffffffffffffffffffffffffffffffffff8216610b67576040517fec442f050000000000000000000000000000000000000000000000000000000081526000600482015260240161054a565b61055d60008383610e5f565b60055473ffffffffffffffffffffffffffffffffffffffff16331461078c576040517f118cdaa700000000000000000000000000000000000000000000000000000000815233600482015260240161054a565b3360009081526008602052604090205460ff16151560011461078c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f21676f7665726e6f720000000000000000000000000000000000000000000000604482015260640161054a565b6005805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b73ffffffffffffffffffffffffffffffffffffffff8216610d0b576040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526000600482015260240161054a565b61055d82600083610e5f565b73ffffffffffffffffffffffffffffffffffffffff8416610d67576040517fe602df050000000000000000000000000000000000000000000000000000000081526000600482015260240161054a565b73ffffffffffffffffffffffffffffffffffffffff8316610db7576040517f94280d620000000000000000000000000000000000000000000000000000000081526000600482015260240161054a565b73ffffffffffffffffffffffffffffffffffffffff80851660009081526001602090815260408083209387168352929052208290558015610a66578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610e5191815260200190565b60405180910390a350505050565b73ffffffffffffffffffffffffffffffffffffffff8316610e97578060026000828254610e8c9190611259565b90915550610f499050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481811015610f1d576040517fe450d38c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85166004820152602481018290526044810183905260640161054a565b73ffffffffffffffffffffffffffffffffffffffff841660009081526020819052604090209082900390555b73ffffffffffffffffffffffffffffffffffffffff8216610f7257600280548290039055610f9e565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604090208054820190555b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610ffd91815260200190565b60405180910390a3505050565b600060208083528351808285015260005b818110156110375785810183015185820160400152820161101b565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461109a57600080fd5b919050565b600080604083850312156110b257600080fd5b6110bb83611076565b946020939093013593505050565b6000806000606084860312156110de57600080fd5b6110e784611076565b92506110f560208501611076565b9150604084013590509250925092565b6000806040838503121561111857600080fd5b61112183611076565b91506020830135801515811461113657600080fd5b809150509250929050565b60006020828403121561115357600080fd5b61115c82611076565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60208101600383106111cd577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b91905290565b600080604083850312156111e657600080fd5b6111ef83611076565b91506111fd60208401611076565b90509250929050565b600181811c9082168061121a57607f821691505b602082108103611253577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b8082018082111561048c577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea164736f6c6343000815000a",
    "sourceMap": "344:2587:89:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:45;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;:::i;:::-;;:::i;:::-;;;1251:14:351;;1244:22;1226:41;;1214:2;1199:18;4293:186:45;1086:187:351;3144:97:45;3222:12;;3144:97;;;1424:25:351;;;1412:2;1397:18;3144:97:45;1278:177:351;5039:244:45;;;;;;:::i;:::-;;:::i;3002:82::-;;;3075:2;1935:36:351;;1923:2;1908:18;3002:82:45;1793:184:351;1306:96:89;;;;;;:::i;:::-;;:::i;:::-;;1741:192;;;;;;:::i;:::-;;:::i;2212:149::-;;;:::i;3299:116:45:-;;;;;;:::i;:::-;3390:18;;3364:7;3390:18;;;;;;;;;;;;3299:116;801:40:89;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1542:193;;;;;;:::i;:::-;;:::i;2293:101:34:-;;;:::i;713:24:89:-;;;;;;2365:135;;;:::i;614:29::-;;;;;;;;;;;;;;;;;;;:::i;1638:85:34:-;1710:6;;1638:85;;1710:6;;;;3261:74:351;;3249:2;3234:18;1638:85:34;3115:226:351;2276:93:45;;;:::i;1409:125:89:-;;;;;;:::i;:::-;;:::i;3610:178:45:-;;;;;;:::i;:::-;;:::i;535:18:89:-;;;;;;;;;;;;3846:140:45;;;;;;:::i;:::-;3952:18;;;;3926:7;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3846:140;744:51:89;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2543:215:34;;;;;;:::i;:::-;;:::i;2074:89:45:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;735:10:54;4420:31:45;735:10:54;4436:7:45;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;;:::o;5039:244::-;5126:4;735:10:54;5182:37:45;5198:4;735:10:54;5213:5:45;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;-1:-1:-1;5272:4:45;;5039:244;-1:-1:-1;;;;5039:244:45:o;1306:96:89:-;2716:14;2707:5;;;;;;;:23;;;;;;;;:::i;:::-;;2699:45;;;;;;;4255:2:351;2699:45:89;;;4237:21:351;4294:1;4274:18;;;4267:29;4332:11;4312:18;;;4305:39;4361:18;;2699:45:89;;;;;;;;;1376:19:::1;1382:3;1387:7;1376:5;:19::i;:::-;1306:96:::0;;:::o;1741:192::-;1531:13:34;:11;:13::i;:::-;1824:15:89::1;:13;:15::i;:::-;1849:21;::::0;::::1;;::::0;;;:8:::1;:21;::::0;;;;;;;;:30;;;::::1;::::0;::::1;;::::0;;::::1;::::0;;;1894:32;;1226:41:351;;;1894:32:89::1;::::0;1199:18:351;1894:32:89::1;;;;;;;;1741:192:::0;;:::o;2212:149::-;1531:13:34;:11;:13::i;:::-;2282:5:89::1;::::0;;::::1;::::0;;::::1;;::::0;;2263:24;::::1;::::0;2282:5;2263:24:::1;::::0;::::1;;;;;;:::i;:::-;;;::::0;;-1:-1:-1;2293:5:89::1;:23:::0;;;::::1;::::0;::::1;::::0;;2327:29:::1;::::0;::::1;::::0;::::1;::::0;2301:15:::1;::::0;2327:29:::1;:::i;:::-;;;;;;;;2212:149::o:0;1542:193::-;1614:15;:13;:15::i;:::-;1639:28;;;;;;;:19;:28;;;;;;;;;:37;;;;;;;;;;;;;1691;;1226:41:351;;;1691:37:89;;1199:18:351;1691:37:89;1086:187:351;2293:101:34;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2365:135:89:-;1531:13:34;:11;:13::i;:::-;2427:5:89::1;::::0;;::::1;::::0;;::::1;;::::0;;2408:24;::::1;::::0;2427:5;2408:24:::1;::::0;::::1;;;;;;:::i;:::-;;;::::0;;-1:-1:-1;2438:5:89::1;:20:::0;;;::::1;::::0;;2469:26:::1;::::0;::::1;::::0;::::1;::::0;2446:12:::1;::::0;2469:26:::1;:::i;2276:93:45:-:0;2323:13;2355:7;2348:14;;;;;:::i;1409:125:89:-;2716:14;2707:5;;;;;;;:23;;;;;;;;:::i;:::-;;2699:45;;;;;;;4255:2:351;2699:45:89;;;4237:21:351;4294:1;4274:18;;;4267:29;4332:11;4312:18;;;4305:39;4361:18;;2699:45:89;4053:332:351;2699:45:89;1480:15:::1;:13;:15::i;:::-;1505:21;1511:5;1518:7;1505:5;:21::i;3610:178:45:-:0;3679:4;735:10:54;3733:27:45;735:10:54;3750:2:45;3754:5;3733:9;:27::i;2543:215:34:-;1531:13;:11;:13::i;:::-;2627:22:::1;::::0;::::1;2623:91;;2672:31;::::0;::::1;::::0;;2700:1:::1;2672:31;::::0;::::1;3261:74:351::0;3234:18;;2672:31:34::1;3115:226:351::0;2623:91:34::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;8989:128:45:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;3952:18;;;;10762:24;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;10848:17;10828:37;;10824:310;;10904:5;10885:16;:24;10881:130;;;10936:60;;;;;4622:42:351;4610:55;;10936:60:45;;;4592:74:351;4682:18;;;4675:34;;;4725:18;;;4718:34;;;4565:18;;10936:60:45;4390:368:351;10881:130:45;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10752:388;10663:477;;;:::o;5656:300::-;5739:18;;;5735:86;;5780:30;;;;;5807:1;5780:30;;;3261:74:351;3234:18;;5780:30:45;3115:226:351;5735:86:45;5834:16;;;5830:86;;5873:32;;;;;5902:1;5873:32;;;3261:74:351;3234:18;;5873:32:45;3115:226:351;5830:86:45;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;7721:208::-;7791:21;;;7787:91;;7835:32;;;;;7864:1;7835:32;;;3261:74:351;3234:18;;7835:32:45;3115:226:351;7787:91:45;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;1796:162:34:-;1710:6;;1855:23;1710:6;735:10:54;1855:23:34;1851:101;;1901:40;;;;;735:10:54;1901:40:34;;;3261:74:351;3234:18;;1901:40:34;3115:226:351;2100:106:89;2166:10;2157:20;;;;:8;:20;;;;;;;;:28;;:20;:28;2149:50;;;;;;;4965:2:351;2149:50:89;;;4947:21:351;5004:1;4984:18;;;4977:29;5042:11;5022:18;;;5015:39;5071:18;;2149:50:89;4763:332:351;2912:187:34;3004:6;;;;3020:17;;;;;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;8247:206:45:-;8317:21;;;8313:89;;8361:30;;;;;8388:1;8361:30;;;3261:74:351;3234:18;;8361:30:45;3115:226:351;8313:89:45;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;9949:432::-;10061:19;;;10057:89;;10103:32;;;;;10132:1;10103:32;;;3261:74:351;3234:18;;10103:32:45;3115:226:351;10057:89:45;10159:21;;;10155:90;;10203:31;;;;;10231:1;10203:31;;;3261:74:351;3234:18;;10203:31:45;3115:226:351;10155:90:45;10254:18;;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10299:76;;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;1424:25:351;;1412:2;1397:18;;1278:177;10333:31:45;;;;;;;;9949:432;;;;:::o;6271:1107::-;6360:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:45;;-1:-1:-1;6356:540:45;;6570:15;;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;;;;4622:42:351;4610:55;;6649:50:45;;;4592:74:351;4682:18;;;4675:34;;;4725:18;;;4718:34;;;4565:18;;6649:50:45;4390:368:351;6599:115:45;6834:15;;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;6910:16;;;6906:425;;7073:12;:21;;;;;;;6906:425;;;7284:13;;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;1424::351;;1412:2;1397:18;;1278:177;7346:25:45;;;;;;;;6271:1107;;;:::o;14:607:351:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;612:2;542:66;537:2;529:6;525:15;521:88;510:9;506:104;502:113;494:121;;;;14:607;;;;:::o;626:196::-;694:20;;754:42;743:54;;733:65;;723:93;;812:1;809;802:12;723:93;626:196;;;:::o;827:254::-;895:6;903;956:2;944:9;935:7;931:23;927:32;924:52;;;972:1;969;962:12;924:52;995:29;1014:9;995:29;:::i;:::-;985:39;1071:2;1056:18;;;;1043:32;;-1:-1:-1;;;827:254:351:o;1460:328::-;1537:6;1545;1553;1606:2;1594:9;1585:7;1581:23;1577:32;1574:52;;;1622:1;1619;1612:12;1574:52;1645:29;1664:9;1645:29;:::i;:::-;1635:39;;1693:38;1727:2;1716:9;1712:18;1693:38;:::i;:::-;1683:48;;1778:2;1767:9;1763:18;1750:32;1740:42;;1460:328;;;;;:::o;1982:347::-;2047:6;2055;2108:2;2096:9;2087:7;2083:23;2079:32;2076:52;;;2124:1;2121;2114:12;2076:52;2147:29;2166:9;2147:29;:::i;:::-;2137:39;;2226:2;2215:9;2211:18;2198:32;2273:5;2266:13;2259:21;2252:5;2249:32;2239:60;;2295:1;2292;2285:12;2239:60;2318:5;2308:15;;;1982:347;;;;;:::o;2334:186::-;2393:6;2446:2;2434:9;2425:7;2421:23;2417:32;2414:52;;;2462:1;2459;2452:12;2414:52;2485:29;2504:9;2485:29;:::i;:::-;2475:39;2334:186;-1:-1:-1;;;2334:186:351:o;2525:184::-;2577:77;2574:1;2567:88;2674:4;2671:1;2664:15;2698:4;2695:1;2688:15;2714:396;2857:2;2842:18;;2890:1;2879:13;;2869:201;;2926:77;2923:1;2916:88;3027:4;3024:1;3017:15;3055:4;3052:1;3045:15;2869:201;3079:25;;;2714:396;:::o;3346:260::-;3414:6;3422;3475:2;3463:9;3454:7;3450:23;3446:32;3443:52;;;3491:1;3488;3481:12;3443:52;3514:29;3533:9;3514:29;:::i;:::-;3504:39;;3562:38;3596:2;3585:9;3581:18;3562:38;:::i;:::-;3552:48;;3346:260;;;;;:::o;3611:437::-;3690:1;3686:12;;;;3733;;;3754:61;;3808:4;3800:6;3796:17;3786:27;;3754:61;3861:2;3853:6;3850:14;3830:18;3827:38;3824:218;;3898:77;3895:1;3888:88;3999:4;3996:1;3989:15;4027:4;4024:1;4017:15;3824:218;;3611:437;;;:::o;5100:279::-;5165:9;;;5186:10;;;5183:190;;;5229:77;5226:1;5219:88;5330:4;5327:1;5320:15;5358:4;5355:1;5348:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "authorizedAddresses(address)": "f19e207e",
    "balanceOf(address)": "70a08231",
    "burn(address,uint256)": "9dc29fac",
    "decimals()": "313ce567",
    "emergencyPause()": "51858e27",
    "governor(address)": "70ec42e8",
    "mint(address,uint256)": "40c10f19",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "setAuthorized(address,bool)": "711bf9b2",
    "setGovernor(address,bool)": "5160696c",
    "setLock()": "7aba6f37",
    "startTime()": "78e97925",
    "state()": "c19d93fb",
    "stateBeforePause()": "8d64fd60",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"governor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"authorized\",\"type\":\"bool\"}],\"name\":\"NewGovernor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum oracleDrex.State\",\"name\":\"state\",\"type\":\"uint8\"}],\"name\":\"StateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"authorized\",\"type\":\"bool\"}],\"name\":\"UpdatedAuthorization\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorizedAddresses\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyPause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"governor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_value\",\"type\":\"bool\"}],\"name\":\"setAuthorized\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governance\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_value\",\"type\":\"bool\"}],\"name\":\"setGovernor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setLock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum oracleDrex.State\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stateBeforePause\",\"outputs\":[{\"internalType\":\"enum oracleDrex.State\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"startTime\":{\"details\":\"the timestamp at which the current oracle started\"},\"state\":{\"details\":\"current state of the oracle\"},\"stateBeforePause\":{\"details\":\"state of the oracle before it was paused\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/oracleDREX.sol\":\"oracleDrex\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@ERC3643/=lib/ERC-3643/contracts/\",\":@chainlink/contracts-ccip/=src/v0.8/\",\":@chainlink/contracts/=node_modules/@chainlink/contracts/src/v0.6/\",\":@erc721a/=lib/ERC721A/contracts/\",\":@onchain-id/solidity/contracts/=lib/solidity/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/test/=lib/prb-test/src/\",\":ERC-3643/=lib/ERC-3643/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/contracts-upgradleable/=lib/openzeppelin-contracts-upgradleable/contracts/\",\":prb-test/=lib/prb-test/src/\",\":solidity/=lib/solidity/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xb44e086e941292cdc7f440de51478493894ef0b1aeccb0c4047445919f667f74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://942dad22fbdc1669f025540ba63aa3ccfad5f8458fc5d4525b31ebf272e7af45\",\"dweb:/ipfs/Qmdo4X2M82aM3AMoW2kf2jhYkSCyC4T1pHNd6obdsDFnAB\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"src/oracleDREX.sol\":{\"keccak256\":\"0xd97c788512e4d8ab1219395a2f59c4e8b860273f81df9724c82491a31c6f3855\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://21d525d90b41476ba4bb195e548fee4324e20ad7b3f21ce8dad43053f2efb6a6\",\"dweb:/ipfs/QmRthkfDfzzo4p6bgATZQ4BiSFC3NUUM7aGcrTrow65BZC\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "allowance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "needed",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC20InsufficientAllowance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "needed",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC20InsufficientBalance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "approver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidApprover"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidReceiver"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidSender"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidSpender"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OwnableInvalidOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OwnableUnauthorizedAccount"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "governor",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "authorized",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewGovernor",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "enum oracleDrex.State",
              "name": "state",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StateUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "authorized",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UpdatedAuthorization",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "authorizedAddresses",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_shares",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "emergencyPause"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "governor",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_shares",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_target",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "_value",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAuthorized"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_governance",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "_value",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setGovernor"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setLock"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "startTime",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "state",
          "outputs": [
            {
              "internalType": "enum oracleDrex.State",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stateBeforePause",
          "outputs": [
            {
              "internalType": "enum oracleDrex.State",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ERC3643/=lib/ERC-3643/contracts/",
        "@chainlink/contracts-ccip/=src/v0.8/",
        "@chainlink/contracts/=node_modules/@chainlink/contracts/src/v0.6/",
        "@erc721a/=lib/ERC721A/contracts/",
        "@onchain-id/solidity/contracts/=lib/solidity/contracts/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@prb/test/=lib/prb-test/src/",
        "ERC-3643/=lib/ERC-3643/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/contracts-upgradleable/=lib/openzeppelin-contracts-upgradleable/contracts/",
        "prb-test/=lib/prb-test/src/",
        "solidity/=lib/solidity/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10000
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/oracleDREX.sol": "oracleDrex"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b",
        "urls": [
          "bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609",
          "dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0xb44e086e941292cdc7f440de51478493894ef0b1aeccb0c4047445919f667f74",
        "urls": [
          "bzz-raw://942dad22fbdc1669f025540ba63aa3ccfad5f8458fc5d4525b31ebf272e7af45",
          "dweb:/ipfs/Qmdo4X2M82aM3AMoW2kf2jhYkSCyC4T1pHNd6obdsDFnAB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7",
        "urls": [
          "bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f",
          "dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80",
        "urls": [
          "bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229",
          "dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
        "urls": [
          "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
          "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2",
        "urls": [
          "bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850",
          "dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3",
        "urls": [
          "bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867",
          "dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY"
        ],
        "license": "MIT"
      },
      "src/oracleDREX.sol": {
        "keccak256": "0xd97c788512e4d8ab1219395a2f59c4e8b860273f81df9724c82491a31c6f3855",
        "urls": [
          "bzz-raw://21d525d90b41476ba4bb195e548fee4324e20ad7b3f21ce8dad43053f2efb6a6",
          "dweb:/ipfs/QmRthkfDfzzo4p6bgATZQ4BiSFC3NUUM7aGcrTrow65BZC"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/oracleDREX.sol",
    "id": 62907,
    "exportedSymbols": {
      "Context": [
        50236
      ],
      "ERC20": [
        48629
      ],
      "IERC20": [
        48707
      ],
      "IERC20Errors": [
        46665
      ],
      "IERC20Metadata": [
        48733
      ],
      "Initializable": [
        46276
      ],
      "Ownable": [
        46591
      ],
      "ReentrancyGuardUpgradeable": [
        46443
      ],
      "oracleDrex": [
        62906
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:2893:89",
    "nodes": [
      {
        "id": 62657,
        "nodeType": "PragmaDirective",
        "src": "39:25:89",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".21"
        ]
      },
      {
        "id": 62658,
        "nodeType": "ImportDirective",
        "src": "66:82:89",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 62907,
        "sourceUnit": 46444,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 62659,
        "nodeType": "ImportDirective",
        "src": "150:65:89",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 62907,
        "sourceUnit": 48708,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 62660,
        "nodeType": "ImportDirective",
        "src": "216:61:89",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "openzeppelin-contracts/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 62907,
        "sourceUnit": 46592,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 62661,
        "nodeType": "ImportDirective",
        "src": "278:64:89",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 62907,
        "sourceUnit": 48630,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 62906,
        "nodeType": "ContractDefinition",
        "src": "344:2587:89",
        "nodes": [
          {
            "id": 62671,
            "nodeType": "EnumDefinition",
            "src": "401:40:89",
            "nodes": [],
            "canonicalName": "oracleDrex.State",
            "members": [
              {
                "id": 62668,
                "name": "Locked",
                "nameLocation": "413:6:89",
                "nodeType": "EnumValue",
                "src": "413:6:89"
              },
              {
                "id": 62669,
                "name": "Unlocked",
                "nameLocation": "421:8:89",
                "nodeType": "EnumValue",
                "src": "421:8:89"
              },
              {
                "id": 62670,
                "name": "Emergency",
                "nameLocation": "431:9:89",
                "nodeType": "EnumValue",
                "src": "431:9:89"
              }
            ],
            "name": "State",
            "nameLocation": "406:5:89"
          },
          {
            "id": 62675,
            "nodeType": "VariableDeclaration",
            "src": "535:18:89",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 62672,
              "nodeType": "StructuredDocumentation",
              "src": "494:36:89",
              "text": "@dev current state of the oracle"
            },
            "functionSelector": "c19d93fb",
            "mutability": "mutable",
            "name": "state",
            "nameLocation": "548:5:89",
            "scope": 62906,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_State_$62671",
              "typeString": "enum oracleDrex.State"
            },
            "typeName": {
              "id": 62674,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 62673,
                "name": "State",
                "nameLocations": [
                  "535:5:89"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 62671,
                "src": "535:5:89"
              },
              "referencedDeclaration": 62671,
              "src": "535:5:89",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_State_$62671",
                "typeString": "enum oracleDrex.State"
              }
            },
            "visibility": "public"
          },
          {
            "id": 62679,
            "nodeType": "VariableDeclaration",
            "src": "614:29:89",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 62676,
              "nodeType": "StructuredDocumentation",
              "src": "560:49:89",
              "text": "@dev state of the oracle before it was paused"
            },
            "functionSelector": "8d64fd60",
            "mutability": "mutable",
            "name": "stateBeforePause",
            "nameLocation": "627:16:89",
            "scope": 62906,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_State_$62671",
              "typeString": "enum oracleDrex.State"
            },
            "typeName": {
              "id": 62678,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 62677,
                "name": "State",
                "nameLocations": [
                  "614:5:89"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 62671,
                "src": "614:5:89"
              },
              "referencedDeclaration": 62671,
              "src": "614:5:89",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_State_$62671",
                "typeString": "enum oracleDrex.State"
              }
            },
            "visibility": "public"
          },
          {
            "id": 62682,
            "nodeType": "VariableDeclaration",
            "src": "713:24:89",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 62680,
              "nodeType": "StructuredDocumentation",
              "src": "650:58:89",
              "text": "@dev the timestamp at which the current oracle started"
            },
            "functionSelector": "78e97925",
            "mutability": "mutable",
            "name": "startTime",
            "nameLocation": "728:9:89",
            "scope": 62906,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 62681,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "713:7:89",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 62686,
            "nodeType": "VariableDeclaration",
            "src": "744:51:89",
            "nodes": [],
            "constant": false,
            "functionSelector": "f19e207e",
            "mutability": "mutable",
            "name": "authorizedAddresses",
            "nameLocation": "776:19:89",
            "scope": 62906,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 62685,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 62683,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "752:7:89",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "744:24:89",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 62684,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "763:4:89",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 62690,
            "nodeType": "VariableDeclaration",
            "src": "801:40:89",
            "nodes": [],
            "constant": false,
            "functionSelector": "70ec42e8",
            "mutability": "mutable",
            "name": "governor",
            "nameLocation": "833:8:89",
            "scope": 62906,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 62689,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 62687,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "809:7:89",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "801:24:89",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 62688,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "820:4:89",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 62695,
            "nodeType": "EventDefinition",
            "src": "934:32:89",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "23ad33ab6a13a00aa7d06cd167b2abd03dec86af3cf3cc91759dcd3ae8411887",
            "name": "StateUpdated",
            "nameLocation": "940:12:89",
            "parameters": {
              "id": 62694,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62693,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "state",
                  "nameLocation": "959:5:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 62695,
                  "src": "953:11:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$62671",
                    "typeString": "enum oracleDrex.State"
                  },
                  "typeName": {
                    "id": 62692,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62691,
                      "name": "State",
                      "nameLocations": [
                        "953:5:89"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 62671,
                      "src": "953:5:89"
                    },
                    "referencedDeclaration": 62671,
                    "src": "953:5:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$62671",
                      "typeString": "enum oracleDrex.State"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "952:13:89"
            }
          },
          {
            "id": 62701,
            "nodeType": "EventDefinition",
            "src": "971:68:89",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "8d6437292b994fc738dc2a2d36adca80c5c3516dde0ca63fedcbb70101b21a31",
            "name": "UpdatedAuthorization",
            "nameLocation": "977:20:89",
            "parameters": {
              "id": 62700,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62697,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "1014:6:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 62701,
                  "src": "998:22:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62696,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "998:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62699,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "authorized",
                  "nameLocation": "1027:10:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 62701,
                  "src": "1022:15:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 62698,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1022:4:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "997:41:89"
            }
          },
          {
            "id": 62707,
            "nodeType": "EventDefinition",
            "src": "1044:61:89",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "bb35d79a0e42810e1556183f4de163f21b0dfa425332429ffc7f12d1b1be36d9",
            "name": "NewGovernor",
            "nameLocation": "1050:11:89",
            "parameters": {
              "id": 62706,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62703,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "governor",
                  "nameLocation": "1078:8:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 62707,
                  "src": "1062:24:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62702,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1062:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62705,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "authorized",
                  "nameLocation": "1093:10:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 62707,
                  "src": "1088:15:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 62704,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1088:4:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1061:43:89"
            }
          },
          {
            "id": 62725,
            "nodeType": "FunctionDefinition",
            "src": "1197:101:89",
            "nodes": [],
            "body": {
              "id": 62724,
              "nodeType": "Block",
              "src": "1232:66:89",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 62717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 62714,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62675,
                      "src": "1238:5:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$62671",
                        "typeString": "enum oracleDrex.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 62715,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62671,
                        "src": "1246:5:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$62671_$",
                          "typeString": "type(enum oracleDrex.State)"
                        }
                      },
                      "id": 62716,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1252:8:89",
                      "memberName": "Unlocked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 62669,
                      "src": "1246:14:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$62671",
                        "typeString": "enum oracleDrex.State"
                      }
                    },
                    "src": "1238:22:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$62671",
                      "typeString": "enum oracleDrex.State"
                    }
                  },
                  "id": 62718,
                  "nodeType": "ExpressionStatement",
                  "src": "1238:22:89"
                },
                {
                  "expression": {
                    "id": 62722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 62719,
                      "name": "startTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62682,
                      "src": "1266:9:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 62720,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "1278:5:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 62721,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1284:9:89",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1278:15:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1266:27:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 62723,
                  "nodeType": "ExpressionStatement",
                  "src": "1266:27:89"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "44524558",
                    "id": 62710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1216:6:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_3843e4f90f0e9fe50db6fba1ad074f6003d738efe1c32245b24db99634828a93",
                      "typeString": "literal_string \"DREX\""
                    },
                    "value": "DREX"
                  },
                  {
                    "hexValue": "7344524558",
                    "id": 62711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1224:7:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f0d5341dc5936a04ce4dc79ea90726c1057a76535de550580693b34d53ea764d",
                      "typeString": "literal_string \"sDREX\""
                    },
                    "value": "sDREX"
                  }
                ],
                "id": 62712,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 62709,
                  "name": "ERC20",
                  "nameLocations": [
                    "1210:5:89"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48629,
                  "src": "1210:5:89"
                },
                "nodeType": "ModifierInvocation",
                "src": "1210:22:89"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 62708,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1208:2:89"
            },
            "returnParameters": {
              "id": 62713,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1232:0:89"
            },
            "scope": 62906,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 62740,
            "nodeType": "FunctionDefinition",
            "src": "1306:96:89",
            "nodes": [],
            "body": {
              "id": 62739,
              "nodeType": "Block",
              "src": "1366:36:89",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 62735,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62727,
                        "src": "1382:3:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 62736,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62729,
                        "src": "1387:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 62734,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48469,
                      "src": "1376:5:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 62737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1376:19:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62738,
                  "nodeType": "ExpressionStatement",
                  "src": "1376:19:89"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 62732,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 62731,
                  "name": "onlyUnlocked",
                  "nameLocations": [
                    "1354:12:89"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 62892,
                  "src": "1354:12:89"
                },
                "nodeType": "ModifierInvocation",
                "src": "1354:12:89"
              }
            ],
            "name": "mint",
            "nameLocation": "1315:4:89",
            "parameters": {
              "id": 62730,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62727,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "1328:3:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 62740,
                  "src": "1320:11:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62726,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1320:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62729,
                  "mutability": "mutable",
                  "name": "_shares",
                  "nameLocation": "1338:7:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 62740,
                  "src": "1333:12:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62728,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1333:4:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1319:27:89"
            },
            "returnParameters": {
              "id": 62733,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1366:0:89"
            },
            "scope": 62906,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 62758,
            "nodeType": "FunctionDefinition",
            "src": "1409:125:89",
            "nodes": [],
            "body": {
              "id": 62757,
              "nodeType": "Block",
              "src": "1470:64:89",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 62749,
                      "name": "_onlyGovernor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62839,
                      "src": "1480:13:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 62750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1480:15:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62751,
                  "nodeType": "ExpressionStatement",
                  "src": "1480:15:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 62753,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62742,
                        "src": "1511:5:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 62754,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62744,
                        "src": "1518:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 62752,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48502,
                      "src": "1505:5:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 62755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1505:21:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62756,
                  "nodeType": "ExpressionStatement",
                  "src": "1505:21:89"
                }
              ]
            },
            "functionSelector": "9dc29fac",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 62747,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 62746,
                  "name": "onlyUnlocked",
                  "nameLocations": [
                    "1458:12:89"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 62892,
                  "src": "1458:12:89"
                },
                "nodeType": "ModifierInvocation",
                "src": "1458:12:89"
              }
            ],
            "name": "burn",
            "nameLocation": "1418:4:89",
            "parameters": {
              "id": 62745,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62742,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "1431:5:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 62758,
                  "src": "1423:13:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62741,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1423:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62744,
                  "mutability": "mutable",
                  "name": "_shares",
                  "nameLocation": "1442:7:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 62758,
                  "src": "1437:12:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62743,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1437:4:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1422:28:89"
            },
            "returnParameters": {
              "id": 62748,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1470:0:89"
            },
            "scope": 62906,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 62780,
            "nodeType": "FunctionDefinition",
            "src": "1542:193:89",
            "nodes": [],
            "body": {
              "id": 62779,
              "nodeType": "Block",
              "src": "1604:131:89",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 62765,
                      "name": "_onlyGovernor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62839,
                      "src": "1614:13:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 62766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1614:15:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62767,
                  "nodeType": "ExpressionStatement",
                  "src": "1614:15:89"
                },
                {
                  "expression": {
                    "id": 62772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 62768,
                        "name": "authorizedAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62686,
                        "src": "1639:19:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 62770,
                      "indexExpression": {
                        "id": 62769,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62760,
                        "src": "1659:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1639:28:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 62771,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62762,
                      "src": "1670:6:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1639:37:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 62773,
                  "nodeType": "ExpressionStatement",
                  "src": "1639:37:89"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 62775,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62760,
                        "src": "1712:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 62776,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62762,
                        "src": "1721:6:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 62774,
                      "name": "UpdatedAuthorization",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62701,
                      "src": "1691:20:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 62777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1691:37:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62778,
                  "nodeType": "EmitStatement",
                  "src": "1686:42:89"
                }
              ]
            },
            "functionSelector": "711bf9b2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAuthorized",
            "nameLocation": "1551:13:89",
            "parameters": {
              "id": 62763,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62760,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "1573:7:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 62780,
                  "src": "1565:15:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62759,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1565:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62762,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "1587:6:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 62780,
                  "src": "1582:11:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 62761,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1582:4:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1564:30:89"
            },
            "returnParameters": {
              "id": 62764,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1604:0:89"
            },
            "scope": 62906,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62804,
            "nodeType": "FunctionDefinition",
            "src": "1741:192:89",
            "nodes": [],
            "body": {
              "id": 62803,
              "nodeType": "Block",
              "src": "1814:119:89",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 62789,
                      "name": "_onlyGovernor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62839,
                      "src": "1824:13:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 62790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1824:15:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62791,
                  "nodeType": "ExpressionStatement",
                  "src": "1824:15:89"
                },
                {
                  "expression": {
                    "id": 62796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 62792,
                        "name": "governor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62690,
                        "src": "1849:8:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 62794,
                      "indexExpression": {
                        "id": 62793,
                        "name": "_governance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62782,
                        "src": "1858:11:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1849:21:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 62795,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62784,
                      "src": "1873:6:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1849:30:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 62797,
                  "nodeType": "ExpressionStatement",
                  "src": "1849:30:89"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 62799,
                        "name": "_governance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62782,
                        "src": "1906:11:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 62800,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62784,
                        "src": "1919:6:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 62798,
                      "name": "NewGovernor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62707,
                      "src": "1894:11:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 62801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1894:32:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62802,
                  "nodeType": "EmitStatement",
                  "src": "1889:37:89"
                }
              ]
            },
            "functionSelector": "5160696c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 62787,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 62786,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1805:9:89"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46502,
                  "src": "1805:9:89"
                },
                "nodeType": "ModifierInvocation",
                "src": "1805:9:89"
              }
            ],
            "name": "setGovernor",
            "nameLocation": "1750:11:89",
            "parameters": {
              "id": 62785,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62782,
                  "mutability": "mutable",
                  "name": "_governance",
                  "nameLocation": "1770:11:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 62804,
                  "src": "1762:19:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62781,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1762:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62784,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "1788:6:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 62804,
                  "src": "1783:11:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 62783,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1783:4:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1761:34:89"
            },
            "returnParameters": {
              "id": 62788,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1814:0:89"
            },
            "scope": 62906,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62825,
            "nodeType": "FunctionDefinition",
            "src": "1941:153:89",
            "nodes": [],
            "body": {
              "id": 62824,
              "nodeType": "Block",
              "src": "1982:112:89",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 62820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 62813,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 62808,
                              "name": "authorizedAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62686,
                              "src": "2000:19:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 62811,
                            "indexExpression": {
                              "expression": {
                                "id": 62809,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2020:3:89",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 62810,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2024:6:89",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2020:10:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2000:31:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "74727565",
                            "id": 62812,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2035:4:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2000:39:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 62819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 62814,
                              "name": "governor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62690,
                              "src": "2043:8:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 62817,
                            "indexExpression": {
                              "expression": {
                                "id": 62815,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2052:3:89",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 62816,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2056:6:89",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2052:10:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2043:20:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "74727565",
                            "id": 62818,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2067:4:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2043:28:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2000:71:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "21617574686f72697a6564",
                        "id": 62821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2073:13:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6",
                          "typeString": "literal_string \"!authorized\""
                        },
                        "value": "!authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6",
                          "typeString": "literal_string \"!authorized\""
                        }
                      ],
                      "id": 62807,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1992:7:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 62822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1992:95:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62823,
                  "nodeType": "ExpressionStatement",
                  "src": "1992:95:89"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_onlyAuthorized",
            "nameLocation": "1950:15:89",
            "parameters": {
              "id": 62805,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1965:2:89"
            },
            "returnParameters": {
              "id": 62806,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1982:0:89"
            },
            "scope": 62906,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 62839,
            "nodeType": "FunctionDefinition",
            "src": "2100:106:89",
            "nodes": [],
            "body": {
              "id": 62838,
              "nodeType": "Block",
              "src": "2139:67:89",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 62834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 62829,
                            "name": "governor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62690,
                            "src": "2157:8:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 62832,
                          "indexExpression": {
                            "expression": {
                              "id": 62830,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2166:3:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 62831,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2170:6:89",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2166:10:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2157:20:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 62833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2181:4:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2157:28:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "21676f7665726e6f72",
                        "id": 62835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2187:11:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9bb4732dc208db6a5918ab492d66a1700506d60213db770bb74d0543cdf611a8",
                          "typeString": "literal_string \"!governor\""
                        },
                        "value": "!governor"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9bb4732dc208db6a5918ab492d66a1700506d60213db770bb74d0543cdf611a8",
                          "typeString": "literal_string \"!governor\""
                        }
                      ],
                      "id": 62828,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2149:7:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 62836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2149:50:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62837,
                  "nodeType": "ExpressionStatement",
                  "src": "2149:50:89"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_onlyGovernor",
            "nameLocation": "2109:13:89",
            "parameters": {
              "id": 62826,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2122:2:89"
            },
            "returnParameters": {
              "id": 62827,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2139:0:89"
            },
            "scope": 62906,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 62859,
            "nodeType": "FunctionDefinition",
            "src": "2212:149:89",
            "nodes": [],
            "body": {
              "id": 62858,
              "nodeType": "Block",
              "src": "2257:104:89",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 62846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 62844,
                      "name": "stateBeforePause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62679,
                      "src": "2263:16:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$62671",
                        "typeString": "enum oracleDrex.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 62845,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62675,
                      "src": "2282:5:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$62671",
                        "typeString": "enum oracleDrex.State"
                      }
                    },
                    "src": "2263:24:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$62671",
                      "typeString": "enum oracleDrex.State"
                    }
                  },
                  "id": 62847,
                  "nodeType": "ExpressionStatement",
                  "src": "2263:24:89"
                },
                {
                  "expression": {
                    "id": 62851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 62848,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62675,
                      "src": "2293:5:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$62671",
                        "typeString": "enum oracleDrex.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 62849,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62671,
                        "src": "2301:5:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$62671_$",
                          "typeString": "type(enum oracleDrex.State)"
                        }
                      },
                      "id": 62850,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2307:9:89",
                      "memberName": "Emergency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 62670,
                      "src": "2301:15:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$62671",
                        "typeString": "enum oracleDrex.State"
                      }
                    },
                    "src": "2293:23:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$62671",
                      "typeString": "enum oracleDrex.State"
                    }
                  },
                  "id": 62852,
                  "nodeType": "ExpressionStatement",
                  "src": "2293:23:89"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 62854,
                          "name": "State",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62671,
                          "src": "2340:5:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_State_$62671_$",
                            "typeString": "type(enum oracleDrex.State)"
                          }
                        },
                        "id": 62855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2346:9:89",
                        "memberName": "Emergency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 62670,
                        "src": "2340:15:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$62671",
                          "typeString": "enum oracleDrex.State"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_State_$62671",
                          "typeString": "enum oracleDrex.State"
                        }
                      ],
                      "id": 62853,
                      "name": "StateUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62695,
                      "src": "2327:12:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_enum$_State_$62671_$returns$__$",
                        "typeString": "function (enum oracleDrex.State)"
                      }
                    },
                    "id": 62856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2327:29:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62857,
                  "nodeType": "EmitStatement",
                  "src": "2322:34:89"
                }
              ]
            },
            "functionSelector": "51858e27",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 62842,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 62841,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2247:9:89"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46502,
                  "src": "2247:9:89"
                },
                "nodeType": "ModifierInvocation",
                "src": "2247:9:89"
              }
            ],
            "name": "emergencyPause",
            "nameLocation": "2221:14:89",
            "parameters": {
              "id": 62840,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2235:2:89"
            },
            "returnParameters": {
              "id": 62843,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2257:0:89"
            },
            "scope": 62906,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62879,
            "nodeType": "FunctionDefinition",
            "src": "2365:135:89",
            "nodes": [],
            "body": {
              "id": 62878,
              "nodeType": "Block",
              "src": "2402:98:89",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 62866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 62864,
                      "name": "stateBeforePause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62679,
                      "src": "2408:16:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$62671",
                        "typeString": "enum oracleDrex.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 62865,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62675,
                      "src": "2427:5:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$62671",
                        "typeString": "enum oracleDrex.State"
                      }
                    },
                    "src": "2408:24:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$62671",
                      "typeString": "enum oracleDrex.State"
                    }
                  },
                  "id": 62867,
                  "nodeType": "ExpressionStatement",
                  "src": "2408:24:89"
                },
                {
                  "expression": {
                    "id": 62871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 62868,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62675,
                      "src": "2438:5:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$62671",
                        "typeString": "enum oracleDrex.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 62869,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62671,
                        "src": "2446:5:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$62671_$",
                          "typeString": "type(enum oracleDrex.State)"
                        }
                      },
                      "id": 62870,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2452:6:89",
                      "memberName": "Locked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 62668,
                      "src": "2446:12:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$62671",
                        "typeString": "enum oracleDrex.State"
                      }
                    },
                    "src": "2438:20:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$62671",
                      "typeString": "enum oracleDrex.State"
                    }
                  },
                  "id": 62872,
                  "nodeType": "ExpressionStatement",
                  "src": "2438:20:89"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 62874,
                          "name": "State",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62671,
                          "src": "2482:5:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_State_$62671_$",
                            "typeString": "type(enum oracleDrex.State)"
                          }
                        },
                        "id": 62875,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2488:6:89",
                        "memberName": "Locked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 62668,
                        "src": "2482:12:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$62671",
                          "typeString": "enum oracleDrex.State"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_State_$62671",
                          "typeString": "enum oracleDrex.State"
                        }
                      ],
                      "id": 62873,
                      "name": "StateUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62695,
                      "src": "2469:12:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_enum$_State_$62671_$returns$__$",
                        "typeString": "function (enum oracleDrex.State)"
                      }
                    },
                    "id": 62876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2469:26:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62877,
                  "nodeType": "EmitStatement",
                  "src": "2464:31:89"
                }
              ]
            },
            "functionSelector": "7aba6f37",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 62862,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 62861,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2393:9:89"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46502,
                  "src": "2393:9:89"
                },
                "nodeType": "ModifierInvocation",
                "src": "2393:9:89"
              }
            ],
            "name": "setLock",
            "nameLocation": "2374:7:89",
            "parameters": {
              "id": 62860,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2381:2:89"
            },
            "returnParameters": {
              "id": 62863,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2402:0:89"
            },
            "scope": 62906,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62892,
            "nodeType": "ModifierDefinition",
            "src": "2667:95:89",
            "nodes": [],
            "body": {
              "id": 62891,
              "nodeType": "Block",
              "src": "2689:73:89",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$62671",
                          "typeString": "enum oracleDrex.State"
                        },
                        "id": 62886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 62883,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62675,
                          "src": "2707:5:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$62671",
                            "typeString": "enum oracleDrex.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 62884,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62671,
                            "src": "2716:5:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$62671_$",
                              "typeString": "type(enum oracleDrex.State)"
                            }
                          },
                          "id": 62885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2722:8:89",
                          "memberName": "Unlocked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62669,
                          "src": "2716:14:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$62671",
                            "typeString": "enum oracleDrex.State"
                          }
                        },
                        "src": "2707:23:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "21556e6c6f636b6564",
                        "id": 62887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2732:11:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e998d068ae4d515be58ee96d04bc8ad37d9f910378f3afeb52568ffdc3cf0064",
                          "typeString": "literal_string \"!Unlocked\""
                        },
                        "value": "!Unlocked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e998d068ae4d515be58ee96d04bc8ad37d9f910378f3afeb52568ffdc3cf0064",
                          "typeString": "literal_string \"!Unlocked\""
                        }
                      ],
                      "id": 62882,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2699:7:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 62888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2699:45:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62889,
                  "nodeType": "ExpressionStatement",
                  "src": "2699:45:89"
                },
                {
                  "id": 62890,
                  "nodeType": "PlaceholderStatement",
                  "src": "2754:1:89"
                }
              ]
            },
            "documentation": {
              "id": 62880,
              "nodeType": "StructuredDocumentation",
              "src": "2595:67:89",
              "text": " @dev can only be executed in the unlocked state."
            },
            "name": "onlyUnlocked",
            "nameLocation": "2676:12:89",
            "parameters": {
              "id": 62881,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2689:0:89"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 62905,
            "nodeType": "ModifierDefinition",
            "src": "2838:89:89",
            "nodes": [],
            "body": {
              "id": 62904,
              "nodeType": "Block",
              "src": "2858:69:89",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$62671",
                          "typeString": "enum oracleDrex.State"
                        },
                        "id": 62899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 62896,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62675,
                          "src": "2876:5:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$62671",
                            "typeString": "enum oracleDrex.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 62897,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62671,
                            "src": "2885:5:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$62671_$",
                              "typeString": "type(enum oracleDrex.State)"
                            }
                          },
                          "id": 62898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2891:6:89",
                          "memberName": "Locked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62668,
                          "src": "2885:12:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$62671",
                            "typeString": "enum oracleDrex.State"
                          }
                        },
                        "src": "2876:21:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "214c6f636b6564",
                        "id": 62900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2899:9:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae6d5628dfe5ee3da9b76edb404e76e2db9203caddcfc195acb99ac023f8e877",
                          "typeString": "literal_string \"!Locked\""
                        },
                        "value": "!Locked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae6d5628dfe5ee3da9b76edb404e76e2db9203caddcfc195acb99ac023f8e877",
                          "typeString": "literal_string \"!Locked\""
                        }
                      ],
                      "id": 62895,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2868:7:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 62901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2868:41:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62902,
                  "nodeType": "ExpressionStatement",
                  "src": "2868:41:89"
                },
                {
                  "id": 62903,
                  "nodeType": "PlaceholderStatement",
                  "src": "2919:1:89"
                }
              ]
            },
            "documentation": {
              "id": 62893,
              "nodeType": "StructuredDocumentation",
              "src": "2768:65:89",
              "text": " @dev can only be executed in the locked state."
            },
            "name": "onlyLocked",
            "nameLocation": "2847:10:89",
            "parameters": {
              "id": 62894,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2858:0:89"
            },
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 62662,
              "name": "ERC20",
              "nameLocations": [
                "367:5:89"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 48629,
              "src": "367:5:89"
            },
            "id": 62663,
            "nodeType": "InheritanceSpecifier",
            "src": "367:5:89"
          },
          {
            "arguments": [
              {
                "expression": {
                  "id": 62665,
                  "name": "msg",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": -15,
                  "src": "382:3:89",
                  "typeDescriptions": {
                    "typeIdentifier": "t_magic_message",
                    "typeString": "msg"
                  }
                },
                "id": 62666,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberLocation": "386:6:89",
                "memberName": "sender",
                "nodeType": "MemberAccess",
                "src": "382:10:89",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            ],
            "baseName": {
              "id": 62664,
              "name": "Ownable",
              "nameLocations": [
                "374:7:89"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 46591,
              "src": "374:7:89"
            },
            "id": 62667,
            "nodeType": "InheritanceSpecifier",
            "src": "374:19:89"
          }
        ],
        "canonicalName": "oracleDrex",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          62906,
          46591,
          48629,
          46665,
          48733,
          48707,
          50236
        ],
        "name": "oracleDrex",
        "nameLocation": "353:10:89",
        "scope": 62907,
        "usedErrors": [
          46457,
          46462,
          46635,
          46640,
          46645,
          46654,
          46659,
          46664
        ],
        "usedEvents": [
          46468,
          48641,
          48650,
          62695,
          62701,
          62707
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 89
}
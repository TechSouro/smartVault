{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "router",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "router",
          "type": "address"
        }
      ],
      "name": "InvalidRouter",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "MintCallSuccessfull",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "messageId",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "sourceChainSelector",
              "type": "uint64"
            },
            {
              "internalType": "bytes",
              "name": "sender",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Client.EVMTokenAmount[]",
              "name": "destTokenAmounts",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Client.Any2EVMMessage",
          "name": "message",
          "type": "tuple"
        }
      ],
      "name": "ccipReceive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRouter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a060405234801561001057600080fd5b5060405161073838038061073883398101604081905261002f916100a6565b816001600160a01b03811661005e576040516335fdcccd60e21b81526000600482015260240160405180910390fd5b6001600160a01b03908116608052600080546001600160a01b03191692909116919091179055506100d9565b80516001600160a01b03811681146100a157600080fd5b919050565b600080604083850312156100b957600080fd5b6100c28361008a565b91506100d06020840161008a565b90509250929050565b60805161063e6100fa60003960008181609d0152610178015261063e6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a71461004657806385572ffb1461006e578063b0f479a114610083575b600080fd5b610059610054366004610295565b6100c7565b60405190151581526020015b60405180910390f35b61008161007c3660046102de565b610160565b005b60405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152602001610065565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f85572ffb00000000000000000000000000000000000000000000000000000000148061015a57507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146101d5576040517fd7f7333400000000000000000000000000000000000000000000000000000000815233600482015260240160405180910390fd5b6101e66101e182610555565b6101e9565b50565b60008054606083015160405173ffffffffffffffffffffffffffffffffffffffff909216916102189190610602565b6000604051808303816000865af19150503d8060008114610255576040519150601f19603f3d011682016040523d82523d6000602084013e61025a565b606091505b505090508061026857600080fd5b6040517fa8bcb6a278444293ea5c0bce4a4734a060a5f557bb999d8a57c4f69e96f1fe8890600090a15050565b6000602082840312156102a757600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146102d757600080fd5b9392505050565b6000602082840312156102f057600080fd5b813567ffffffffffffffff81111561030757600080fd5b820160a081850312156102d757600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561036b5761036b610319565b60405290565b60405160a0810167ffffffffffffffff8111828210171561036b5761036b610319565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156103db576103db610319565b604052919050565b803567ffffffffffffffff811681146103fb57600080fd5b919050565b600082601f83011261041157600080fd5b813567ffffffffffffffff81111561042b5761042b610319565b61045c60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601610394565b81815284602083860101111561047157600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f83011261049f57600080fd5b8135602067ffffffffffffffff8211156104bb576104bb610319565b6104c9818360051b01610394565b82815260069290921b840181019181810190868411156104e857600080fd5b8286015b8481101561054a57604081890312156105055760008081fd5b61050d610348565b813573ffffffffffffffffffffffffffffffffffffffff811681146105325760008081fd5b815281850135858201528352918301916040016104ec565b509695505050505050565b600060a0823603121561056757600080fd5b61056f610371565b8235815261057f602084016103e3565b6020820152604083013567ffffffffffffffff8082111561059f57600080fd5b6105ab36838701610400565b604084015260608501359150808211156105c457600080fd5b6105d036838701610400565b606084015260808501359150808211156105e957600080fd5b506105f63682860161048e565b60808301525092915050565b6000825160005b818110156106235760208186018101518583015201610609565b50600092019182525091905056fea164736f6c6343000815000a",
    "sourceMap": "454:453:64:-:0;;;561:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;622:6;-1:-1:-1;;;;;538:20:70;;534:58;;567:25;;-1:-1:-1;;;567:25:70;;589:1;567:25;;;640:51:83;613:18;;567:25:70;;;;;;;534:58;-1:-1:-1;;;;;598:17:70;;;;;640:3:64::1;:31:::0;;-1:-1:-1;;;;;;640:31:64::1;::::0;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;454:453:64;;14:177:83;93:13;;-1:-1:-1;;;;;135:31:83;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;494:203::-;454:453:64;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a71461004657806385572ffb1461006e578063b0f479a114610083575b600080fd5b610059610054366004610295565b6100c7565b60405190151581526020015b60405180910390f35b61008161007c3660046102de565b610160565b005b60405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152602001610065565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f85572ffb00000000000000000000000000000000000000000000000000000000148061015a57507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146101d5576040517fd7f7333400000000000000000000000000000000000000000000000000000000815233600482015260240160405180910390fd5b6101e66101e182610555565b6101e9565b50565b60008054606083015160405173ffffffffffffffffffffffffffffffffffffffff909216916102189190610602565b6000604051808303816000865af19150503d8060008114610255576040519150601f19603f3d011682016040523d82523d6000602084013e61025a565b606091505b505090508061026857600080fd5b6040517fa8bcb6a278444293ea5c0bce4a4734a060a5f557bb999d8a57c4f69e96f1fe8890600090a15050565b6000602082840312156102a757600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146102d757600080fd5b9392505050565b6000602082840312156102f057600080fd5b813567ffffffffffffffff81111561030757600080fd5b820160a081850312156102d757600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561036b5761036b610319565b60405290565b60405160a0810167ffffffffffffffff8111828210171561036b5761036b610319565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156103db576103db610319565b604052919050565b803567ffffffffffffffff811681146103fb57600080fd5b919050565b600082601f83011261041157600080fd5b813567ffffffffffffffff81111561042b5761042b610319565b61045c60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601610394565b81815284602083860101111561047157600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f83011261049f57600080fd5b8135602067ffffffffffffffff8211156104bb576104bb610319565b6104c9818360051b01610394565b82815260069290921b840181019181810190868411156104e857600080fd5b8286015b8481101561054a57604081890312156105055760008081fd5b61050d610348565b813573ffffffffffffffffffffffffffffffffffffffff811681146105325760008081fd5b815281850135858201528352918301916040016104ec565b509695505050505050565b600060a0823603121561056757600080fd5b61056f610371565b8235815261057f602084016103e3565b6020820152604083013567ffffffffffffffff8082111561059f57600080fd5b6105ab36838701610400565b604084015260608501359150808211156105c457600080fd5b6105d036838701610400565b606084015260808501359150808211156105e957600080fd5b506105f63682860161048e565b60808301525092915050565b6000825160005b818110156106235760208186018101518583015201610609565b50600092019182525091905056fea164736f6c6343000815000a",
    "sourceMap": "454:453:64:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1397:209:70;;;;;;:::i;:::-;;:::i;:::-;;;516:14:83;;509:22;491:41;;479:2;464:18;1397:209:70;;;;;;;;1652:130;;;;;;:::i;:::-;;:::i;:::-;;2194:86;;;1119:42:83;2266:8:70;1107:55:83;1089:74;;1077:2;1062:18;2194:86:70;943:226:83;1397:209:70;1482:4;1501:56;;;1516:41;1501:56;;:100;;-1:-1:-1;1561:40:70;;;1576:25;1561:40;1501:100;1494:107;1397:209;-1:-1:-1;;1397:209:70:o;1652:130::-;2412:10;:31;2434:8;2412:31;;2408:69;;2452:25;;;;;2466:10;2452:25;;;1089:74:83;1062:18;;2452:25:70;;;;;;;2408:69;1756:21:::1;;1769:7:::0;1756:21:::1;:::i;:::-;:12;:21::i;:::-;1652:130:::0;:::o;684:221:64:-;787:12;813:3;;823:12;;;;805:31;;813:3;;;;;805:31;;823:12;805:31;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;786:50;;;854:7;846:16;;;;;;877:21;;;;;;;776:129;684:221;:::o;14:332:83:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:66;223:5;219:78;212:5;209:89;199:117;;312:1;309;302:12;199:117;335:5;14:332;-1:-1:-1;;;14:332:83:o;543:395::-;637:6;690:2;678:9;669:7;665:23;661:32;658:52;;;706:1;703;696:12;658:52;746:9;733:23;779:18;771:6;768:30;765:50;;;811:1;808;801:12;765:50;834:22;;890:3;872:16;;;868:26;865:46;;;907:1;904;897:12;1174:184;1226:77;1223:1;1216:88;1323:4;1320:1;1313:15;1347:4;1344:1;1337:15;1363:256;1434:4;1428:11;;;1466:17;;1513:18;1498:34;;1534:22;;;1495:62;1492:88;;;1560:18;;:::i;:::-;1596:4;1589:24;1363:256;:::o;1624:252::-;1695:2;1689:9;1737:4;1725:17;;1772:18;1757:34;;1793:22;;;1754:62;1751:88;;;1819:18;;:::i;1881:334::-;1952:2;1946:9;2008:2;1998:13;;2013:66;1994:86;1982:99;;2111:18;2096:34;;2132:22;;;2093:62;2090:88;;;2158:18;;:::i;:::-;2194:2;2187:22;1881:334;;-1:-1:-1;1881:334:83:o;2220:171::-;2287:20;;2347:18;2336:30;;2326:41;;2316:69;;2381:1;2378;2371:12;2316:69;2220:171;;;:::o;2396:589::-;2438:5;2491:3;2484:4;2476:6;2472:17;2468:27;2458:55;;2509:1;2506;2499:12;2458:55;2545:6;2532:20;2571:18;2567:2;2564:26;2561:52;;;2593:18;;:::i;:::-;2637:114;2745:4;2676:66;2669:4;2665:2;2661:13;2657:86;2653:97;2637:114;:::i;:::-;2776:2;2767:7;2760:19;2822:3;2815:4;2810:2;2802:6;2798:15;2794:26;2791:35;2788:55;;;2839:1;2836;2829:12;2788:55;2904:2;2897:4;2889:6;2885:17;2878:4;2869:7;2865:18;2852:55;2952:1;2927:16;;;2945:4;2923:27;2916:38;;;;2931:7;2396:589;-1:-1:-1;;;2396:589:83:o;2990:1200::-;3058:5;3111:3;3104:4;3096:6;3092:17;3088:27;3078:55;;3129:1;3126;3119:12;3078:55;3165:6;3152:20;3191:4;3214:18;3210:2;3207:26;3204:52;;;3236:18;;:::i;:::-;3276:36;3308:2;3303;3300:1;3296:10;3292:19;3276:36;:::i;:::-;3346:15;;;3432:1;3428:10;;;;3416:23;;3412:32;;;3377:12;;;;3456:15;;;3453:35;;;3484:1;3481;3474:12;3453:35;3520:2;3512:6;3508:15;3532:629;3548:6;3543:3;3540:15;3532:629;;;3626:4;3620:3;3615;3611:13;3607:24;3604:114;;;3672:1;3701:2;3697;3690:14;3604:114;3744:21;;:::i;:::-;3806:3;3793:17;3858:42;3849:7;3845:56;3836:7;3833:69;3823:167;;3944:1;3973:2;3969;3962:14;3823:167;4003:22;;4074:12;;;4061:26;4045:14;;;4038:50;4101:18;;4139:12;;;;3574:4;3565:14;3532:629;;;-1:-1:-1;4179:5:83;2990:1200;-1:-1:-1;;;;;;2990:1200:83:o;4195:1012::-;4313:9;4372:4;4364:5;4348:14;4344:26;4340:37;4337:57;;;4390:1;4387;4380:12;4337:57;4418:21;;:::i;:::-;4477:5;4464:19;4455:7;4448:36;4518:33;4547:2;4540:5;4536:14;4518:33;:::i;:::-;4513:2;4504:7;4500:16;4493:59;4599:2;4592:5;4588:14;4575:28;4622:18;4663:2;4655:6;4652:14;4649:34;;;4679:1;4676;4669:12;4649:34;4717:52;4754:14;4745:6;4738:5;4734:18;4717:52;:::i;:::-;4712:2;4703:7;4699:16;4692:78;4819:2;4812:5;4808:14;4795:28;4779:44;;4848:2;4838:8;4835:16;4832:36;;;4864:1;4861;4854:12;4832:36;4902:54;4941:14;4930:8;4923:5;4919:20;4902:54;:::i;:::-;4897:2;4888:7;4884:16;4877:80;5006:3;4999:5;4995:15;4982:29;4966:45;;5036:2;5026:8;5023:16;5020:36;;;5052:1;5049;5042:12;5020:36;;5091:80;5156:14;5145:8;5138:5;5134:20;5091:80;:::i;:::-;5085:3;5072:17;;5065:107;-1:-1:-1;5076:7:83;4195:1012;-1:-1:-1;;4195:1012:83:o;5212:412::-;5341:3;5379:6;5373:13;5404:1;5414:129;5428:6;5425:1;5422:13;5414:129;;;5526:4;5510:14;;;5506:25;;5500:32;5487:11;;;5480:53;5443:12;5414:129;;;-1:-1:-1;5598:1:83;5562:16;;5587:13;;;-1:-1:-1;5562:16:83;5212:412;-1:-1:-1;5212:412:83:o",
    "linkReferences": {},
    "immutableReferences": {
      "55975": [
        {
          "start": 157,
          "length": 32
        },
        {
          "start": 376,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))": "85572ffb",
    "getRouter()": "b0f479a1",
    "supportsInterface(bytes4)": "01ffc9a7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"InvalidRouter\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MintCallSuccessfull\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sourceChainSelector\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"sender\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Client.EVMTokenAmount[]\",\"name\":\"destTokenAmounts\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Client.Any2EVMMessage\",\"name\":\"message\",\"type\":\"tuple\"}],\"name\":\"ccipReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))\":{\"details\":\"Note ensure you check the msg.sender is the OffRampRouter\",\"params\":{\"message\":\"CCIP Message\"}},\"getRouter()\":{\"returns\":{\"_0\":\"i_router address\"}},\"supportsInterface(bytes4)\":{\"details\":\"Should indicate whether the contract implements IAny2EVMMessageReceiver e.g. return interfaceId == type(IAny2EVMMessageReceiver).interfaceId || interfaceId == type(IERC165).interfaceId This allows CCIP to check if ccipReceive is available before calling it. If this returns false or reverts, only tokens are transferred to the receiver. If this returns true, tokens are transferred and ccipReceive is called atomically. Additionally, if the receiver address does not have code associated with it at the time of execution (EXTCODESIZE returns 0), only tokens will be transferred.\",\"params\":{\"interfaceId\":\"The interfaceId to check\"},\"returns\":{\"_0\":\"true if the interfaceId is supported\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))\":{\"notice\":\"Called by the Router to deliver a message. If this reverts, any token transfers also revert. The message will move to a FAILED state and become available for manual execution.\"},\"getRouter()\":{\"notice\":\"Return the current router\"},\"supportsInterface(bytes4)\":{\"notice\":\"IERC165 supports an interfaceId\"}},\"notice\":\"THIS IS AN EXAMPLE CONTRACT THAT USES HARDCODED VALUES FOR CLARITY. THIS IS AN EXAMPLE CONTRACT THAT USES UN-AUDITED CODE. DO NOT USE THIS CODE IN PRODUCTION.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/cross-chain-nft-minter/DestinationMinterTesouro.sol\":\"DestinationMinter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@ERC3643/=lib/ERC-3643/contracts/\",\":@chainlink/contracts-ccip/=src/v0.8/\",\":@chainlink/contracts/=node_modules/@chainlink/contracts/src/v0.6/\",\":@erc721a/=lib/ERC721A/contracts/\",\":@onchain-id/solidity/contracts/=lib/solidity/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/test/=lib/prb-test/src/\",\":ERC-3643/=lib/ERC-3643/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/contracts-upgradleable/=lib/openzeppelin-contracts-upgradleable/contracts/\",\":prb-test/=lib/prb-test/src/\",\":solidity/=lib/solidity/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/ERC721A/contracts/ERC721A.sol\":{\"keccak256\":\"0x369b8d1a7692f34db8541ce56a482f1f699042ee7596e1d9d30bb88bd6a8aef3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5e30520e10d2689461cd47fd4f07bef947a48e1563ebbde26584bd8f847e8fe\",\"dweb:/ipfs/QmcY2tk55VufuhnCmVmqjhpJjyfiquKrwNfEHu4rg6WoLn\"]},\"lib/ERC721A/contracts/IERC721A.sol\":{\"keccak256\":\"0xa31dfe2635a25f899e279befef27ffcc02fd16e636c58d4c251a303f2355f7ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://284680b4fdbf52b2aa888f7988447568ee82c5d1585c1535d985ff25153bc3b9\",\"dweb:/ipfs/QmTWfDch6XJMwVLA4CY2pMedzrLWoN8ZdgYZ1UbRzesysz\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"src/TesouroDireto.sol\":{\"keccak256\":\"0x5d6b0ef9782e0b8a547deb4048cd5cd0f41996c0f6847e0f742bb5423ef80b1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5445bce69313d14530fd70baeeb9880c20bced6a2597acc9dd24db214cfbfa50\",\"dweb:/ipfs/QmURfQ98AyQLR8jLA1tcdLXw1nbVeJt5gQ9nNTd1D2cGAP\"]},\"src/cross-chain-nft-minter/DestinationMinterTesouro.sol\":{\"keccak256\":\"0xf041d12ab097f62759b0de08e19b7b0175086db1325b43cc070e8d5185119387\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77159db7b66ee9e9c1cf47d8c0fd2e11b3ee2fc400fe0ad724374b5b5e536179\",\"dweb:/ipfs/QmejCDnZuL2j2TxCWbJP37fjADhuxtXAVkbWbegkGqyxVC\"]},\"src/v0.8/ccip/applications/CCIPReceiver.sol\":{\"keccak256\":\"0xd59dbf083bfad8fe95248cac59822ade0bc7d70e50ab05e366cb35a2b2ea99f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20205c17fa785b37acf0547c656ed60e09e806df7472e0f608129daa028f30f7\",\"dweb:/ipfs/QmcAUurGrEdn5pE66sVQek4M7EiGkdoKt38qThFpxcpGLB\"]},\"src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol\":{\"keccak256\":\"0xd2a05a4f58a453cbf8cfa6aa78f58cb8e42091b3a025f711a0aa51f584e16b48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3bb4ca50612b0150a29b9ea7c82f6228914ff54716584541bad5c0259e8fa33\",\"dweb:/ipfs/QmTnqhNtBD9bUmqVaR4YHkWrBUdSGHV3DXAgrTM193PGkH\"]},\"src/v0.8/ccip/libraries/Client.sol\":{\"keccak256\":\"0x8af3ac1085c87342373772fb1a0107c7b90258e6bfed318ab2a601a14477e679\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://14395fefc8310c9a355262359c8f51036f83c004982fb600164c2a007629f81e\",\"dweb:/ipfs/QmeCLr8a5bDVyLQm8v947ULgV4CZmUeQPjVyWixzieBD5o\"]},\"src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa36a31b4bb17fad88d023474893b3b895fa421650543b1ce5aefc78efbd43244\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f235b9175d95111f301d729566e214c32559e55a2b0579c947484748e20679d\",\"dweb:/ipfs/QmSsNBuPejy1wNe2u3JSt2p9wFhrjvBjFrnAaNe1nDNkEA\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "router",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "nftAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "router",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "InvalidRouter"
        },
        {
          "inputs": [],
          "type": "event",
          "name": "MintCallSuccessfull",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct Client.Any2EVMMessage",
              "name": "message",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "messageId",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "sourceChainSelector",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes",
                  "name": "sender",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "struct Client.EVMTokenAmount[]",
                  "name": "destTokenAmounts",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "ccipReceive"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRouter",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))": {
            "details": "Note ensure you check the msg.sender is the OffRampRouter",
            "params": {
              "message": "CCIP Message"
            }
          },
          "getRouter()": {
            "returns": {
              "_0": "i_router address"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "Should indicate whether the contract implements IAny2EVMMessageReceiver e.g. return interfaceId == type(IAny2EVMMessageReceiver).interfaceId || interfaceId == type(IERC165).interfaceId This allows CCIP to check if ccipReceive is available before calling it. If this returns false or reverts, only tokens are transferred to the receiver. If this returns true, tokens are transferred and ccipReceive is called atomically. Additionally, if the receiver address does not have code associated with it at the time of execution (EXTCODESIZE returns 0), only tokens will be transferred.",
            "params": {
              "interfaceId": "The interfaceId to check"
            },
            "returns": {
              "_0": "true if the interfaceId is supported"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))": {
            "notice": "Called by the Router to deliver a message. If this reverts, any token transfers also revert. The message will move to a FAILED state and become available for manual execution."
          },
          "getRouter()": {
            "notice": "Return the current router"
          },
          "supportsInterface(bytes4)": {
            "notice": "IERC165 supports an interfaceId"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ERC3643/=lib/ERC-3643/contracts/",
        "@chainlink/contracts-ccip/=src/v0.8/",
        "@chainlink/contracts/=node_modules/@chainlink/contracts/src/v0.6/",
        "@erc721a/=lib/ERC721A/contracts/",
        "@onchain-id/solidity/contracts/=lib/solidity/contracts/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@prb/test/=lib/prb-test/src/",
        "ERC-3643/=lib/ERC-3643/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/contracts-upgradleable/=lib/openzeppelin-contracts-upgradleable/contracts/",
        "prb-test/=lib/prb-test/src/",
        "solidity/=lib/solidity/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10000
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/cross-chain-nft-minter/DestinationMinterTesouro.sol": "DestinationMinter"
      },
      "libraries": {}
    },
    "sources": {
      "lib/ERC721A/contracts/ERC721A.sol": {
        "keccak256": "0x369b8d1a7692f34db8541ce56a482f1f699042ee7596e1d9d30bb88bd6a8aef3",
        "urls": [
          "bzz-raw://b5e30520e10d2689461cd47fd4f07bef947a48e1563ebbde26584bd8f847e8fe",
          "dweb:/ipfs/QmcY2tk55VufuhnCmVmqjhpJjyfiquKrwNfEHu4rg6WoLn"
        ],
        "license": "MIT"
      },
      "lib/ERC721A/contracts/IERC721A.sol": {
        "keccak256": "0xa31dfe2635a25f899e279befef27ffcc02fd16e636c58d4c251a303f2355f7ad",
        "urls": [
          "bzz-raw://284680b4fdbf52b2aa888f7988447568ee82c5d1585c1535d985ff25153bc3b9",
          "dweb:/ipfs/QmTWfDch6XJMwVLA4CY2pMedzrLWoN8ZdgYZ1UbRzesysz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
        "urls": [
          "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
          "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3",
        "urls": [
          "bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867",
          "dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY"
        ],
        "license": "MIT"
      },
      "src/TesouroDireto.sol": {
        "keccak256": "0x5d6b0ef9782e0b8a547deb4048cd5cd0f41996c0f6847e0f742bb5423ef80b1f",
        "urls": [
          "bzz-raw://5445bce69313d14530fd70baeeb9880c20bced6a2597acc9dd24db214cfbfa50",
          "dweb:/ipfs/QmURfQ98AyQLR8jLA1tcdLXw1nbVeJt5gQ9nNTd1D2cGAP"
        ],
        "license": "MIT"
      },
      "src/cross-chain-nft-minter/DestinationMinterTesouro.sol": {
        "keccak256": "0xf041d12ab097f62759b0de08e19b7b0175086db1325b43cc070e8d5185119387",
        "urls": [
          "bzz-raw://77159db7b66ee9e9c1cf47d8c0fd2e11b3ee2fc400fe0ad724374b5b5e536179",
          "dweb:/ipfs/QmejCDnZuL2j2TxCWbJP37fjADhuxtXAVkbWbegkGqyxVC"
        ],
        "license": "MIT"
      },
      "src/v0.8/ccip/applications/CCIPReceiver.sol": {
        "keccak256": "0xd59dbf083bfad8fe95248cac59822ade0bc7d70e50ab05e366cb35a2b2ea99f6",
        "urls": [
          "bzz-raw://20205c17fa785b37acf0547c656ed60e09e806df7472e0f608129daa028f30f7",
          "dweb:/ipfs/QmcAUurGrEdn5pE66sVQek4M7EiGkdoKt38qThFpxcpGLB"
        ],
        "license": "MIT"
      },
      "src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol": {
        "keccak256": "0xd2a05a4f58a453cbf8cfa6aa78f58cb8e42091b3a025f711a0aa51f584e16b48",
        "urls": [
          "bzz-raw://e3bb4ca50612b0150a29b9ea7c82f6228914ff54716584541bad5c0259e8fa33",
          "dweb:/ipfs/QmTnqhNtBD9bUmqVaR4YHkWrBUdSGHV3DXAgrTM193PGkH"
        ],
        "license": "MIT"
      },
      "src/v0.8/ccip/libraries/Client.sol": {
        "keccak256": "0x8af3ac1085c87342373772fb1a0107c7b90258e6bfed318ab2a601a14477e679",
        "urls": [
          "bzz-raw://14395fefc8310c9a355262359c8f51036f83c004982fb600164c2a007629f81e",
          "dweb:/ipfs/QmeCLr8a5bDVyLQm8v947ULgV4CZmUeQPjVyWixzieBD5o"
        ],
        "license": "MIT"
      },
      "src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0xa36a31b4bb17fad88d023474893b3b895fa421650543b1ce5aefc78efbd43244",
        "urls": [
          "bzz-raw://0f235b9175d95111f301d729566e214c32559e55a2b0579c947484748e20679d",
          "dweb:/ipfs/QmSsNBuPejy1wNe2u3JSt2p9wFhrjvBjFrnAaNe1nDNkEA"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/cross-chain-nft-minter/DestinationMinterTesouro.sol",
    "id": 54945,
    "exportedSymbols": {
      "CCIPReceiver": [
        56080
      ],
      "Client": [
        56201
      ],
      "DestinationMinter": [
        54944
      ],
      "tesouroDireto": [
        54479
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:876:64",
    "nodes": [
      {
        "id": 54886,
        "nodeType": "PragmaDirective",
        "src": "32:24:64",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 54888,
        "nodeType": "ImportDirective",
        "src": "58:90:64",
        "nodes": [],
        "absolutePath": "src/v0.8/ccip/applications/CCIPReceiver.sol",
        "file": "@chainlink/contracts-ccip/ccip/applications/CCIPReceiver.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54945,
        "sourceUnit": 56081,
        "symbolAliases": [
          {
            "foreign": {
              "id": 54887,
              "name": "CCIPReceiver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 56080,
              "src": "66:12:64",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 54890,
        "nodeType": "ImportDirective",
        "src": "149:75:64",
        "nodes": [],
        "absolutePath": "src/v0.8/ccip/libraries/Client.sol",
        "file": "@chainlink/contracts-ccip/ccip/libraries/Client.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54945,
        "sourceUnit": 56202,
        "symbolAliases": [
          {
            "foreign": {
              "id": 54889,
              "name": "Client",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 56201,
              "src": "157:6:64",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 54892,
        "nodeType": "ImportDirective",
        "src": "225:51:64",
        "nodes": [],
        "absolutePath": "src/TesouroDireto.sol",
        "file": "../TesouroDireto.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54945,
        "sourceUnit": 54480,
        "symbolAliases": [
          {
            "foreign": {
              "id": 54891,
              "name": "tesouroDireto",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 54479,
              "src": "233:13:64",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 54944,
        "nodeType": "ContractDefinition",
        "src": "454:453:64",
        "nodes": [
          {
            "id": 54898,
            "nodeType": "VariableDeclaration",
            "src": "503:17:64",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "nft",
            "nameLocation": "517:3:64",
            "scope": 54944,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_tesouroDireto_$54479",
              "typeString": "contract tesouroDireto"
            },
            "typeName": {
              "id": 54897,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 54896,
                "name": "tesouroDireto",
                "nameLocations": [
                  "503:13:64"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 54479,
                "src": "503:13:64"
              },
              "referencedDeclaration": 54479,
              "src": "503:13:64",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_tesouroDireto_$54479",
                "typeString": "contract tesouroDireto"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 54900,
            "nodeType": "EventDefinition",
            "src": "527:28:64",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "a8bcb6a278444293ea5c0bce4a4734a060a5f557bb999d8a57c4f69e96f1fe88",
            "name": "MintCallSuccessfull",
            "nameLocation": "533:19:64",
            "parameters": {
              "id": 54899,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "552:2:64"
            }
          },
          {
            "id": 54917,
            "nodeType": "FunctionDefinition",
            "src": "561:117:64",
            "nodes": [],
            "body": {
              "id": 54916,
              "nodeType": "Block",
              "src": "630:48:64",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 54914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 54910,
                      "name": "nft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54898,
                      "src": "640:3:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_tesouroDireto_$54479",
                        "typeString": "contract tesouroDireto"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 54912,
                          "name": "nftAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54904,
                          "src": "660:10:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 54911,
                        "name": "tesouroDireto",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54479,
                        "src": "646:13:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_tesouroDireto_$54479_$",
                          "typeString": "type(contract tesouroDireto)"
                        }
                      },
                      "id": 54913,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "646:25:64",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_tesouroDireto_$54479",
                        "typeString": "contract tesouroDireto"
                      }
                    },
                    "src": "640:31:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_tesouroDireto_$54479",
                      "typeString": "contract tesouroDireto"
                    }
                  },
                  "id": 54915,
                  "nodeType": "ExpressionStatement",
                  "src": "640:31:64"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 54907,
                    "name": "router",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 54902,
                    "src": "622:6:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 54908,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 54906,
                  "name": "CCIPReceiver",
                  "nameLocations": [
                    "609:12:64"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 56080,
                  "src": "609:12:64"
                },
                "nodeType": "ModifierInvocation",
                "src": "609:20:64"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 54905,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54902,
                  "mutability": "mutable",
                  "name": "router",
                  "nameLocation": "581:6:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 54917,
                  "src": "573:14:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54901,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "573:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54904,
                  "mutability": "mutable",
                  "name": "nftAddress",
                  "nameLocation": "597:10:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 54917,
                  "src": "589:18:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54903,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "589:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "572:36:64"
            },
            "returnParameters": {
              "id": 54909,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "630:0:64"
            },
            "scope": 54944,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 54943,
            "nodeType": "FunctionDefinition",
            "src": "684:221:64",
            "nodes": [],
            "body": {
              "id": 54942,
              "nodeType": "Block",
              "src": "776:129:64",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    54925,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54925,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "792:7:64",
                      "nodeType": "VariableDeclaration",
                      "scope": 54942,
                      "src": "787:12:64",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 54924,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "787:4:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 54934,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 54931,
                          "name": "message",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54920,
                          "src": "823:7:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Any2EVMMessage_$56166_memory_ptr",
                            "typeString": "struct Client.Any2EVMMessage memory"
                          }
                        },
                        "id": 54932,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "831:4:64",
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 56161,
                        "src": "823:12:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 54928,
                            "name": "nft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54898,
                            "src": "813:3:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_tesouroDireto_$54479",
                              "typeString": "contract tesouroDireto"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_tesouroDireto_$54479",
                              "typeString": "contract tesouroDireto"
                            }
                          ],
                          "id": 54927,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "805:7:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 54926,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "805:7:64",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 54929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "805:12:64",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 54930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "818:4:64",
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "src": "805:17:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 54933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "805:31:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "786:50:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 54936,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54925,
                        "src": "854:7:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 54935,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "846:7:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 54937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "846:16:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54938,
                  "nodeType": "ExpressionStatement",
                  "src": "846:16:64"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 54939,
                      "name": "MintCallSuccessfull",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54900,
                      "src": "877:19:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 54940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "877:21:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54941,
                  "nodeType": "EmitStatement",
                  "src": "872:26:64"
                }
              ]
            },
            "baseFunctions": [
              56045
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_ccipReceive",
            "nameLocation": "693:12:64",
            "overrides": {
              "id": 54922,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "767:8:64"
            },
            "parameters": {
              "id": 54921,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54920,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "744:7:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 54943,
                  "src": "715:36:64",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Any2EVMMessage_$56166_memory_ptr",
                    "typeString": "struct Client.Any2EVMMessage"
                  },
                  "typeName": {
                    "id": 54919,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54918,
                      "name": "Client.Any2EVMMessage",
                      "nameLocations": [
                        "715:6:64",
                        "722:14:64"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 56166,
                      "src": "715:21:64"
                    },
                    "referencedDeclaration": 56166,
                    "src": "715:21:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Any2EVMMessage_$56166_storage_ptr",
                      "typeString": "struct Client.Any2EVMMessage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "705:52:64"
            },
            "returnParameters": {
              "id": 54923,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "776:0:64"
            },
            "scope": 54944,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 54894,
              "name": "CCIPReceiver",
              "nameLocations": [
                "484:12:64"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 56080,
              "src": "484:12:64"
            },
            "id": 54895,
            "nodeType": "InheritanceSpecifier",
            "src": "484:12:64"
          }
        ],
        "canonicalName": "DestinationMinter",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 54893,
          "nodeType": "StructuredDocumentation",
          "src": "278:175:64",
          "text": " THIS IS AN EXAMPLE CONTRACT THAT USES HARDCODED VALUES FOR CLARITY.\n THIS IS AN EXAMPLE CONTRACT THAT USES UN-AUDITED CODE.\n DO NOT USE THIS CODE IN PRODUCTION."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          54944,
          56080,
          56505,
          56093
        ],
        "name": "DestinationMinter",
        "nameLocation": "463:17:64",
        "scope": 54945,
        "usedErrors": [
          56061
        ],
        "usedEvents": [
          54900
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 64
}
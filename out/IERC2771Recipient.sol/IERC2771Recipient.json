{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "isTrustedForwarder(address)": "572b6c05"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isTrustedForwarder(address)\":{\"params\":{\"forwarder\":\"The address of the Forwarder contract that is being used.\"},\"returns\":{\"_0\":\"isTrustedForwarder `true` if the Forwarder is trusted to forward relayed transactions by this Recipient.\"}}},\"title\":\"The ERC-2771 Recipient Base Abstract Class - Declarations\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isTrustedForwarder(address)\":{\"notice\":\":warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.\"}},\"notice\":\"A contract must implement this interface in order to support relayed transaction.It is recommended that your contract inherits from the ERC2771Recipient contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/v0.8/vendor/IERC2771Recipient.sol\":\"IERC2771Recipient\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@ERC3643/=lib/ERC-3643/contracts/\",\":@chainlink/contracts-ccip/=src/v0.8/\",\":@chainlink/contracts/=node_modules/@chainlink/contracts/src/v0.6/\",\":@erc721a/=lib/ERC721A/contracts/\",\":@onchain-id/solidity/contracts/=lib/solidity/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/test/=lib/prb-test/src/\",\":ERC-3643/=lib/ERC-3643/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/contracts-upgradleable/=lib/openzeppelin-contracts-upgradleable/contracts/\",\":prb-test/=lib/prb-test/src/\",\":solidity/=lib/solidity/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"src/v0.8/vendor/IERC2771Recipient.sol\":{\"keccak256\":\"0xd34d65ca586fa3f7cf94380da8766b4abab35cfad13ed4c86f751e3c54ffa91c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2554141306c747518becd37d847964fa1f7c6ba95350d962aabb23d7d17cbe97\",\"dweb:/ipfs/QmcFzCx3ki3RyKSn1uiGD84zVJua8ZwCSgtEwXEMadDopX\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "isTrustedForwarder(address)": {
            "params": {
              "forwarder": "The address of the Forwarder contract that is being used."
            },
            "returns": {
              "_0": "isTrustedForwarder `true` if the Forwarder is trusted to forward relayed transactions by this Recipient."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "isTrustedForwarder(address)": {
            "notice": ":warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ERC3643/=lib/ERC-3643/contracts/",
        "@chainlink/contracts-ccip/=src/v0.8/",
        "@chainlink/contracts/=node_modules/@chainlink/contracts/src/v0.6/",
        "@erc721a/=lib/ERC721A/contracts/",
        "@onchain-id/solidity/contracts/=lib/solidity/contracts/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@prb/test/=lib/prb-test/src/",
        "ERC-3643/=lib/ERC-3643/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/contracts-upgradleable/=lib/openzeppelin-contracts-upgradleable/contracts/",
        "prb-test/=lib/prb-test/src/",
        "solidity/=lib/solidity/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10000
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/v0.8/vendor/IERC2771Recipient.sol": "IERC2771Recipient"
      },
      "libraries": {}
    },
    "sources": {
      "src/v0.8/vendor/IERC2771Recipient.sol": {
        "keccak256": "0xd34d65ca586fa3f7cf94380da8766b4abab35cfad13ed4c86f751e3c54ffa91c",
        "urls": [
          "bzz-raw://2554141306c747518becd37d847964fa1f7c6ba95350d962aabb23d7d17cbe97",
          "dweb:/ipfs/QmcFzCx3ki3RyKSn1uiGD84zVJua8ZwCSgtEwXEMadDopX"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/v0.8/vendor/IERC2771Recipient.sol",
    "id": 128832,
    "exportedSymbols": {
      "IERC2771Recipient": [
        128831
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1729:285",
    "nodes": [
      {
        "id": 128809,
        "nodeType": "PragmaDirective",
        "src": "32:24:285",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0"
        ]
      },
      {
        "id": 128831,
        "nodeType": "ContractDefinition",
        "src": "326:1435:285",
        "nodes": [
          {
            "id": 128818,
            "nodeType": "FunctionDefinition",
            "src": "716:81:285",
            "nodes": [],
            "documentation": {
              "id": 128811,
              "nodeType": "StructuredDocumentation",
              "src": "369:342:285",
              "text": " :warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.\n @param forwarder The address of the Forwarder contract that is being used.\n @return isTrustedForwarder `true` if the Forwarder is trusted to forward relayed transactions by this Recipient."
            },
            "functionSelector": "572b6c05",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isTrustedForwarder",
            "nameLocation": "725:18:285",
            "parameters": {
              "id": 128814,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 128813,
                  "mutability": "mutable",
                  "name": "forwarder",
                  "nameLocation": "752:9:285",
                  "nodeType": "VariableDeclaration",
                  "scope": 128818,
                  "src": "744:17:285",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 128812,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "744:7:285",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "743:19:285"
            },
            "returnParameters": {
              "id": 128817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 128816,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 128818,
                  "src": "791:4:285",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 128815,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "791:4:285",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "790:6:285"
            },
            "scope": 128831,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 128824,
            "nodeType": "FunctionDefinition",
            "src": "1146:62:285",
            "nodes": [],
            "documentation": {
              "id": 128819,
              "nodeType": "StructuredDocumentation",
              "src": "803:338:285",
              "text": " @notice Use this method the contract anywhere instead of msg.sender to support relayed transactions.\n @return sender The real sender of this call.\n For a call that came through the Forwarder the real sender is extracted from the last 20 bytes of the `msg.data`.\n Otherwise simply returns `msg.sender`."
            },
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "1155:10:285",
            "parameters": {
              "id": 128820,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1165:2:285"
            },
            "returnParameters": {
              "id": 128823,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 128822,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 128824,
                  "src": "1199:7:285",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 128821,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1199:7:285",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1198:9:285"
            },
            "scope": 128831,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 128830,
            "nodeType": "FunctionDefinition",
            "src": "1692:67:285",
            "nodes": [],
            "documentation": {
              "id": 128825,
              "nodeType": "StructuredDocumentation",
              "src": "1214:473:285",
              "text": " @notice Use this method in the contract instead of `msg.data` when difference matters (hashing, signature, etc.)\n @return data The real `msg.data` of this call.\n For a call that came through the Forwarder, the real sender address was appended as the last 20 bytes\n of the `msg.data` - so this method will strip those 20 bytes off.\n Otherwise (if the call was made directly and not through the forwarder) simply returns `msg.data`."
            },
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "1701:8:285",
            "parameters": {
              "id": 128826,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1709:2:285"
            },
            "returnParameters": {
              "id": 128829,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 128828,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 128830,
                  "src": "1743:14:285",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 128827,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1743:5:285",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1742:16:285"
            },
            "scope": 128831,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": true,
        "baseContracts": [],
        "canonicalName": "IERC2771Recipient",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 128810,
          "nodeType": "StructuredDocumentation",
          "src": "58:267:285",
          "text": " @title The ERC-2771 Recipient Base Abstract Class - Declarations\n @notice A contract must implement this interface in order to support relayed transaction.\n @notice It is recommended that your contract inherits from the ERC2771Recipient contract."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          128831
        ],
        "name": "IERC2771Recipient",
        "nameLocation": "344:17:285",
        "scope": 128832,
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "license": "MIT"
  },
  "id": 285
}
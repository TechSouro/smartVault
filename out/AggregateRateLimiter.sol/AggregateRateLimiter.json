{
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "isEnabled",
              "type": "bool"
            },
            {
              "internalType": "uint128",
              "name": "capacity",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "rate",
              "type": "uint128"
            }
          ],
          "internalType": "struct RateLimiter.Config",
          "name": "config",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "OnlyCallableByAdminOrOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "PriceNotFoundForToken",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "isEnabled",
              "type": "bool"
            },
            {
              "internalType": "uint128",
              "name": "capacity",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "rate",
              "type": "uint128"
            }
          ],
          "indexed": false,
          "internalType": "struct RateLimiter.Config",
          "name": "config",
          "type": "tuple"
        }
      ],
      "name": "ConfigChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferRequested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentRateLimiterState",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "tokens",
              "type": "uint128"
            },
            {
              "internalType": "uint32",
              "name": "lastUpdated",
              "type": "uint32"
            },
            {
              "internalType": "bool",
              "name": "isEnabled",
              "type": "bool"
            },
            {
              "internalType": "uint128",
              "name": "capacity",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "rate",
              "type": "uint128"
            }
          ],
          "internalType": "struct RateLimiter.TokenBucket",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTokenLimitAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "setAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "isEnabled",
              "type": "bool"
            },
            {
              "internalType": "uint128",
              "name": "capacity",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "rate",
              "type": "uint128"
            }
          ],
          "internalType": "struct RateLimiter.Config",
          "name": "config",
          "type": "tuple"
        }
      ],
      "name": "setRateLimiterConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50604051610d26380380610d2683398101604081905261002f91610205565b33806000816100855760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f000000000000000060448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b03848116919091179091558116156100b5576100b581610140565b50506040805160a081018252602084810180516001600160801b039081168085524263ffffffff169385018490528751151585870181905292518216606086018190529790950151166080909301839052600380546001600160a01b031916909417600160801b9283021760ff60a01b1916600160a01b909102179092550290911760045550610285565b336001600160a01b038216036101985760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000604482015260640161007c565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b80516001600160801b038116811461020057600080fd5b919050565b60006060828403121561021757600080fd5b604051606081016001600160401b038111828210171561024757634e487b7160e01b600052604160045260246000fd5b6040528251801515811461025a57600080fd5b8152610268602084016101e9565b6020820152610279604084016101e9565b60408201529392505050565b610a92806102946000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806379ba50971161005b57806379ba5097146101435780638da5cb5b1461014b578063c92b283214610169578063f2fde38b1461017c57600080fd5b8063546719cd14610082578063599f6431146100ef578063704b6c021461012e575b600080fd5b61008a61018f565b6040516100e6919081516fffffffffffffffffffffffffffffffff908116825260208084015163ffffffff1690830152604080840151151590830152606080840151821690830152608092830151169181019190915260a00190565b60405180910390f35b60025473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100e6565b61014161013c36600461091d565b610244565b005b610141610334565b60005473ffffffffffffffffffffffffffffffffffffffff16610109565b61014161017736600461097f565b610436565b61014161018a36600461091d565b6104bb565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101919091526040805160a0810182526003546fffffffffffffffffffffffffffffffff808216835270010000000000000000000000000000000080830463ffffffff1660208501527401000000000000000000000000000000000000000090920460ff16151593830193909352600454808416606084015204909116608082015261023f906104cc565b905090565b60005473ffffffffffffffffffffffffffffffffffffffff163314801590610284575060025473ffffffffffffffffffffffffffffffffffffffff163314155b156102bb576040517ff6cd562000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527f8fe72c3e0020beb3234e76ae6676fa576fbfcae600af1c4fea44784cf0db329c9060200160405180910390a150565b60015473ffffffffffffffffffffffffffffffffffffffff1633146103ba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4d7573742062652070726f706f736564206f776e65720000000000000000000060448201526064015b60405180910390fd5b60008054337fffffffffffffffffffffffff00000000000000000000000000000000000000008083168217845560018054909116905560405173ffffffffffffffffffffffffffffffffffffffff90921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b60005473ffffffffffffffffffffffffffffffffffffffff163314801590610476575060025473ffffffffffffffffffffffffffffffffffffffff163314155b156104ad576040517ff6cd562000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104b860038261057e565b50565b6104c3610763565b6104b8816107e6565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915261055a82606001516fffffffffffffffffffffffffffffffff1683600001516fffffffffffffffffffffffffffffffff16846020015163ffffffff164261053e9190610a48565b85608001516fffffffffffffffffffffffffffffffff166108db565b6fffffffffffffffffffffffffffffffff1682525063ffffffff4216602082015290565b81546000906105a790700100000000000000000000000000000000900463ffffffff1642610a48565b9050801561064957600183015483546105ef916fffffffffffffffffffffffffffffffff808216928116918591700100000000000000000000000000000000909104166108db565b83546fffffffffffffffffffffffffffffffff919091167fffffffffffffffffffffffff0000000000000000000000000000000000000000909116177001000000000000000000000000000000004263ffffffff16021783555b6020820151835461066f916fffffffffffffffffffffffffffffffff9081169116610903565b83548351151574010000000000000000000000000000000000000000027fffffffffffffffffffffff00ffffffff000000000000000000000000000000009091166fffffffffffffffffffffffffffffffff92831617178455602083015160408085015183167001000000000000000000000000000000000291909216176001850155517f9ea3374b67bf275e6bb9c8ae68f9cae023e1c528b4b27e092f0bb209d3531c19906107569084908151151581526020808301516fffffffffffffffffffffffffffffffff90811691830191909152604092830151169181019190915260600190565b60405180910390a1505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146107e4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e65720000000000000000000060448201526064016103b1565b565b3373ffffffffffffffffffffffffffffffffffffffff821603610865576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016103b1565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b60006108fa856108eb8486610a5b565b6108f59087610a72565b610903565b95945050505050565b60008183106109125781610914565b825b90505b92915050565b60006020828403121561092f57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461095357600080fd5b9392505050565b80356fffffffffffffffffffffffffffffffff8116811461097a57600080fd5b919050565b60006060828403121561099157600080fd5b6040516060810181811067ffffffffffffffff821117156109db577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604052823580151581146109ee57600080fd5b81526109fc6020840161095a565b6020820152610a0d6040840161095a565b60408201529392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181038181111561091757610917610a19565b808202811582820484141761091757610917610a19565b8082018082111561091757610917610a1956fea164736f6c6343000815000a",
    "sourceMap": "630:3232:100:-:0;;;1214:272;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;291:10:250;;345:1:248;291:10:250;529:59:249;;;;-1:-1:-1;;;529:59:249;;1204:2:351;529:59:249;;;1186:21:351;1243:2;1223:18;;;1216:30;1282:26;1262:18;;;1255:54;1326:18;;529:59:249;;;;;;;;;595:7;:18;;-1:-1:-1;;;;;;595:18:249;-1:-1:-1;;;;;595:18:249;;;;;;;;;;623:26;;;619:79;;659:32;678:12;659:18;:32::i;:::-;-1:-1:-1;;1282:199:100;;;;;;;;1380:15;;;;;;-1:-1:-1;;;;;1282:199:100;;;;;;1423:15;1282:199;;;;;;;;1458:16;;1282:199;;;;;;;;1349:15;;1282:199;;;;;;;;1320:11;;;;;1282:199;;;;;;;;1266:13;:215;;-1:-1:-1;;;;;;1266:215:100;;;;-1:-1:-1;;;1266:215:100;;;;-1:-1:-1;;;;1266:215:100;-1:-1:-1;;;1266:215:100;;;;;;;;;;;;;-1:-1:-1;630:3232:100;;1482:188:249;1550:10;-1:-1:-1;;;;;1544:16:249;;;1536:52;;;;-1:-1:-1;;;1536:52:249;;1557:2:351;1536:52:249;;;1539:21:351;1596:2;1576:18;;;1569:30;1635:25;1615:18;;;1608:53;1678:18;;1536:52:249;1355:347:351;1536:52:249;1595:14;:19;;-1:-1:-1;;;;;;1595:19:249;-1:-1:-1;;;;;1595:19:249;;;;;;;;;-1:-1:-1;1653:7:249;;1626:39;;1595:19;;1653:7;;1626:39;;-1:-1:-1;1626:39:249;1482:188;:::o;14:177:351:-;93:13;;-1:-1:-1;;;;;135:31:351;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:801::-;291:6;344:2;332:9;323:7;319:23;315:32;312:52;;;360:1;357;350:12;312:52;393:2;387:9;435:2;423:15;;-1:-1:-1;;;;;453:34:351;;489:22;;;450:62;447:185;;;554:10;549:3;545:20;542:1;535:31;589:4;586:1;579:15;617:4;614:1;607:15;447:185;648:2;641:22;685:16;;737:13;;730:21;720:32;;710:60;;766:1;763;756:12;710:60;779:21;;833:49;878:2;863:18;;833:49;:::i;:::-;828:2;820:6;816:15;809:74;916:49;961:2;950:9;946:18;916:49;:::i;:::-;911:2;899:15;;892:74;903:6;196:801;-1:-1:-1;;;196:801:351:o;1355:347::-;630:3232:100;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c806379ba50971161005b57806379ba5097146101435780638da5cb5b1461014b578063c92b283214610169578063f2fde38b1461017c57600080fd5b8063546719cd14610082578063599f6431146100ef578063704b6c021461012e575b600080fd5b61008a61018f565b6040516100e6919081516fffffffffffffffffffffffffffffffff908116825260208084015163ffffffff1690830152604080840151151590830152606080840151821690830152608092830151169181019190915260a00190565b60405180910390f35b60025473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100e6565b61014161013c36600461091d565b610244565b005b610141610334565b60005473ffffffffffffffffffffffffffffffffffffffff16610109565b61014161017736600461097f565b610436565b61014161018a36600461091d565b6104bb565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101919091526040805160a0810182526003546fffffffffffffffffffffffffffffffff808216835270010000000000000000000000000000000080830463ffffffff1660208501527401000000000000000000000000000000000000000090920460ff16151593830193909352600454808416606084015204909116608082015261023f906104cc565b905090565b60005473ffffffffffffffffffffffffffffffffffffffff163314801590610284575060025473ffffffffffffffffffffffffffffffffffffffff163314155b156102bb576040517ff6cd562000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527f8fe72c3e0020beb3234e76ae6676fa576fbfcae600af1c4fea44784cf0db329c9060200160405180910390a150565b60015473ffffffffffffffffffffffffffffffffffffffff1633146103ba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4d7573742062652070726f706f736564206f776e65720000000000000000000060448201526064015b60405180910390fd5b60008054337fffffffffffffffffffffffff00000000000000000000000000000000000000008083168217845560018054909116905560405173ffffffffffffffffffffffffffffffffffffffff90921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b60005473ffffffffffffffffffffffffffffffffffffffff163314801590610476575060025473ffffffffffffffffffffffffffffffffffffffff163314155b156104ad576040517ff6cd562000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104b860038261057e565b50565b6104c3610763565b6104b8816107e6565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915261055a82606001516fffffffffffffffffffffffffffffffff1683600001516fffffffffffffffffffffffffffffffff16846020015163ffffffff164261053e9190610a48565b85608001516fffffffffffffffffffffffffffffffff166108db565b6fffffffffffffffffffffffffffffffff1682525063ffffffff4216602082015290565b81546000906105a790700100000000000000000000000000000000900463ffffffff1642610a48565b9050801561064957600183015483546105ef916fffffffffffffffffffffffffffffffff808216928116918591700100000000000000000000000000000000909104166108db565b83546fffffffffffffffffffffffffffffffff919091167fffffffffffffffffffffffff0000000000000000000000000000000000000000909116177001000000000000000000000000000000004263ffffffff16021783555b6020820151835461066f916fffffffffffffffffffffffffffffffff9081169116610903565b83548351151574010000000000000000000000000000000000000000027fffffffffffffffffffffff00ffffffff000000000000000000000000000000009091166fffffffffffffffffffffffffffffffff92831617178455602083015160408085015183167001000000000000000000000000000000000291909216176001850155517f9ea3374b67bf275e6bb9c8ae68f9cae023e1c528b4b27e092f0bb209d3531c19906107569084908151151581526020808301516fffffffffffffffffffffffffffffffff90811691830191909152604092830151169181019190915260600190565b60405180910390a1505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146107e4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e65720000000000000000000060448201526064016103b1565b565b3373ffffffffffffffffffffffffffffffffffffffff821603610865576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016103b1565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b60006108fa856108eb8486610a5b565b6108f59087610a72565b610903565b95945050505050565b60008183106109125781610914565b825b90505b92915050565b60006020828403121561092f57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461095357600080fd5b9392505050565b80356fffffffffffffffffffffffffffffffff8116811461097a57600080fd5b919050565b60006060828403121561099157600080fd5b6040516060810181811067ffffffffffffffff821117156109db577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604052823580151581146109ee57600080fd5b81526109fc6020840161095a565b6020820152610a0d6040840161095a565b60408201529392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181038181111561091757610917610a19565b808202811582820484141761091757610917610a19565b8082018082111561091757610917610a1956fea164736f6c6343000815000a",
    "sourceMap": "630:3232:100:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2436:148;;;:::i;:::-;;;;;;296:13:351;;231:34;292:22;;;274:41;;375:4;363:17;;;357:24;383:10;353:41;331:20;;;324:71;465:4;453:17;;;447:24;440:32;433:40;411:20;;;404:70;534:4;522:17;;;516:24;512:33;;490:20;;;483:63;606:4;594:17;;;588:24;584:33;562:20;;;555:63;;;;208:3;193:19;;14:610;2436:148:100;;;;;;;;3209:87;3284:7;;;;3209:87;;;805:42:351;793:55;;;775:74;;763:2;748:18;3209:87:100;629:226:351;3476:120:100;;;;;;:::i;:::-;;:::i;:::-;;1001:265:249;;;:::i;1317:81::-;1364:7;1386;;;1317:81;;2751:144:100;;;;;;:::i;:::-;;:::i;811:98:249:-;;;;;;:::i;:::-;;:::i;2436:148:100:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2539:38:100;;;;;;;;:13;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:40;;:38;:40::i;:::-;2532:47;;2436:148;:::o;3476:120::-;1364:7:249;1386;;;3753:10:100;:21;;;;:46;;-1:-1:-1;3792:7:100;;;;3778:10;:21;;3753:46;3749:99;;;3808:40;;;;;;;;;;;;;;3749:99;3544:7:::1;:18:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;;3573::::1;::::0;775:74:351;;;3573:18:100::1;::::0;763:2:351;748:18;3573::100::1;;;;;;;3476:120:::0;:::o;1001:265:249:-;1074:14;;;;1060:10;:28;1052:63;;;;;;;2406:2:351;1052:63:249;;;2388:21:351;2445:2;2425:18;;;2418:30;2484:24;2464:18;;;2457:52;2526:18;;1052:63:249;;;;;;;;;1122:16;1141:7;;1164:10;1154:20;;;;;;;;-1:-1:-1;1180:27:249;;;;;;;1219:42;;1141:7;;;;;1164:10;;1141:7;;1219:42;;;1046:220;1001:265::o;2751:144:100:-;1364:7:249;1386;;;3753:10:100;:21;;;;:46;;-1:-1:-1;3792:7:100;;;;3778:10;:21;;3753:46;3749:99;;;3808:40;;;;;;;;;;;;;;3749:99;2847:43:::1;:13;2883:6:::0;2847:35:::1;:43::i;:::-;2751:144:::0;:::o;811:98:249:-;1941:20;:18;:20::i;:::-;882:22:::1;901:2;882:18;:22::i;4289:528:125:-:0;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4638:99:125;4655:6;:15;;;4638:99;;4672:6;:13;;;4638:99;;4705:6;:18;;;4687:36;;:15;:36;;;;:::i;:::-;4725:6;:11;;;4638:99;;:16;:99::i;:::-;4607:136;;;;-1:-1:-1;4749:44:125;4777:15;4749:44;:18;;;:44;4607:6;4289:528::o;4939:700::-;5194:20;;5157:16;;5176:38;;5194:20;;;;;5176:15;:38;:::i;:::-;5157:57;-1:-1:-1;5224:13:125;;5220:193;;5290:17;;;;5309:15;;5273:77;;5290:17;;;;;5309:15;;;5326:8;;5336:13;;;;;5273:16;:77::i;:::-;5247:104;;;;;;;5360:46;;;;;;5390:15;5360:46;;;;;;5220:193;5450:15;;;;5467;;5445:38;;;;;;;5467:15;5445:4;:38::i;:::-;5419:65;;5511:16;;5490:37;;;;;;;;5419:65;;;;5490:37;;;;5553:15;;;;5590:11;;;;;5574:27;;;;5533:35;;;;5574:27;5419:65;5533:17;;5574:27;5613:21;;;;;5511:6;;3105:13:351;;3098:21;3091:29;3073:48;;3168:4;3156:17;;;3150:24;3193:34;3265:21;;;3243:20;;;3236:51;;;;3347:4;3335:17;;;3329:24;3325:33;3303:20;;;3296:63;;;;3061:2;3046:18;;2877:488;5613:21:125;;;;;;;;5031:608;4939:700;;:::o;1715:111:249:-;1787:7;;;;1773:10;:21;1765:56;;;;;;;3572:2:351;1765:56:249;;;3554:21:351;3611:2;3591:18;;;3584:30;3650:24;3630:18;;;3623:52;3692:18;;1765:56:249;3370:346:351;1765:56:249;1715:111::o;1482:188::-;1550:10;1544:16;;;;1536:52;;;;;;;3923:2:351;1536:52:249;;;3905:21:351;3962:2;3942:18;;;3935:30;4001:25;3981:18;;;3974:53;4044:18;;1536:52:249;3721:347:351;1536:52:249;1595:14;:19;;;;;;;;;;;;;;-1:-1:-1;1653:7:249;;1626:39;;1595:19;;1653:7;;1626:39;;-1:-1:-1;1626:39:249;1482:188;:::o;5909:201:125:-;6043:7;6065:40;6070:8;6089:15;6100:4;6089:8;:15;:::i;:::-;6080:24;;:6;:24;:::i;:::-;6065:4;:40::i;:::-;6058:47;5909:201;-1:-1:-1;;;;;5909:201:125:o;6238:99::-;6297:7;6323:1;6319;:5;:13;;6331:1;6319:13;;;6327:1;6319:13;6312:20;;6238:99;;;;;:::o;860:309:351:-;919:6;972:2;960:9;951:7;947:23;943:32;940:52;;;988:1;985;978:12;940:52;1027:9;1014:23;1077:42;1070:5;1066:54;1059:5;1056:65;1046:93;;1135:1;1132;1125:12;1046:93;1158:5;860:309;-1:-1:-1;;;860:309:351:o;1174:188::-;1242:20;;1302:34;1291:46;;1281:57;;1271:85;;1352:1;1349;1342:12;1271:85;1174:188;;;:::o;1367:832::-;1451:6;1504:2;1492:9;1483:7;1479:23;1475:32;1472:52;;;1520:1;1517;1510:12;1472:52;1553:2;1547:9;1595:2;1587:6;1583:15;1664:6;1652:10;1649:22;1628:18;1616:10;1613:34;1610:62;1607:242;;;1705:77;1702:1;1695:88;1806:4;1803:1;1796:15;1834:4;1831:1;1824:15;1607:242;1865:2;1858:22;1902:23;;1961:13;;1954:21;1944:32;;1934:60;;1990:1;1987;1980:12;1934:60;2003:21;;2057:38;2091:2;2076:18;;2057:38;:::i;:::-;2052:2;2044:6;2040:15;2033:63;2129:38;2163:2;2152:9;2148:18;2129:38;:::i;:::-;2124:2;2112:15;;2105:63;2116:6;1367:832;-1:-1:-1;;;1367:832:351:o;2555:184::-;2607:77;2604:1;2597:88;2704:4;2701:1;2694:15;2728:4;2725:1;2718:15;2744:128;2811:9;;;2832:11;;;2829:37;;;2846:18;;:::i;4073:168::-;4146:9;;;4177;;4194:15;;;4188:22;;4174:37;4164:71;;4215:18;;:::i;4246:125::-;4311:9;;;4332:10;;;4329:36;;;4345:18;;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "acceptOwnership()": "79ba5097",
    "currentRateLimiterState()": "546719cd",
    "getTokenLimitAdmin()": "599f6431",
    "owner()": "8da5cb5b",
    "setAdmin(address)": "704b6c02",
    "setRateLimiterConfig((bool,uint128,uint128))": "c92b2832",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint128\",\"name\":\"capacity\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"rate\",\"type\":\"uint128\"}],\"internalType\":\"struct RateLimiter.Config\",\"name\":\"config\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"OnlyCallableByAdminOrOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"PriceNotFoundForToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint128\",\"name\":\"capacity\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"rate\",\"type\":\"uint128\"}],\"indexed\":false,\"internalType\":\"struct RateLimiter.Config\",\"name\":\"config\",\"type\":\"tuple\"}],\"name\":\"ConfigChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentRateLimiterState\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"tokens\",\"type\":\"uint128\"},{\"internalType\":\"uint32\",\"name\":\"lastUpdated\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"isEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint128\",\"name\":\"capacity\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"rate\",\"type\":\"uint128\"}],\"internalType\":\"struct RateLimiter.TokenBucket\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenLimitAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint128\",\"name\":\"capacity\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"rate\",\"type\":\"uint128\"}],\"internalType\":\"struct RateLimiter.Config\",\"name\":\"config\",\"type\":\"tuple\"}],\"name\":\"setRateLimiterConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"config\":\"The RateLimiter.Config containing the capacity and refill rate of the bucket, plus the admin address.\"}},\"currentRateLimiterState()\":{\"returns\":{\"_0\":\"The token bucket.\"}},\"getTokenLimitAdmin()\":{\"returns\":{\"_0\":\"the token limit admin address.\"}},\"setAdmin(address)\":{\"details\":\"setting this to address(0) indicates there is no active admin.\",\"params\":{\"newAdmin\":\"the address of the new admin.\"}},\"setRateLimiterConfig((bool,uint128,uint128))\":{\"details\":\"should only be callable by the owner or token limit admin.\",\"params\":{\"config\":\"The new rate limiter config.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"currentRateLimiterState()\":{\"notice\":\"Gets the token bucket with its values for the block it was requested at.\"},\"getTokenLimitAdmin()\":{\"notice\":\"Gets the token limit admin address.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"setAdmin(address)\":{\"notice\":\"Sets the token limit admin address.\"},\"setRateLimiterConfig((bool,uint128,uint128))\":{\"notice\":\"Sets the rate limited config.\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address, pending.\"}},\"notice\":\"The aggregate rate limiter is a wrapper of the token bucket rate limiter which permits rate limiting based on the aggregate value of a group of token transfers, using a price registry to convert to a numeraire asset (e.g. USD).\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/v0.8/ccip/AggregateRateLimiter.sol\":\"AggregateRateLimiter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@ERC3643/=lib/ERC-3643/contracts/\",\":@chainlink/contracts-ccip/=src/v0.8/\",\":@chainlink/contracts/=node_modules/@chainlink/contracts/src/v0.6/\",\":@erc721a/=lib/ERC721A/contracts/\",\":@onchain-id/solidity/contracts/=lib/solidity/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/test/=lib/prb-test/src/\",\":ERC-3643/=lib/ERC-3643/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/contracts-upgradleable/=lib/openzeppelin-contracts-upgradleable/contracts/\",\":prb-test/=lib/prb-test/src/\",\":solidity/=lib/solidity/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"src/v0.8/ccip/AggregateRateLimiter.sol\":{\"keccak256\":\"0xc8834df9e25f868aadb1e9fca49ccf0be6d6e2842792a8c1419f1c27a9706a68\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cbca5da69d2dcb97eb53f9ecf61ce328e95c84baf772cb3e52fd808f6d71683e\",\"dweb:/ipfs/QmcWhduLWhNgxeAqsA5EsbF5HpE6qwkA698HsfDYFi9MtD\"]},\"src/v0.8/ccip/interfaces/IPriceRegistry.sol\":{\"keccak256\":\"0xa720e33296cbb18dffe5dcf9d7e3c4b4c0532bdd09dec689243bda01d50d07e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aebab6f04456ec25ce4ec289012b9401ec10fb4426c09095595ac4ffca15ae77\",\"dweb:/ipfs/QmfCnSXWSSiXd5pPTYZKkq6NcbpCto6tFM6EGeWqZ6TyMv\"]},\"src/v0.8/ccip/libraries/Client.sol\":{\"keccak256\":\"0x8af3ac1085c87342373772fb1a0107c7b90258e6bfed318ab2a601a14477e679\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://14395fefc8310c9a355262359c8f51036f83c004982fb600164c2a007629f81e\",\"dweb:/ipfs/QmeCLr8a5bDVyLQm8v947ULgV4CZmUeQPjVyWixzieBD5o\"]},\"src/v0.8/ccip/libraries/Internal.sol\":{\"keccak256\":\"0x47b734c896e5a286ff0f18d20fd208bc87150ceb724aebda836c681f58fe2013\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://394af09ff5d59cf031fadf2ada0562ea8703f28582034e1ba8edfd673925df20\",\"dweb:/ipfs/Qmdm4N95RKwq6QLce8scsccT5pvNPAccQKt3i4WniUwLaj\"]},\"src/v0.8/ccip/libraries/MerkleMultiProof.sol\":{\"keccak256\":\"0x9f2e5edd718cd1b5aa7143ca39ee50d7c15b8456ce32c49c10833c9ef3b0eb72\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c2591501ed4b28164009e58166324634a0ce79a0599ee682d47d825f302a9955\",\"dweb:/ipfs/QmeN35m4PFQDBc1ew2Q5koYNfchf8DcTemUmXVFVSuZV5t\"]},\"src/v0.8/ccip/libraries/RateLimiter.sol\":{\"keccak256\":\"0xb0e8f990d5d6fd39a9aef9cc2205dde67cf455cdcf5affb2131e19af78043c46\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b5f5ce55dcabec0ced8f428595e10058fbbfa1716acaec3efc9d5abd3dc8d944\",\"dweb:/ipfs/QmPJifoX1cAj9pL23g2Vnn91iSsS3MbBWuQ1CuCkxE8Q1N\"]},\"src/v0.8/ccip/libraries/USDPriceWith18Decimals.sol\":{\"keccak256\":\"0xd7d9e93ac856e28332937deed4b55f14e3f0f8a853efa26c60f2493e031d4719\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b8af29486290d159aad38556bad8e95922fdd5b27bffa00de9027592db25c1bf\",\"dweb:/ipfs/QmUVzB3Pv9ZBq5eBoUGvtNjD4aRrZxkkC25ta1iKjFdpAg\"]},\"src/v0.8/shared/access/ConfirmedOwner.sol\":{\"keccak256\":\"0x99d0b0786fe368970009c703f2249bfbc56340ddf1a28b60d2915bb58c34cd72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af0371c1af45db651823b9a3d5af761b08243c78f105166342eee28de356c8dd\",\"dweb:/ipfs/QmPnC9qNDKwJFd5unwLb9pxjrutoe8MWjm5EXHTxq2kJ4x\"]},\"src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"keccak256\":\"0x215529a99534a40e6257ef2282a91ea4a95b66debc3997866406907622efb405\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecc56a2cddb1ba6225ca0cffb07fdf6e24bcc4234cc87710c42a59c0a21ae395\",\"dweb:/ipfs/QmSpW4vkPHeRNZ14beMEk2LEtqY5JQTueNJC4sCT8JaSoc\"]},\"src/v0.8/shared/access/OwnerIsCreator.sol\":{\"keccak256\":\"0x895af02d6a3df2930bbb6ec1f2d68118b492ca6e710ba0c34fcb6b574a0906aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4c69fab5eea1c0448f856a51d7e5736454fe5cc083d36c60bf3ee23bb3d0e8e\",\"dweb:/ipfs/QmP4fYQ9k7xeZms6cwnqnQuuAkRkeE2TWewyvCD8Mrc2DZ\"]},\"src/v0.8/shared/interfaces/IOwnable.sol\":{\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921\",\"dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "struct RateLimiter.Config",
              "name": "config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "isEnabled",
                  "type": "bool"
                },
                {
                  "internalType": "uint128",
                  "name": "capacity",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "rate",
                  "type": "uint128"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyCallableByAdminOrOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "PriceNotFoundForToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AdminSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct RateLimiter.Config",
              "name": "config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "isEnabled",
                  "type": "bool"
                },
                {
                  "internalType": "uint128",
                  "name": "capacity",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "rate",
                  "type": "uint128"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ConfigChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferRequested",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "currentRateLimiterState",
          "outputs": [
            {
              "internalType": "struct RateLimiter.TokenBucket",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint128",
                  "name": "tokens",
                  "type": "uint128"
                },
                {
                  "internalType": "uint32",
                  "name": "lastUpdated",
                  "type": "uint32"
                },
                {
                  "internalType": "bool",
                  "name": "isEnabled",
                  "type": "bool"
                },
                {
                  "internalType": "uint128",
                  "name": "capacity",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "rate",
                  "type": "uint128"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getTokenLimitAdmin",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAdmin"
        },
        {
          "inputs": [
            {
              "internalType": "struct RateLimiter.Config",
              "name": "config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "isEnabled",
                  "type": "bool"
                },
                {
                  "internalType": "uint128",
                  "name": "capacity",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "rate",
                  "type": "uint128"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRateLimiterConfig"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "params": {
              "config": "The RateLimiter.Config containing the capacity and refill rate of the bucket, plus the admin address."
            }
          },
          "currentRateLimiterState()": {
            "returns": {
              "_0": "The token bucket."
            }
          },
          "getTokenLimitAdmin()": {
            "returns": {
              "_0": "the token limit admin address."
            }
          },
          "setAdmin(address)": {
            "details": "setting this to address(0) indicates there is no active admin.",
            "params": {
              "newAdmin": "the address of the new admin."
            }
          },
          "setRateLimiterConfig((bool,uint128,uint128))": {
            "details": "should only be callable by the owner or token limit admin.",
            "params": {
              "config": "The new rate limiter config."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "acceptOwnership()": {
            "notice": "Allows an ownership transfer to be completed by the recipient."
          },
          "currentRateLimiterState()": {
            "notice": "Gets the token bucket with its values for the block it was requested at."
          },
          "getTokenLimitAdmin()": {
            "notice": "Gets the token limit admin address."
          },
          "owner()": {
            "notice": "Get the current owner"
          },
          "setAdmin(address)": {
            "notice": "Sets the token limit admin address."
          },
          "setRateLimiterConfig((bool,uint128,uint128))": {
            "notice": "Sets the rate limited config."
          },
          "transferOwnership(address)": {
            "notice": "Allows an owner to begin transferring ownership to a new address, pending."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ERC3643/=lib/ERC-3643/contracts/",
        "@chainlink/contracts-ccip/=src/v0.8/",
        "@chainlink/contracts/=node_modules/@chainlink/contracts/src/v0.6/",
        "@erc721a/=lib/ERC721A/contracts/",
        "@onchain-id/solidity/contracts/=lib/solidity/contracts/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@prb/test/=lib/prb-test/src/",
        "ERC-3643/=lib/ERC-3643/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/contracts-upgradleable/=lib/openzeppelin-contracts-upgradleable/contracts/",
        "prb-test/=lib/prb-test/src/",
        "solidity/=lib/solidity/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10000
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/v0.8/ccip/AggregateRateLimiter.sol": "AggregateRateLimiter"
      },
      "libraries": {}
    },
    "sources": {
      "src/v0.8/ccip/AggregateRateLimiter.sol": {
        "keccak256": "0xc8834df9e25f868aadb1e9fca49ccf0be6d6e2842792a8c1419f1c27a9706a68",
        "urls": [
          "bzz-raw://cbca5da69d2dcb97eb53f9ecf61ce328e95c84baf772cb3e52fd808f6d71683e",
          "dweb:/ipfs/QmcWhduLWhNgxeAqsA5EsbF5HpE6qwkA698HsfDYFi9MtD"
        ],
        "license": "BUSL-1.1"
      },
      "src/v0.8/ccip/interfaces/IPriceRegistry.sol": {
        "keccak256": "0xa720e33296cbb18dffe5dcf9d7e3c4b4c0532bdd09dec689243bda01d50d07e8",
        "urls": [
          "bzz-raw://aebab6f04456ec25ce4ec289012b9401ec10fb4426c09095595ac4ffca15ae77",
          "dweb:/ipfs/QmfCnSXWSSiXd5pPTYZKkq6NcbpCto6tFM6EGeWqZ6TyMv"
        ],
        "license": "MIT"
      },
      "src/v0.8/ccip/libraries/Client.sol": {
        "keccak256": "0x8af3ac1085c87342373772fb1a0107c7b90258e6bfed318ab2a601a14477e679",
        "urls": [
          "bzz-raw://14395fefc8310c9a355262359c8f51036f83c004982fb600164c2a007629f81e",
          "dweb:/ipfs/QmeCLr8a5bDVyLQm8v947ULgV4CZmUeQPjVyWixzieBD5o"
        ],
        "license": "MIT"
      },
      "src/v0.8/ccip/libraries/Internal.sol": {
        "keccak256": "0x47b734c896e5a286ff0f18d20fd208bc87150ceb724aebda836c681f58fe2013",
        "urls": [
          "bzz-raw://394af09ff5d59cf031fadf2ada0562ea8703f28582034e1ba8edfd673925df20",
          "dweb:/ipfs/Qmdm4N95RKwq6QLce8scsccT5pvNPAccQKt3i4WniUwLaj"
        ],
        "license": "MIT"
      },
      "src/v0.8/ccip/libraries/MerkleMultiProof.sol": {
        "keccak256": "0x9f2e5edd718cd1b5aa7143ca39ee50d7c15b8456ce32c49c10833c9ef3b0eb72",
        "urls": [
          "bzz-raw://c2591501ed4b28164009e58166324634a0ce79a0599ee682d47d825f302a9955",
          "dweb:/ipfs/QmeN35m4PFQDBc1ew2Q5koYNfchf8DcTemUmXVFVSuZV5t"
        ],
        "license": "BUSL-1.1"
      },
      "src/v0.8/ccip/libraries/RateLimiter.sol": {
        "keccak256": "0xb0e8f990d5d6fd39a9aef9cc2205dde67cf455cdcf5affb2131e19af78043c46",
        "urls": [
          "bzz-raw://b5f5ce55dcabec0ced8f428595e10058fbbfa1716acaec3efc9d5abd3dc8d944",
          "dweb:/ipfs/QmPJifoX1cAj9pL23g2Vnn91iSsS3MbBWuQ1CuCkxE8Q1N"
        ],
        "license": "BUSL-1.1"
      },
      "src/v0.8/ccip/libraries/USDPriceWith18Decimals.sol": {
        "keccak256": "0xd7d9e93ac856e28332937deed4b55f14e3f0f8a853efa26c60f2493e031d4719",
        "urls": [
          "bzz-raw://b8af29486290d159aad38556bad8e95922fdd5b27bffa00de9027592db25c1bf",
          "dweb:/ipfs/QmUVzB3Pv9ZBq5eBoUGvtNjD4aRrZxkkC25ta1iKjFdpAg"
        ],
        "license": "BUSL-1.1"
      },
      "src/v0.8/shared/access/ConfirmedOwner.sol": {
        "keccak256": "0x99d0b0786fe368970009c703f2249bfbc56340ddf1a28b60d2915bb58c34cd72",
        "urls": [
          "bzz-raw://af0371c1af45db651823b9a3d5af761b08243c78f105166342eee28de356c8dd",
          "dweb:/ipfs/QmPnC9qNDKwJFd5unwLb9pxjrutoe8MWjm5EXHTxq2kJ4x"
        ],
        "license": "MIT"
      },
      "src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol": {
        "keccak256": "0x215529a99534a40e6257ef2282a91ea4a95b66debc3997866406907622efb405",
        "urls": [
          "bzz-raw://ecc56a2cddb1ba6225ca0cffb07fdf6e24bcc4234cc87710c42a59c0a21ae395",
          "dweb:/ipfs/QmSpW4vkPHeRNZ14beMEk2LEtqY5JQTueNJC4sCT8JaSoc"
        ],
        "license": "MIT"
      },
      "src/v0.8/shared/access/OwnerIsCreator.sol": {
        "keccak256": "0x895af02d6a3df2930bbb6ec1f2d68118b492ca6e710ba0c34fcb6b574a0906aa",
        "urls": [
          "bzz-raw://c4c69fab5eea1c0448f856a51d7e5736454fe5cc083d36c60bf3ee23bb3d0e8e",
          "dweb:/ipfs/QmP4fYQ9k7xeZms6cwnqnQuuAkRkeE2TWewyvCD8Mrc2DZ"
        ],
        "license": "MIT"
      },
      "src/v0.8/shared/interfaces/IOwnable.sol": {
        "keccak256": "0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767",
        "urls": [
          "bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921",
          "dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/v0.8/ccip/AggregateRateLimiter.sol",
    "id": 67178,
    "exportedSymbols": {
      "AggregateRateLimiter": [
        67177
      ],
      "Client": [
        71303
      ],
      "IPriceRegistry": [
        71055
      ],
      "OwnerIsCreator": [
        122449
      ],
      "RateLimiter": [
        72194
      ],
      "USDPriceWith18Decimals": [
        72233
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:3826:100",
    "nodes": [
      {
        "id": 66966,
        "nodeType": "PragmaDirective",
        "src": "37:24:100",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 66968,
        "nodeType": "ImportDirective",
        "src": "63:63:100",
        "nodes": [],
        "absolutePath": "src/v0.8/ccip/interfaces/IPriceRegistry.sol",
        "file": "./interfaces/IPriceRegistry.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 67178,
        "sourceUnit": 71056,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66967,
              "name": "IPriceRegistry",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 71055,
              "src": "71:14:100",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66970,
        "nodeType": "ImportDirective",
        "src": "128:69:100",
        "nodes": [],
        "absolutePath": "src/v0.8/shared/access/OwnerIsCreator.sol",
        "file": "./../shared/access/OwnerIsCreator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 67178,
        "sourceUnit": 122450,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66969,
              "name": "OwnerIsCreator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 122449,
              "src": "136:14:100",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66972,
        "nodeType": "ImportDirective",
        "src": "198:46:100",
        "nodes": [],
        "absolutePath": "src/v0.8/ccip/libraries/Client.sol",
        "file": "./libraries/Client.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 67178,
        "sourceUnit": 71304,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66971,
              "name": "Client",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 71303,
              "src": "206:6:100",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66974,
        "nodeType": "ImportDirective",
        "src": "245:56:100",
        "nodes": [],
        "absolutePath": "src/v0.8/ccip/libraries/RateLimiter.sol",
        "file": "./libraries/RateLimiter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 67178,
        "sourceUnit": 72195,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66973,
              "name": "RateLimiter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 72194,
              "src": "253:11:100",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66976,
        "nodeType": "ImportDirective",
        "src": "302:78:100",
        "nodes": [],
        "absolutePath": "src/v0.8/ccip/libraries/USDPriceWith18Decimals.sol",
        "file": "./libraries/USDPriceWith18Decimals.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 67178,
        "sourceUnit": 72234,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66975,
              "name": "USDPriceWith18Decimals",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 72233,
              "src": "310:22:100",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 67177,
        "nodeType": "ContractDefinition",
        "src": "630:3232:100",
        "nodes": [
          {
            "id": 66983,
            "nodeType": "UsingForDirective",
            "src": "682:46:100",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 66980,
              "name": "RateLimiter",
              "nameLocations": [
                "688:11:100"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 72194,
              "src": "688:11:100"
            },
            "typeName": {
              "id": 66982,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 66981,
                "name": "RateLimiter.TokenBucket",
                "nameLocations": [
                  "704:11:100",
                  "716:11:100"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 71855,
                "src": "704:23:100"
              },
              "referencedDeclaration": 71855,
              "src": "704:23:100",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_TokenBucket_$71855_storage_ptr",
                "typeString": "struct RateLimiter.TokenBucket"
              }
            }
          },
          {
            "id": 66986,
            "nodeType": "UsingForDirective",
            "src": "731:41:100",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 66984,
              "name": "USDPriceWith18Decimals",
              "nameLocations": [
                "737:22:100"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 72233,
              "src": "737:22:100"
            },
            "typeName": {
              "id": 66985,
              "name": "uint224",
              "nodeType": "ElementaryTypeName",
              "src": "764:7:100",
              "typeDescriptions": {
                "typeIdentifier": "t_uint224",
                "typeString": "uint224"
              }
            }
          },
          {
            "id": 66990,
            "nodeType": "ErrorDefinition",
            "src": "776:43:100",
            "nodes": [],
            "errorSelector": "9a655f7b",
            "name": "PriceNotFoundForToken",
            "nameLocation": "782:21:100",
            "parameters": {
              "id": 66989,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66988,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "812:5:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 66990,
                  "src": "804:13:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66987,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "804:7:100",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "803:15:100"
            }
          },
          {
            "id": 66994,
            "nodeType": "EventDefinition",
            "src": "823:33:100",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "8fe72c3e0020beb3234e76ae6676fa576fbfcae600af1c4fea44784cf0db329c",
            "name": "AdminSet",
            "nameLocation": "829:8:100",
            "parameters": {
              "id": 66993,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66992,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newAdmin",
                  "nameLocation": "846:8:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 66994,
                  "src": "838:16:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66991,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "838:7:100",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "837:18:100"
            }
          },
          {
            "id": 66996,
            "nodeType": "VariableDeclaration",
            "src": "946:24:100",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "s_admin",
            "nameLocation": "963:7:100",
            "scope": 67177,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 66995,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "946:7:100",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 66999,
            "nodeType": "VariableDeclaration",
            "src": "1036:45:100",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "s_rateLimiter",
            "nameLocation": "1068:13:100",
            "scope": 67177,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_TokenBucket_$71855_storage",
              "typeString": "struct RateLimiter.TokenBucket"
            },
            "typeName": {
              "id": 66998,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 66997,
                "name": "RateLimiter.TokenBucket",
                "nameLocations": [
                  "1036:11:100",
                  "1048:11:100"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 71855,
                "src": "1036:23:100"
              },
              "referencedDeclaration": 71855,
              "src": "1036:23:100",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_TokenBucket_$71855_storage_ptr",
                "typeString": "struct RateLimiter.TokenBucket"
              }
            },
            "visibility": "private"
          },
          {
            "id": 67026,
            "nodeType": "FunctionDefinition",
            "src": "1214:272:100",
            "nodes": [],
            "body": {
              "id": 67025,
              "nodeType": "Block",
              "src": "1260:226:100",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 67023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 67006,
                      "name": "s_rateLimiter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66999,
                      "src": "1266:13:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenBucket_$71855_storage",
                        "typeString": "struct RateLimiter.TokenBucket storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 67009,
                            "name": "config",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67003,
                            "src": "1320:6:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Config_$71862_memory_ptr",
                              "typeString": "struct RateLimiter.Config memory"
                            }
                          },
                          "id": 67010,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1327:4:100",
                          "memberName": "rate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 71861,
                          "src": "1320:11:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "expression": {
                            "id": 67011,
                            "name": "config",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67003,
                            "src": "1349:6:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Config_$71862_memory_ptr",
                              "typeString": "struct RateLimiter.Config memory"
                            }
                          },
                          "id": 67012,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1356:8:100",
                          "memberName": "capacity",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 71859,
                          "src": "1349:15:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "expression": {
                            "id": 67013,
                            "name": "config",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67003,
                            "src": "1380:6:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Config_$71862_memory_ptr",
                              "typeString": "struct RateLimiter.Config memory"
                            }
                          },
                          "id": 67014,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1387:8:100",
                          "memberName": "capacity",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 71859,
                          "src": "1380:15:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 67017,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "1423:5:100",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 67018,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1429:9:100",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "1423:15:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 67016,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1416:6:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint32_$",
                              "typeString": "type(uint32)"
                            },
                            "typeName": {
                              "id": 67015,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1416:6:100",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 67019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1416:23:100",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "expression": {
                            "id": 67020,
                            "name": "config",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67003,
                            "src": "1458:6:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Config_$71862_memory_ptr",
                              "typeString": "struct RateLimiter.Config memory"
                            }
                          },
                          "id": 67021,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1465:9:100",
                          "memberName": "isEnabled",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 71857,
                          "src": "1458:16:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "id": 67007,
                          "name": "RateLimiter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 72194,
                          "src": "1282:11:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_RateLimiter_$72194_$",
                            "typeString": "type(library RateLimiter)"
                          }
                        },
                        "id": 67008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1294:11:100",
                        "memberName": "TokenBucket",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 71855,
                        "src": "1282:23:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_TokenBucket_$71855_storage_ptr_$",
                          "typeString": "type(struct RateLimiter.TokenBucket storage pointer)"
                        }
                      },
                      "id": 67022,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "1314:4:100",
                        "1339:8:100",
                        "1372:6:100",
                        "1403:11:100",
                        "1447:9:100"
                      ],
                      "names": [
                        "rate",
                        "capacity",
                        "tokens",
                        "lastUpdated",
                        "isEnabled"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1282:199:100",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenBucket_$71855_memory_ptr",
                        "typeString": "struct RateLimiter.TokenBucket memory"
                      }
                    },
                    "src": "1266:215:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenBucket_$71855_storage",
                      "typeString": "struct RateLimiter.TokenBucket storage ref"
                    }
                  },
                  "id": 67024,
                  "nodeType": "ExpressionStatement",
                  "src": "1266:215:100"
                }
              ]
            },
            "documentation": {
              "id": 67000,
              "nodeType": "StructuredDocumentation",
              "src": "1086:125:100",
              "text": "@param config The RateLimiter.Config containing the capacity and refill rate\n of the bucket, plus the admin address."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 67004,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67003,
                  "mutability": "mutable",
                  "name": "config",
                  "nameLocation": "1252:6:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 67026,
                  "src": "1226:32:100",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Config_$71862_memory_ptr",
                    "typeString": "struct RateLimiter.Config"
                  },
                  "typeName": {
                    "id": 67002,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 67001,
                      "name": "RateLimiter.Config",
                      "nameLocations": [
                        "1226:11:100",
                        "1238:6:100"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 71862,
                      "src": "1226:18:100"
                    },
                    "referencedDeclaration": 71862,
                    "src": "1226:18:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Config_$71862_storage_ptr",
                      "typeString": "struct RateLimiter.Config"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1225:34:100"
            },
            "returnParameters": {
              "id": 67005,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1260:0:100"
            },
            "scope": 67177,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 67101,
            "nodeType": "FunctionDefinition",
            "src": "1614:699:100",
            "nodes": [],
            "body": {
              "id": 67100,
              "nodeType": "Block",
              "src": "1723:590:100",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    67038
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 67038,
                      "mutability": "mutable",
                      "name": "numberOfTokens",
                      "nameLocation": "1737:14:100",
                      "nodeType": "VariableDeclaration",
                      "scope": 67100,
                      "src": "1729:22:100",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 67037,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1729:7:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 67041,
                  "initialValue": {
                    "expression": {
                      "id": 67039,
                      "name": "tokenAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67031,
                      "src": "1754:12:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$71255_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Client.EVMTokenAmount memory[] memory"
                      }
                    },
                    "id": 67040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1767:6:100",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "1754:19:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1729:44:100"
                },
                {
                  "assignments": [
                    67043
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 67043,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "1788:5:100",
                      "nodeType": "VariableDeclaration",
                      "scope": 67100,
                      "src": "1780:13:100",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 67042,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1780:7:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 67045,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 67044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1796:1:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1780:17:100"
                },
                {
                  "body": {
                    "id": 67088,
                    "nodeType": "Block",
                    "src": "1848:413:100",
                    "statements": [
                      {
                        "assignments": [
                          67057
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 67057,
                            "mutability": "mutable",
                            "name": "pricePerToken",
                            "nameLocation": "2016:13:100",
                            "nodeType": "VariableDeclaration",
                            "scope": 67088,
                            "src": "2008:21:100",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint224",
                              "typeString": "uint224"
                            },
                            "typeName": {
                              "id": 67056,
                              "name": "uint224",
                              "nodeType": "ElementaryTypeName",
                              "src": "2008:7:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint224",
                                "typeString": "uint224"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 67066,
                        "initialValue": {
                          "expression": {
                            "arguments": [
                              {
                                "expression": {
                                  "baseExpression": {
                                    "id": 67060,
                                    "name": "tokenAmounts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 67031,
                                    "src": "2060:12:100",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$71255_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct Client.EVMTokenAmount memory[] memory"
                                    }
                                  },
                                  "id": 67062,
                                  "indexExpression": {
                                    "id": 67061,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 67047,
                                    "src": "2073:1:100",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2060:15:100",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_EVMTokenAmount_$71255_memory_ptr",
                                    "typeString": "struct Client.EVMTokenAmount memory"
                                  }
                                },
                                "id": 67063,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2076:5:100",
                                "memberName": "token",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 71252,
                                "src": "2060:21:100",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 67058,
                                "name": "priceRegistry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67034,
                                "src": "2032:13:100",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IPriceRegistry_$71055",
                                  "typeString": "contract IPriceRegistry"
                                }
                              },
                              "id": 67059,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2046:13:100",
                              "memberName": "getTokenPrice",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 71002,
                              "src": "2032:27:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_struct$_TimestampedPackedUint224_$71348_memory_ptr_$",
                                "typeString": "function (address) view external returns (struct Internal.TimestampedPackedUint224 memory)"
                              }
                            },
                            "id": 67064,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2032:50:100",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TimestampedPackedUint224_$71348_memory_ptr",
                              "typeString": "struct Internal.TimestampedPackedUint224 memory"
                            }
                          },
                          "id": 67065,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2083:5:100",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 71345,
                          "src": "2032:56:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint224",
                            "typeString": "uint224"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2008:80:100"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint224",
                            "typeString": "uint224"
                          },
                          "id": 67069,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 67067,
                            "name": "pricePerToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67057,
                            "src": "2100:13:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint224",
                              "typeString": "uint224"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 67068,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2117:1:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2100:18:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 67077,
                        "nodeType": "IfStatement",
                        "src": "2096:75:100",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [
                              {
                                "expression": {
                                  "baseExpression": {
                                    "id": 67071,
                                    "name": "tokenAmounts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 67031,
                                    "src": "2149:12:100",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$71255_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct Client.EVMTokenAmount memory[] memory"
                                    }
                                  },
                                  "id": 67073,
                                  "indexExpression": {
                                    "id": 67072,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 67047,
                                    "src": "2162:1:100",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2149:15:100",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_EVMTokenAmount_$71255_memory_ptr",
                                    "typeString": "struct Client.EVMTokenAmount memory"
                                  }
                                },
                                "id": 67074,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2165:5:100",
                                "memberName": "token",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 71252,
                                "src": "2149:21:100",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 67070,
                              "name": "PriceNotFoundForToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66990,
                              "src": "2127:21:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                "typeString": "function (address) pure"
                              }
                            },
                            "id": 67075,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2127:44:100",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 67076,
                          "nodeType": "RevertStatement",
                          "src": "2120:51:100"
                        }
                      },
                      {
                        "expression": {
                          "id": 67086,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 67078,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67043,
                            "src": "2179:5:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "baseExpression": {
                                    "id": 67081,
                                    "name": "tokenAmounts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 67031,
                                    "src": "2231:12:100",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$71255_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct Client.EVMTokenAmount memory[] memory"
                                    }
                                  },
                                  "id": 67083,
                                  "indexExpression": {
                                    "id": 67082,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 67047,
                                    "src": "2244:1:100",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2231:15:100",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_EVMTokenAmount_$71255_memory_ptr",
                                    "typeString": "struct Client.EVMTokenAmount memory"
                                  }
                                },
                                "id": 67084,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2247:6:100",
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 71254,
                                "src": "2231:22:100",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 67079,
                                "name": "pricePerToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67057,
                                "src": "2188:13:100",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint224",
                                  "typeString": "uint224"
                                }
                              },
                              "id": 67080,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2202:28:100",
                              "memberName": "_calcUSDValueFromTokenAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 72214,
                              "src": "2188:42:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint224_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint224_$",
                                "typeString": "function (uint224,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 67085,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2188:66:100",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2179:75:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 67087,
                        "nodeType": "ExpressionStatement",
                        "src": "2179:75:100"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 67052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 67050,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67047,
                      "src": "1823:1:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 67051,
                      "name": "numberOfTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67038,
                      "src": "1827:14:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1823:18:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 67089,
                  "initializationExpression": {
                    "assignments": [
                      67047
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 67047,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1816:1:100",
                        "nodeType": "VariableDeclaration",
                        "scope": 67089,
                        "src": "1808:9:100",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 67046,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1808:7:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 67049,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 67048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1820:1:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1808:13:100"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 67054,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "1843:3:100",
                      "subExpression": {
                        "id": 67053,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67047,
                        "src": "1845:1:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 67055,
                    "nodeType": "ExpressionStatement",
                    "src": "1843:3:100"
                  },
                  "nodeType": "ForStatement",
                  "src": "1803:458:100"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 67093,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67043,
                        "src": "2290:5:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 67096,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2305:1:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 67095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2297:7:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 67094,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2297:7:100",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 67097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2297:10:100",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 67090,
                        "name": "s_rateLimiter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66999,
                        "src": "2267:13:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenBucket_$71855_storage",
                          "typeString": "struct RateLimiter.TokenBucket storage ref"
                        }
                      },
                      "id": 67092,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2281:8:100",
                      "memberName": "_consume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72017,
                      "src": "2267:22:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TokenBucket_$71855_storage_ptr_$_t_uint256_$_t_address_$returns$__$attached_to$_t_struct$_TokenBucket_$71855_storage_ptr_$",
                        "typeString": "function (struct RateLimiter.TokenBucket storage pointer,uint256,address)"
                      }
                    },
                    "id": 67098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2267:41:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67099,
                  "nodeType": "ExpressionStatement",
                  "src": "2267:41:100"
                }
              ]
            },
            "documentation": {
              "id": 67027,
              "nodeType": "StructuredDocumentation",
              "src": "1490:121:100",
              "text": "@notice Consumes value from the rate limiter bucket based on the\n token value given. First, calculate the prices"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_rateLimitValue",
            "nameLocation": "1623:15:100",
            "parameters": {
              "id": 67035,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67031,
                  "mutability": "mutable",
                  "name": "tokenAmounts",
                  "nameLocation": "1670:12:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 67101,
                  "src": "1639:43:100",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$71255_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Client.EVMTokenAmount[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 67029,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 67028,
                        "name": "Client.EVMTokenAmount",
                        "nameLocations": [
                          "1639:6:100",
                          "1646:14:100"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 71255,
                        "src": "1639:21:100"
                      },
                      "referencedDeclaration": 71255,
                      "src": "1639:21:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EVMTokenAmount_$71255_storage_ptr",
                        "typeString": "struct Client.EVMTokenAmount"
                      }
                    },
                    "id": 67030,
                    "nodeType": "ArrayTypeName",
                    "src": "1639:23:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$71255_storage_$dyn_storage_ptr",
                      "typeString": "struct Client.EVMTokenAmount[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67034,
                  "mutability": "mutable",
                  "name": "priceRegistry",
                  "nameLocation": "1699:13:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 67101,
                  "src": "1684:28:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPriceRegistry_$71055",
                    "typeString": "contract IPriceRegistry"
                  },
                  "typeName": {
                    "id": 67033,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 67032,
                      "name": "IPriceRegistry",
                      "nameLocations": [
                        "1684:14:100"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 71055,
                      "src": "1684:14:100"
                    },
                    "referencedDeclaration": 71055,
                    "src": "1684:14:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPriceRegistry_$71055",
                      "typeString": "contract IPriceRegistry"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1638:75:100"
            },
            "returnParameters": {
              "id": 67036,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1723:0:100"
            },
            "scope": 67177,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 67113,
            "nodeType": "FunctionDefinition",
            "src": "2436:148:100",
            "nodes": [],
            "body": {
              "id": 67112,
              "nodeType": "Block",
              "src": "2526:58:100",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 67108,
                        "name": "s_rateLimiter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66999,
                        "src": "2539:13:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenBucket_$71855_storage",
                          "typeString": "struct RateLimiter.TokenBucket storage ref"
                        }
                      },
                      "id": 67109,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2553:24:100",
                      "memberName": "_currentTokenBucketState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72061,
                      "src": "2539:38:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_TokenBucket_$71855_memory_ptr_$returns$_t_struct$_TokenBucket_$71855_memory_ptr_$attached_to$_t_struct$_TokenBucket_$71855_memory_ptr_$",
                        "typeString": "function (struct RateLimiter.TokenBucket memory) view returns (struct RateLimiter.TokenBucket memory)"
                      }
                    },
                    "id": 67110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2539:40:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenBucket_$71855_memory_ptr",
                      "typeString": "struct RateLimiter.TokenBucket memory"
                    }
                  },
                  "functionReturnParameters": 67107,
                  "id": 67111,
                  "nodeType": "Return",
                  "src": "2532:47:100"
                }
              ]
            },
            "documentation": {
              "id": 67102,
              "nodeType": "StructuredDocumentation",
              "src": "2317:116:100",
              "text": "@notice Gets the token bucket with its values for the block it was requested at.\n @return The token bucket."
            },
            "functionSelector": "546719cd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "currentRateLimiterState",
            "nameLocation": "2445:23:100",
            "parameters": {
              "id": 67103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2468:2:100"
            },
            "returnParameters": {
              "id": 67107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67106,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 67113,
                  "src": "2494:30:100",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TokenBucket_$71855_memory_ptr",
                    "typeString": "struct RateLimiter.TokenBucket"
                  },
                  "typeName": {
                    "id": 67105,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 67104,
                      "name": "RateLimiter.TokenBucket",
                      "nameLocations": [
                        "2494:11:100",
                        "2506:11:100"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 71855,
                      "src": "2494:23:100"
                    },
                    "referencedDeclaration": 71855,
                    "src": "2494:23:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenBucket_$71855_storage_ptr",
                      "typeString": "struct RateLimiter.TokenBucket"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2493:32:100"
            },
            "scope": 67177,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67129,
            "nodeType": "FunctionDefinition",
            "src": "2751:144:100",
            "nodes": [],
            "body": {
              "id": 67128,
              "nodeType": "Block",
              "src": "2841:54:100",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 67125,
                        "name": "config",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67117,
                        "src": "2883:6:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Config_$71862_memory_ptr",
                          "typeString": "struct RateLimiter.Config memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Config_$71862_memory_ptr",
                          "typeString": "struct RateLimiter.Config memory"
                        }
                      ],
                      "expression": {
                        "id": 67122,
                        "name": "s_rateLimiter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66999,
                        "src": "2847:13:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenBucket_$71855_storage",
                          "typeString": "struct RateLimiter.TokenBucket storage ref"
                        }
                      },
                      "id": 67124,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2861:21:100",
                      "memberName": "_setTokenBucketConfig",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72151,
                      "src": "2847:35:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TokenBucket_$71855_storage_ptr_$_t_struct$_Config_$71862_memory_ptr_$returns$__$attached_to$_t_struct$_TokenBucket_$71855_storage_ptr_$",
                        "typeString": "function (struct RateLimiter.TokenBucket storage pointer,struct RateLimiter.Config memory)"
                      }
                    },
                    "id": 67126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2847:43:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67127,
                  "nodeType": "ExpressionStatement",
                  "src": "2847:43:100"
                }
              ]
            },
            "documentation": {
              "id": 67114,
              "nodeType": "StructuredDocumentation",
              "src": "2588:160:100",
              "text": "@notice Sets the rate limited config.\n @param config The new rate limiter config.\n @dev should only be callable by the owner or token limit admin."
            },
            "functionSelector": "c92b2832",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 67120,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 67119,
                  "name": "onlyAdminOrOwner",
                  "nameLocations": [
                    "2824:16:100"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 67176,
                  "src": "2824:16:100"
                },
                "nodeType": "ModifierInvocation",
                "src": "2824:16:100"
              }
            ],
            "name": "setRateLimiterConfig",
            "nameLocation": "2760:20:100",
            "parameters": {
              "id": 67118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67117,
                  "mutability": "mutable",
                  "name": "config",
                  "nameLocation": "2807:6:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 67129,
                  "src": "2781:32:100",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Config_$71862_memory_ptr",
                    "typeString": "struct RateLimiter.Config"
                  },
                  "typeName": {
                    "id": 67116,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 67115,
                      "name": "RateLimiter.Config",
                      "nameLocations": [
                        "2781:11:100",
                        "2793:6:100"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 71862,
                      "src": "2781:18:100"
                    },
                    "referencedDeclaration": 71862,
                    "src": "2781:18:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Config_$71862_storage_ptr",
                      "typeString": "struct RateLimiter.Config"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2780:34:100"
            },
            "returnParameters": {
              "id": 67121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2841:0:100"
            },
            "scope": 67177,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67138,
            "nodeType": "FunctionDefinition",
            "src": "3209:87:100",
            "nodes": [],
            "body": {
              "id": 67137,
              "nodeType": "Block",
              "src": "3271:25:100",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 67135,
                    "name": "s_admin",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 66996,
                    "src": "3284:7:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 67134,
                  "id": 67136,
                  "nodeType": "Return",
                  "src": "3277:14:100"
                }
              ]
            },
            "documentation": {
              "id": 67130,
              "nodeType": "StructuredDocumentation",
              "src": "3114:92:100",
              "text": "@notice Gets the token limit admin address.\n @return the token limit admin address."
            },
            "functionSelector": "599f6431",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenLimitAdmin",
            "nameLocation": "3218:18:100",
            "parameters": {
              "id": 67131,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3236:2:100"
            },
            "returnParameters": {
              "id": 67134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67133,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 67138,
                  "src": "3262:7:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67132,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3262:7:100",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3261:9:100"
            },
            "scope": 67177,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67155,
            "nodeType": "FunctionDefinition",
            "src": "3476:120:100",
            "nodes": [],
            "body": {
              "id": 67154,
              "nodeType": "Block",
              "src": "3538:58:100",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 67148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 67146,
                      "name": "s_admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66996,
                      "src": "3544:7:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 67147,
                      "name": "newAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67141,
                      "src": "3554:8:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3544:18:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 67149,
                  "nodeType": "ExpressionStatement",
                  "src": "3544:18:100"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 67151,
                        "name": "newAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67141,
                        "src": "3582:8:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 67150,
                      "name": "AdminSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66994,
                      "src": "3573:8:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 67152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3573:18:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67153,
                  "nodeType": "EmitStatement",
                  "src": "3568:23:100"
                }
              ]
            },
            "documentation": {
              "id": 67139,
              "nodeType": "StructuredDocumentation",
              "src": "3300:173:100",
              "text": "@notice Sets the token limit admin address.\n @param newAdmin the address of the new admin.\n @dev setting this to address(0) indicates there is no active admin."
            },
            "functionSelector": "704b6c02",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 67144,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 67143,
                  "name": "onlyAdminOrOwner",
                  "nameLocations": [
                    "3521:16:100"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 67176,
                  "src": "3521:16:100"
                },
                "nodeType": "ModifierInvocation",
                "src": "3521:16:100"
              }
            ],
            "name": "setAdmin",
            "nameLocation": "3485:8:100",
            "parameters": {
              "id": 67142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67141,
                  "mutability": "mutable",
                  "name": "newAdmin",
                  "nameLocation": "3502:8:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 67155,
                  "src": "3494:16:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67140,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3494:7:100",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3493:18:100"
            },
            "returnParameters": {
              "id": 67145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3538:0:100"
            },
            "scope": 67177,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67176,
            "nodeType": "ModifierDefinition",
            "src": "3715:145:100",
            "nodes": [],
            "body": {
              "id": 67175,
              "nodeType": "Block",
              "src": "3743:117:100",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 67167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 67162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 67158,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3753:3:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 67159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3757:6:100",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3753:10:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 67160,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 122387,
                          "src": "3767:5:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 67161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3767:7:100",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3753:21:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 67166,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 67163,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3778:3:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 67164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3782:6:100",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3778:10:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 67165,
                        "name": "s_admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66996,
                        "src": "3792:7:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3778:21:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3753:46:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 67173,
                  "nodeType": "IfStatement",
                  "src": "3749:99:100",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 67168,
                          "name": "RateLimiter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 72194,
                          "src": "3808:11:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_RateLimiter_$72194_$",
                            "typeString": "type(library RateLimiter)"
                          }
                        },
                        "id": 67170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3820:26:100",
                        "memberName": "OnlyCallableByAdminOrOwner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 71807,
                        "src": "3808:38:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 67171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3808:40:100",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 67172,
                    "nodeType": "RevertStatement",
                    "src": "3801:47:100"
                  }
                },
                {
                  "id": 67174,
                  "nodeType": "PlaceholderStatement",
                  "src": "3854:1:100"
                }
              ]
            },
            "documentation": {
              "id": 67156,
              "nodeType": "StructuredDocumentation",
              "src": "3600:112:100",
              "text": "@notice a modifier that allows the owner or the s_tokenLimitAdmin call the functions\n it is applied to."
            },
            "name": "onlyAdminOrOwner",
            "nameLocation": "3724:16:100",
            "parameters": {
              "id": 67157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3740:2:100"
            },
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 66978,
              "name": "OwnerIsCreator",
              "nameLocations": [
                "663:14:100"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 122449,
              "src": "663:14:100"
            },
            "id": 66979,
            "nodeType": "InheritanceSpecifier",
            "src": "663:14:100"
          }
        ],
        "canonicalName": "AggregateRateLimiter",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 66977,
          "nodeType": "StructuredDocumentation",
          "src": "382:248:100",
          "text": "@notice The aggregate rate limiter is a wrapper of the token bucket rate limiter\n which permits rate limiting based on the aggregate value of a group of\n token transfers, using a price registry to convert to a numeraire asset (e.g. USD)."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          67177,
          122449,
          122271,
          122433,
          122895
        ],
        "name": "AggregateRateLimiter",
        "nameLocation": "639:20:100",
        "scope": 67178,
        "usedErrors": [
          66990,
          71807
        ],
        "usedEvents": [
          66994,
          71844,
          122287,
          122293
        ]
      }
    ],
    "license": "BUSL-1.1"
  },
  "id": 100
}
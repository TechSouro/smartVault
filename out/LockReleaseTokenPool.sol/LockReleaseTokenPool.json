{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "allowlist",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "armProxy",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "acceptLiquidity",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "capacity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "requested",
          "type": "uint256"
        }
      ],
      "name": "AggregateValueMaxCapacityExceeded",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "minWaitInSeconds",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "available",
          "type": "uint256"
        }
      ],
      "name": "AggregateValueRateLimitReached",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AllowListNotEnabled",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BadARMSignal",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BucketOverfilled",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientLiquidity",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LiquidityNotAccepted",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "ramp",
          "type": "address"
        }
      ],
      "name": "NonExistentRamp",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PermissionsError",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "ramp",
          "type": "address"
        }
      ],
      "name": "RampAlreadyExists",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "SenderNotAllowed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "capacity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "requested",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "TokenMaxCapacityExceeded",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "minWaitInSeconds",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "available",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "TokenRateLimitReached",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "WithdrawalTooHigh",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroAddressNotAllowed",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "AllowListAdd",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "AllowListRemove",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Burned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "isEnabled",
              "type": "bool"
            },
            {
              "internalType": "uint128",
              "name": "capacity",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "rate",
              "type": "uint128"
            }
          ],
          "indexed": false,
          "internalType": "struct RateLimiter.Config",
          "name": "config",
          "type": "tuple"
        }
      ],
      "name": "ConfigChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "provider",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "LiquidityAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "provider",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "LiquidityRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Locked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Minted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "offRamp",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "isEnabled",
              "type": "bool"
            },
            {
              "internalType": "uint128",
              "name": "capacity",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "rate",
              "type": "uint128"
            }
          ],
          "indexed": false,
          "internalType": "struct RateLimiter.Config",
          "name": "rateLimiterConfig",
          "type": "tuple"
        }
      ],
      "name": "OffRampAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "offRamp",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "isEnabled",
              "type": "bool"
            },
            {
              "internalType": "uint128",
              "name": "capacity",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "rate",
              "type": "uint128"
            }
          ],
          "indexed": false,
          "internalType": "struct RateLimiter.Config",
          "name": "rateLimiterConfig",
          "type": "tuple"
        }
      ],
      "name": "OffRampConfigured",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "offRamp",
          "type": "address"
        }
      ],
      "name": "OffRampRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "onRamp",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "isEnabled",
              "type": "bool"
            },
            {
              "internalType": "uint128",
              "name": "capacity",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "rate",
              "type": "uint128"
            }
          ],
          "indexed": false,
          "internalType": "struct RateLimiter.Config",
          "name": "rateLimiterConfig",
          "type": "tuple"
        }
      ],
      "name": "OnRampAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "onRamp",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "isEnabled",
              "type": "bool"
            },
            {
              "internalType": "uint128",
              "name": "capacity",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "rate",
              "type": "uint128"
            }
          ],
          "indexed": false,
          "internalType": "struct RateLimiter.Config",
          "name": "rateLimiterConfig",
          "type": "tuple"
        }
      ],
      "name": "OnRampConfigured",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "onRamp",
          "type": "address"
        }
      ],
      "name": "OnRampRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferRequested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Released",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "TokensConsumed",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "addLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "removes",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "adds",
          "type": "address[]"
        }
      ],
      "name": "applyAllowListUpdates",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "ramp",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "allowed",
              "type": "bool"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "isEnabled",
                  "type": "bool"
                },
                {
                  "internalType": "uint128",
                  "name": "capacity",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "rate",
                  "type": "uint128"
                }
              ],
              "internalType": "struct RateLimiter.Config",
              "name": "rateLimiterConfig",
              "type": "tuple"
            }
          ],
          "internalType": "struct TokenPool.RampUpdate[]",
          "name": "onRamps",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "ramp",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "allowed",
              "type": "bool"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "isEnabled",
                  "type": "bool"
                },
                {
                  "internalType": "uint128",
                  "name": "capacity",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "rate",
                  "type": "uint128"
                }
              ],
              "internalType": "struct RateLimiter.Config",
              "name": "rateLimiterConfig",
              "type": "tuple"
            }
          ],
          "internalType": "struct TokenPool.RampUpdate[]",
          "name": "offRamps",
          "type": "tuple[]"
        }
      ],
      "name": "applyRampUpdates",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "canAcceptLiquidity",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "offRamp",
          "type": "address"
        }
      ],
      "name": "currentOffRampRateLimiterState",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "tokens",
              "type": "uint128"
            },
            {
              "internalType": "uint32",
              "name": "lastUpdated",
              "type": "uint32"
            },
            {
              "internalType": "bool",
              "name": "isEnabled",
              "type": "bool"
            },
            {
              "internalType": "uint128",
              "name": "capacity",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "rate",
              "type": "uint128"
            }
          ],
          "internalType": "struct RateLimiter.TokenBucket",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "onRamp",
          "type": "address"
        }
      ],
      "name": "currentOnRampRateLimiterState",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "tokens",
              "type": "uint128"
            },
            {
              "internalType": "uint32",
              "name": "lastUpdated",
              "type": "uint32"
            },
            {
              "internalType": "bool",
              "name": "isEnabled",
              "type": "bool"
            },
            {
              "internalType": "uint128",
              "name": "capacity",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "rate",
              "type": "uint128"
            }
          ],
          "internalType": "struct RateLimiter.TokenBucket",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllowList",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllowListEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getArmProxy",
      "outputs": [
        {
          "internalType": "address",
          "name": "armProxy",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLockReleaseInterfaceId",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOffRamps",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOnRamps",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "provider",
          "type": "address"
        }
      ],
      "name": "getProvidedLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "offRamp",
          "type": "address"
        }
      ],
      "name": "isOffRamp",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "onRamp",
          "type": "address"
        }
      ],
      "name": "isOnRamp",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "originalSender",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "lockOrBurn",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "releaseOrMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "removeLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "offRamp",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "isEnabled",
              "type": "bool"
            },
            {
              "internalType": "uint128",
              "name": "capacity",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "rate",
              "type": "uint128"
            }
          ],
          "internalType": "struct RateLimiter.Config",
          "name": "config",
          "type": "tuple"
        }
      ],
      "name": "setOffRampRateLimiterConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "onRamp",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "isEnabled",
              "type": "bool"
            },
            {
              "internalType": "uint128",
              "name": "capacity",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "rate",
              "type": "uint128"
            }
          ],
          "internalType": "struct RateLimiter.Config",
          "name": "config",
          "type": "tuple"
        }
      ],
      "name": "setOnRampRateLimiterConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "typeAndVersion",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "743:4400:133:-:0;;;1921:198;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2045:5;2052:9;2063:8;291:10:250;;345:1:248;291:10:250;529:59:249;;;;-1:-1:-1;;;529:59:249;;2264:2:351;529:59:249;;;2246:21:351;2303:2;2283:18;;;2276:30;2342:26;2322:18;;;2315:54;2386:18;;529:59:249;;;;;;;;;595:7;:18;;-1:-1:-1;;;;;;595:18:249;-1:-1:-1;;;;;595:18:249;;;;;;;;;;623:26;;;619:79;;659:32;678:12;659:18;:32::i;:::-;-1:-1:-1;;;;;;;;3517:28:134;;3513:64;;3554:23;;-1:-1:-1;;;3554:23:134;;;;;;;;;;;3513:64;-1:-1:-1;;;;;3583:15:134;;;;;3604:21;;;;3756:16;;:20;;;3735:41;;3782:90;;3837:16;;;3851:1;3837:16;;;;;;;;3814:51;;3855:9;3814:22;:51::i;:::-;-1:-1:-1;;;2079:35:133::1;;;::::0;-1:-1:-1;743:4400:133;;-1:-1:-1;;743:4400:133;1482:188:249;1550:10;-1:-1:-1;;;;;1544:16:249;;;1536:52;;;;-1:-1:-1;;;1536:52:249;;2617:2:351;1536:52:249;;;2599:21:351;2656:2;2636:18;;;2629:30;2695:25;2675:18;;;2668:53;2738:18;;1536:52:249;2415:347:351;1536:52:249;1595:14;:19;;-1:-1:-1;;;;;;1595:19:249;-1:-1:-1;;;;;1595:19:249;;;;;;;;;-1:-1:-1;1653:7:249;;1626:39;;1595:19;;1653:7;;1626:39;;-1:-1:-1;1626:39:249;1482:188;:::o;11847:561:134:-;11948:18;;11943:53;;11975:21;;-1:-1:-1;;;11975:21:134;;;;;;;;;;;11943:53;12008:9;12003:179;12027:7;:14;12023:1;:18;12003:179;;;12056:16;12075:7;12083:1;12075:10;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;12097:28:134;:11;12075:10;12097:18;:28::i;:::-;12093:83;;;12142:25;;-1:-1:-1;;;;;3063:32:351;;3045:51;;12142:25:134;;3033:2:351;3018:18;12142:25:134;;;;;;;12093:83;-1:-1:-1;12043:3:134;;;:::i;:::-;;;12003:179;;;;12192:9;12187:217;12211:4;:11;12207:1;:15;12187:217;;;12237:13;12253:4;12258:1;12253:7;;;;;;;;:::i;:::-;;;;;;;12237:23;;12289:1;-1:-1:-1;;;;;12272:19:134;:5;-1:-1:-1;;;;;12272:19:134;;12268:52;;12303:8;;;12268:52;12331:22;:11;12347:5;12331:15;:22::i;:::-;12327:71;;;12370:19;;-1:-1:-1;;;;;3063:32:351;;3045:51;;12370:19:134;;3033:2:351;3018:18;12370:19:134;;;;;;;12327:71;12229:175;12187:217;12224:3;;;:::i;:::-;;;12187:217;;;;11847:561;;:::o;8071:150:346:-;8144:4;8163:53;8171:3;-1:-1:-1;;;;;8191:23:346;;8163:7;:53::i;:::-;8156:60;;8071:150;;;;;:::o;7773:144::-;7843:4;7862:50;7867:3;-1:-1:-1;;;;;7887:23:346;;7862:4;:50::i;2660:1242::-;2726:4;2855:19;;;:12;;;:19;;;;;;2885:15;;2881:1017;;3224:21;3248:14;3261:1;3248:10;:14;:::i;:::-;3290:18;;3224:38;;-1:-1:-1;3270:17:346;;3290:22;;3311:1;;3290:22;:::i;:::-;3270:42;;3338:13;3325:9;:26;3321:352;;3363:17;3383:3;:11;;3395:9;3383:22;;;;;;;;:::i;:::-;;;;;;;;;3363:42;;3518:9;3489:3;:11;;3501:13;3489:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3585:23;;;:12;;;:23;;;;;:36;;;3321:352;3739:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3819:3;:12;;:19;3832:5;3819:19;;;;;;;;;;;3812:26;;;3854:4;3847:11;;;;;;;2881:1017;3886:5;3879:12;;;;;2152:354;2215:4;4067:19;;;:12;;;:19;;;;;;2227:275;;-1:-1:-1;2263:23:346;;;;;;;;:11;:23;;;;;;;;;;;;;2425:18;;2403:19;;;:12;;;:19;;;;;;:40;;;;2451:11;;2227:275;-1:-1:-1;2490:5:346;2483:12;;14:139:351;-1:-1:-1;;;;;97:31:351;;87:42;;77:70;;143:1;140;133:12;77:70;14:139;:::o;158:127::-;219:10;214:3;210:20;207:1;200:31;250:4;247:1;240:15;274:4;271:1;264:15;290:146;369:13;;391:39;369:13;391:39;:::i;:::-;290:146;;;:::o;441:164::-;517:13;;566;;559:21;549:32;;539:60;;595:1;592;585:12;610:1447;746:6;754;762;770;823:3;811:9;802:7;798:23;794:33;791:53;;;840:1;837;830:12;791:53;872:9;866:16;891:39;924:5;891:39;:::i;:::-;973:2;1004:18;;;998:25;949:5;;-1:-1:-1;973:2:351;-1:-1:-1;;;;;1072:14:351;;;1069:34;;;1099:1;1096;1089:12;1069:34;1137:6;1126:9;1122:22;1112:32;;1182:7;1175:4;1171:2;1167:13;1163:27;1153:55;;1204:1;1201;1194:12;1153:55;1233:2;1227:9;1255:2;1251;1248:10;1245:36;;;1261:18;;:::i;:::-;1307:2;1304:1;1300:10;1339:2;1333:9;1402:2;1398:7;1393:2;1389;1385:11;1381:25;1373:6;1369:38;1457:6;1445:10;1442:22;1437:2;1425:10;1422:18;1419:46;1416:72;;;1468:18;;:::i;:::-;1504:2;1497:22;1554:18;;;1588:15;;;;-1:-1:-1;1630:11:351;;;1626:20;;;1658:19;;;1655:39;;;1690:1;1687;1680:12;1655:39;1714:11;;;;1734:159;1750:6;1745:3;1742:15;1734:159;;;1816:34;1846:3;1816:34;:::i;:::-;1804:47;;1767:12;;;;1871;;;;1734:159;;;1912:6;1902:16;;;;;;;;1937:49;1982:2;1971:9;1967:18;1937:49;:::i;:::-;1927:59;;2005:46;2047:2;2036:9;2032:18;2005:46;:::i;:::-;1995:56;;610:1447;;;;;;;:::o;2767:127::-;2828:10;2823:3;2819:20;2816:1;2809:31;2859:4;2856:1;2849:15;2883:4;2880:1;2873:15;3107:127;3168:10;3163:3;3159:20;3156:1;3149:31;3199:4;3196:1;3189:15;3223:4;3220:1;3213:15;3239:135;3278:3;3299:17;;;3296:43;;3319:18;;:::i;:::-;-1:-1:-1;3366:1:351;3355:13;;3239:135::o;3379:128::-;3446:9;;;3467:11;;;3464:37;;;3481:18;;:::i;3512:127::-;3573:10;3568:3;3564:20;3561:1;3554:31;3604:4;3601:1;3594:15;3628:4;3625:1;3618:15;3512:127;743:4400:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101ae5760003560e01c806387381314116100ee578063a7cd63b711610097578063c49907b511610071578063c49907b514610469578063d612b9451461047c578063e0351e131461048f578063f2fde38b146104b557600080fd5b8063a7cd63b714610428578063b3a3fb4114610430578063bb98546b1461044357600080fd5b806396875445116100c857806396875445146103fa5780639c8f9f231461040d578063a40e69c71461042057600080fd5b806387381314146103a65780638bfca18c146103bb5780638da5cb5b146103e957600080fd5b806354c8a4f31161015b5780637448b3c7116101355780637448b3c7146103095780637787e7ab1461031c57806379ba50971461038b5780638627fad61461039357600080fd5b806354c8a4f3146102ac57806356dd1e81146102bf5780636f32b872146102f657600080fd5b806321df0da71161018c57806321df0da71461023757806351c6590a146102715780635246492f1461028657600080fd5b806301ffc9a7146101b3578063181f5a77146101db5780631d7a74a014610224575b600080fd5b6101c66101c13660046124e9565b6104c8565b60405190151581526020015b60405180910390f35b6102176040518060400160405280601a81526020017f4c6f636b52656c65617365546f6b656e506f6f6c20312e322e3000000000000081525081565b6040516101d29190612599565b6101c66102323660046125c8565b610524565b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020016101d2565b61028461027f3660046125e3565b610531565b005b7f0000000000000000000000000000000000000000000000000000000000000000610259565b6102846102ba366004612648565b610611565b6102e86102cd3660046125c8565b6001600160a01b03166000908152600a602052604090205490565b6040519081526020016101d2565b6101c66103043660046125c8565b61068c565b61028461031736600461278b565b610699565b61032f61032a3660046125c8565b61074f565b6040516101d2919081516fffffffffffffffffffffffffffffffff908116825260208084015163ffffffff1690830152604080840151151590830152606080840151821690830152608092830151169181019190915260a00190565b610284610820565b6102846103a1366004612882565b610903565b6103ae610a7f565b6040516101d29190612911565b6040517f98a471770000000000000000000000000000000000000000000000000000000081526020016101d2565b6000546001600160a01b0316610259565b6102176104083660046129a0565b610a90565b61028461041b3660046125e3565b610c5c565b6103ae610e09565b6103ae610e15565b61032f61043e3660046125c8565b610e21565b7f00000000000000000000000000000000000000000000000000000000000000006101c6565b610284610477366004612a83565b610ef2565b61028461048a36600461278b565b610f06565b7f00000000000000000000000000000000000000000000000000000000000000006101c6565b6102846104c33660046125c8565b610fab565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f98a4717700000000000000000000000000000000000000000000000000000000148061051e575061051e82610fbf565b92915050565b600061051e600783611057565b7f0000000000000000000000000000000000000000000000000000000000000000610588576040517fe93f8fa400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105bd6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633308461107c565b336000908152600a6020526040812080548392906105dc908490612b12565b9091555050604051819033907fc17cea59c2955cb181b03393209566960365771dbba9dc3d510180e7cb31208890600090a350565b61061961114b565b610686848480806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506040805160208088028281018201909352878252909350879250869182918501908490808284376000920191909152506111c192505050565b50505050565b600061051e600483611057565b6106a161114b565b6106aa8261068c565b6106f0576040517f498f12f60000000000000000000000000000000000000000000000000000000081526001600160a01b03831660048201526024015b60405180910390fd5b6001600160a01b03821660009081526006602052604090206107129082611358565b7f578db78e348076074dbff64a94073a83e9a65aa6766b8c75fdc89282b0e30ed68282604051610743929190612b25565b60405180910390a15050565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101919091526001600160a01b038216600090815260066020908152604091829020825160a08101845281546fffffffffffffffffffffffffffffffff808216835270010000000000000000000000000000000080830463ffffffff16958401959095527401000000000000000000000000000000000000000090910460ff16151594820194909452600190910154808416606083015291909104909116608082015261051e90611507565b6001546001600160a01b03163314610894576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4d7573742062652070726f706f736564206f776e65720000000000000000000060448201526064016106e7565b60008054337fffffffffffffffffffffffff0000000000000000000000000000000000000000808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b61090c33610524565b610942576040517f5307f5ab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663397796f76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c49190612b70565b156109fb576040517fc148371500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a04836115b9565b610a386001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001685856115f3565b6040518381526001600160a01b0385169033907f2d87480f50083e2b2759522a8fdda59802650a8055e609a7772cf70c07748f529060200160405180910390a35050505050565b6060610a8b600461163c565b905090565b6060610a9b3361068c565b610ad1576040517f5307f5ab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b877f00000000000000000000000000000000000000000000000000000000000000008015610b075750610b05600282611057565b155b15610b49576040517fd0d259760000000000000000000000000000000000000000000000000000000081526001600160a01b03821660048201526024016106e7565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663397796f76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ba7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bcb9190612b70565b15610c02576040517fc148371500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610c0b86611649565b60405186815233907f9f1ec8c880f76798e7b793325d625e9b60e4082a553c98f42b6cda368dd600089060200160405180910390a25050604080516020810190915260008152979650505050505050565b336000908152600a6020526040902054811115610ca5576040517f6982012000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015281907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610d24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d489190612b8d565b1015610d80576040517fbb55fd2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336000908152600a602052604081208054839290610d9f908490612ba6565b90915550610dd990506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633836115f3565b604051819033907fc2c3f06e49b9f15e7b4af9055e183b0d73362e033ad82a07dec9bf984017171990600090a350565b6060610a8b600761163c565b6060610a8b600261163c565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101919091526001600160a01b038216600090815260096020908152604091829020825160a08101845281546fffffffffffffffffffffffffffffffff808216835270010000000000000000000000000000000080830463ffffffff16958401959095527401000000000000000000000000000000000000000090910460ff16151594820194909452600190910154808416606083015291909104909116608082015261051e90611507565b610efa61114b565b61068684848484611683565b610f0e61114b565b610f1782610524565b610f58576040517f498f12f60000000000000000000000000000000000000000000000000000000081526001600160a01b03831660048201526024016106e7565b6001600160a01b0382166000908152600960205260409020610f7a9082611358565b7fb3ba339cfbb8ef80d7a29ce5493051cb90e64fcfa85d7124efc1adfa4c68399f8282604051610743929190612b25565b610fb361114b565b610fbc81611bcb565b50565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f317fa33400000000000000000000000000000000000000000000000000000000148061051e57507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a7000000000000000000000000000000000000000000000000000000001492915050565b6001600160a01b038116600090815260018301602052604081205415155b9392505050565b6040516001600160a01b03808516602483015283166044820152606481018290526106869085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611ca6565b6000546001600160a01b031633146111bf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e65720000000000000000000060448201526064016106e7565b565b7f0000000000000000000000000000000000000000000000000000000000000000611218576040517f35f4a7b300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b82518110156112a957600083828151811061123857611238612bb9565b60200260200101519050611256816002611da590919063ffffffff16565b15611298576040516001600160a01b03821681527f800671136ab6cfee9fbe5ed1fb7ca417811aca3cf864800d127b927adedf75669060200160405180910390a15b506112a281612be8565b905061121b565b5060005b81518110156113535760008282815181106112ca576112ca612bb9565b6020026020010151905060006001600160a01b0316816001600160a01b0316036112f45750611343565b6112ff600282611dba565b15611341576040516001600160a01b03821681527f2640d4d76caf8bf478aabfa982fa4e1c4eb71a37f93cd15e80dbc657911546d89060200160405180910390a15b505b61134c81612be8565b90506112ad565b505050565b815460009061138190700100000000000000000000000000000000900463ffffffff1642612ba6565b9050801561142357600183015483546113c9916fffffffffffffffffffffffffffffffff80821692811691859170010000000000000000000000000000000090910416611dcf565b83546fffffffffffffffffffffffffffffffff919091167fffffffffffffffffffffffff0000000000000000000000000000000000000000909116177001000000000000000000000000000000004263ffffffff16021783555b60208201518354611449916fffffffffffffffffffffffffffffffff9081169116611df9565b83548351151574010000000000000000000000000000000000000000027fffffffffffffffffffffff00ffffffff000000000000000000000000000000009091166fffffffffffffffffffffffffffffffff92831617178455602083015160408085015183167001000000000000000000000000000000000291909216176001850155517f9ea3374b67bf275e6bb9c8ae68f9cae023e1c528b4b27e092f0bb209d3531c19906114fa908490612c20565b60405180910390a1505050565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915261159582606001516fffffffffffffffffffffffffffffffff1683600001516fffffffffffffffffffffffffffffffff16846020015163ffffffff16426115799190612ba6565b85608001516fffffffffffffffffffffffffffffffff16611dcf565b6fffffffffffffffffffffffffffffffff1682525063ffffffff4216602082015290565b336000908152600960205260409020610fbc90827f0000000000000000000000000000000000000000000000000000000000000000611e0f565b6040516001600160a01b0383166024820152604481018290526113539084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064016110c9565b606060006110758361215e565b336000908152600660205260409020610fbc90827f0000000000000000000000000000000000000000000000000000000000000000611e0f565b61168b61114b565b60005b838110156119675760008585838181106116aa576116aa612bb9565b905060a002018036038101906116c09190612c5c565b905080602001511561187e5780516116da90600490611dba565b1561183e576040805160a08101825282820180516020908101516fffffffffffffffffffffffffffffffff908116845263ffffffff4281168386019081528451511515868801908152855185015184166060880190815286518901518516608089019081528a516001600160a01b031660009081526006909752958990209751885493519251151574010000000000000000000000000000000000000000027fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff939095167001000000000000000000000000000000009081027fffffffffffffffffffffffff0000000000000000000000000000000000000000909516918716919091179390931791909116929092178655905192518216029116176001909201919091558251905191517f0b594bb0555ff7b252e0c789ccc9d8903fec294172064308727d570505cee1ac926118319291612b25565b60405180910390a1611956565b80516040517fd3eb6bc50000000000000000000000000000000000000000000000000000000081526001600160a01b0390911660048201526024016106e7565b805161188c90600490611da5565b156119165780516001600160a01b031660009081526006602052604080822080547fffffffffffffffffffffff00000000000000000000000000000000000000000016815560010191909155815190517f7fd064821314ad863a0714a3f1229375ace6b6427ed5544b7b2ba1c47b1b529491611831916001600160a01b0391909116815260200190565b80516040517f498f12f60000000000000000000000000000000000000000000000000000000081526001600160a01b0390911660048201526024016106e7565b5061196081612be8565b905061168e565b5060005b81811015611bc457600083838381811061198757611987612bb9565b905060a0020180360381019061199d9190612c5c565b9050806020015115611b1b5780516119b790600790611dba565b1561183e576040805160a08101825282820180516020908101516fffffffffffffffffffffffffffffffff908116845263ffffffff4281168386019081528451511515868801908152855185015184166060880190815286518901518516608089019081528a516001600160a01b031660009081526009909752958990209751885493519251151574010000000000000000000000000000000000000000027fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff939095167001000000000000000000000000000000009081027fffffffffffffffffffffffff0000000000000000000000000000000000000000909516918716919091179390931791909116929092178655905192518216029116176001909201919091558251905191517f395b7374909d2b54e5796f53c898ebf41d767c86c78ea86519acf2b805852d8892611b0e9291612b25565b60405180910390a1611bb3565b8051611b2990600790611da5565b156119165780516001600160a01b031660009081526009602052604080822080547fffffffffffffffffffffff00000000000000000000000000000000000000000016815560010191909155815190517fcf91daec21e3510e2f2aea4b09d08c235d5c6844980be709f282ef591dbf420c91611b0e916001600160a01b0391909116815260200190565b50611bbd81612be8565b905061196b565b5050505050565b336001600160a01b03821603611c3d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016106e7565b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b6000611cfb826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166121ba9092919063ffffffff16565b8051909150156113535780806020019051810190611d199190612b70565b611353576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016106e7565b6000611075836001600160a01b0384166121c9565b6000611075836001600160a01b0384166122bc565b6000611dee85611ddf8486612cad565b611de99087612b12565b611df9565b90505b949350505050565b6000818310611e085781611075565b5090919050565b825474010000000000000000000000000000000000000000900460ff161580611e36575081155b15611e4057505050565b825460018401546fffffffffffffffffffffffffffffffff80831692911690600090611e8690700100000000000000000000000000000000900463ffffffff1642612ba6565b90508015611f465781831115611ec8576040517f9725942a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001860154611f029083908590849070010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff16611dcf565b86547fffffffffffffffffffffffff00000000ffffffffffffffffffffffffffffffff167001000000000000000000000000000000004263ffffffff160217875592505b84821015611fe3576001600160a01b038416611f98576040517ff94ebcd100000000000000000000000000000000000000000000000000000000815260048101839052602481018690526044016106e7565b6040517f1a76572a00000000000000000000000000000000000000000000000000000000815260048101839052602481018690526001600160a01b03851660448201526064016106e7565b848310156120dc5760018681015470010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff169060009082906120279082612ba6565b612031878a612ba6565b61203b9190612b12565b6120459190612cc4565b90506001600160a01b038616612091576040517f15279c0800000000000000000000000000000000000000000000000000000000815260048101829052602481018690526044016106e7565b6040517fd0c8d23a00000000000000000000000000000000000000000000000000000000815260048101829052602481018690526001600160a01b03871660448201526064016106e7565b6120e68584612ba6565b86547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff82161787556040518681529093507f1871cdf8010e63f2eb8384381a68dfa7416dc571a5517e66e88b2d2d0c0a690a9060200160405180910390a1505050505050565b6060816000018054806020026020016040519081016040528092919081815260200182805480156121ae57602002820191906000526020600020905b81548152602001906001019080831161219a575b50505050509050919050565b6060611df1848460008561230b565b600081815260018301602052604081205480156122b25760006121ed600183612ba6565b855490915060009061220190600190612ba6565b905081811461226657600086600001828154811061222157612221612bb9565b906000526020600020015490508087600001848154811061224457612244612bb9565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061227757612277612cff565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061051e565b600091505061051e565b60008181526001830160205260408120546123035750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561051e565b50600061051e565b60608247101561239d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016106e7565b600080866001600160a01b031685876040516123b99190612d2e565b60006040518083038185875af1925050503d80600081146123f6576040519150601f19603f3d011682016040523d82523d6000602084013e6123fb565b606091505b509150915061240c87838387612417565b979650505050505050565b606083156124a0578251600003612499576001600160a01b0385163b612499576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016106e7565b5081611df1565b611df183838151156124b55781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e79190612599565b6000602082840312156124fb57600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461107557600080fd5b60005b8381101561254657818101518382015260200161252e565b50506000910152565b6000815180845261256781602086016020860161252b565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000611075602083018461254f565b80356001600160a01b03811681146125c357600080fd5b919050565b6000602082840312156125da57600080fd5b611075826125ac565b6000602082840312156125f557600080fd5b5035919050565b60008083601f84011261260e57600080fd5b50813567ffffffffffffffff81111561262657600080fd5b6020830191508360208260051b850101111561264157600080fd5b9250929050565b6000806000806040858703121561265e57600080fd5b843567ffffffffffffffff8082111561267657600080fd5b612682888389016125fc565b9096509450602087013591508082111561269b57600080fd5b506126a8878288016125fc565b95989497509550505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715612706576127066126b4565b60405290565b8015158114610fbc57600080fd5b80356fffffffffffffffffffffffffffffffff811681146125c357600080fd5b60006060828403121561274c57600080fd5b6127546126e3565b905081356127618161270c565b815261276f6020830161271a565b60208201526127806040830161271a565b604082015292915050565b6000806080838503121561279e57600080fd5b6127a7836125ac565b91506127b6846020850161273a565b90509250929050565b600082601f8301126127d057600080fd5b813567ffffffffffffffff808211156127eb576127eb6126b4565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715612831576128316126b4565b8160405283815286602085880101111561284a57600080fd5b836020870160208301376000602085830101528094505050505092915050565b803567ffffffffffffffff811681146125c357600080fd5b600080600080600060a0868803121561289a57600080fd5b853567ffffffffffffffff808211156128b257600080fd5b6128be89838a016127bf565b96506128cc602089016125ac565b9550604088013594506128e16060890161286a565b935060808801359150808211156128f757600080fd5b50612904888289016127bf565b9150509295509295909350565b6020808252825182820181905260009190848201906040850190845b818110156129525783516001600160a01b03168352928401929184019160010161292d565b50909695505050505050565b60008083601f84011261297057600080fd5b50813567ffffffffffffffff81111561298857600080fd5b60208301915083602082850101111561264157600080fd5b600080600080600080600060a0888a0312156129bb57600080fd5b6129c4886125ac565b9650602088013567ffffffffffffffff808211156129e157600080fd5b6129ed8b838c0161295e565b909850965060408a01359550869150612a0860608b0161286a565b945060808a0135915080821115612a1e57600080fd5b50612a2b8a828b0161295e565b989b979a50959850939692959293505050565b60008083601f840112612a5057600080fd5b50813567ffffffffffffffff811115612a6857600080fd5b60208301915083602060a08302850101111561264157600080fd5b60008060008060408587031215612a9957600080fd5b843567ffffffffffffffff80821115612ab157600080fd5b612abd88838901612a3e565b90965094506020870135915080821115612ad657600080fd5b506126a887828801612a3e565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082018082111561051e5761051e612ae3565b6001600160a01b03831681526080810161107560208301848051151582526020808201516fffffffffffffffffffffffffffffffff9081169184019190915260409182015116910152565b600060208284031215612b8257600080fd5b81516110758161270c565b600060208284031215612b9f57600080fd5b5051919050565b8181038181111561051e5761051e612ae3565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612c1957612c19612ae3565b5060010190565b6060810161051e82848051151582526020808201516fffffffffffffffffffffffffffffffff9081169184019190915260409182015116910152565b600060a08284031215612c6e57600080fd5b612c766126e3565b612c7f836125ac565b81526020830135612c8f8161270c565b6020820152612ca1846040850161273a565b60408201529392505050565b808202811582820484141761051e5761051e612ae3565b600082612cfa577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b60008251612d4081846020870161252b565b919091019291505056fea164736f6c6343000815000a",
    "sourceMap": "743:4400:133:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3477:189;;;;;;:::i;:::-;;:::i;:::-;;;516:14:351;;509:22;491:41;;479:2;464:18;3477:189:133;;;;;;;;1170:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5014:109:134:-;;;;;;:::i;:::-;;:::i;4078:89::-;4155:7;4078:89;;;-1:-1:-1;;;;;1931:55:351;;;1913:74;;1901:2;1886:18;4078:89:134;1750:243:351;4350:276:133;;;;;;:::i;:::-;;:::i;:::-;;3960:90:134;4035:10;3960:90;;11597:151;;;;;;:::i;:::-;;:::i;3853:135:133:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3946:37:133;3924:7;3946:37;;;:27;:37;;;;;;;3853:135;;;;3710:25:351;;;3698:2;3683:18;3853:135:133;3564:177:351;4755:105:134;;;;;;:::i;:::-;;:::i;9267:274::-;;;;;;:::i;:::-;;:::i;8674:181::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;5520:13:351;;5455:34;5516:22;;;5498:41;;5599:4;5587:17;;;5581:24;5607:10;5577:41;5555:20;;;5548:71;5689:4;5677:17;;;5671:24;5664:32;5657:40;5635:20;;;5628:70;5758:4;5746:17;;;5740:24;5736:33;;5714:20;;;5707:63;5830:4;5818:17;;;5812:24;5808:33;5786:20;;;5779:63;;;;5432:3;5417:19;;5238:610;1001:265:249;;;:::i;2943:306:133:-;;;;;;:::i;:::-;;:::i;5193:97:134:-;;;:::i;:::-;;;;;;;:::i;3339:109:133:-;;;8419:79:351;8401:98;;8389:2;8374:18;3339:109:133;8257:248:351;1317:81:249;1364:7;1386;-1:-1:-1;;;;;1386:7:249;1317:81;;2340:321:133;;;;;;:::i;:::-;;:::i;4769:372::-;;;;;;:::i;:::-;;:::i;5361:99:134:-;;;:::i;11287:103::-;;;:::i;8978:185::-;;;;;;:::i;:::-;;:::i;4117:94:133:-;4189:17;4117:94;;5726:163:134;;;;;;:::i;:::-;;:::i;9646:283::-;;;;;;:::i;:::-;;:::i;11108:96::-;11181:18;11108:96;;811:98:249;;;;;;:::i;:::-;;:::i;3477:189:133:-;3562:4;3581:40;;;;;;:80;;;3625:36;3649:11;3625:23;:36::i;:::-;3574:87;3477:189;-1:-1:-1;;3477:189:133:o;5014:109:134:-;5071:4;5090:28;:10;5110:7;5090:19;:28::i;4350:276:133:-;4408:17;4403:53;;4434:22;;;;;;;;;;;;;;4403:53;4462:59;-1:-1:-1;;;;;4462:7:133;:24;4487:10;4507:4;4514:6;4462:24;:59::i;:::-;4555:10;4527:39;;;;:27;:39;;;;;:49;;4570:6;;4527:39;:49;;4570:6;;4527:49;:::i;:::-;;;;-1:-1:-1;;4587:34:133;;4614:6;;4602:10;;4587:34;;;;;4350:276;:::o;11597:151:134:-;1941:20:249;:18;:20::i;:::-;11706:37:134::1;11729:7;;11706:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;11706:37:134::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;;;;;;-1:-1:-1;11738:4:134;;-1:-1:-1;11738:4:134;;;;11706:37;::::1;::::0;11738:4;;11706:37;11738:4;11706:37;::::1;;::::0;::::1;::::0;;;;-1:-1:-1;11706:22:134::1;::::0;-1:-1:-1;;;11706:37:134:i:1;:::-;11597:151:::0;;;;:::o;4755:105::-;4810:4;4829:26;:9;4848:6;4829:18;:26::i;9267:274::-;1941:20:249;:18;:20::i;:::-;9383:16:134::1;9392:6;9383:8;:16::i;:::-;9378:53;;9408:23;::::0;::::1;::::0;;-1:-1:-1;;;;;1931:55:351;;9408:23:134::1;::::0;::::1;1913:74:351::0;1886:18;;9408:23:134::1;;;;;;;;9378:53;-1:-1:-1::0;;;;;9437:26:134;::::1;;::::0;;;:18:::1;:26;::::0;;;;:56:::1;::::0;9486:6;9437:48:::1;:56::i;:::-;9504:32;9521:6;9529;9504:32;;;;;;;:::i;:::-;;;;;;;;9267:274:::0;;:::o;8674:181::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8797:26:134;;;;;;:18;:26;;;;;;;;;:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:53;;:51;:53::i;1001:265:249:-;1074:14;;-1:-1:-1;;;;;1074:14:249;1060:10;:28;1052:63;;;;;;;12523:2:351;1052:63:249;;;12505:21:351;12562:2;12542:18;;;12535:30;12601:24;12581:18;;;12574:52;12643:18;;1052:63:249;12321:346:351;1052:63:249;1122:16;1141:7;;1164:10;1154:20;;;;;;;;-1:-1:-1;1180:27:249;;;;;;;1219:42;;-1:-1:-1;;;;;1141:7:249;;;;1164:10;;1141:7;;1219:42;;;1046:220;1001:265::o;2943:306:133:-;10567:21:134;10577:10;10567:9;:21::i;:::-;10562:53;;10597:18;;;;;;;;;;;;;;10562:53;12502:10:::1;-1:-1:-1::0;;;;;12497:25:134::1;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12493:54;;;12533:14;;;;;;;;;;;;;;12493:54;3116:32:133::2;3141:6;3116:24;:32::i;:::-;3154:41;-1:-1:-1::0;;;;;4155:7:134;3154:23:133::2;3178:8:::0;3188:6;3154:23:::2;:41::i;:::-;3206:38;::::0;3710:25:351;;;-1:-1:-1;;;;;3206:38:133;::::2;::::0;3215:10:::2;::::0;3206:38:::2;::::0;3698:2:351;3683:18;3206:38:133::2;;;;;;;2943:306:::0;;;;;:::o;5193:97:134:-;5236:16;5267:18;:9;:16;:18::i;:::-;5260:25;;5193:97;:::o;2340:321:133:-;2553:12;10325:20:134;10334:10;10325:8;:20::i;:::-;10320:52;;10354:18;;;;;;;;;;;;;;10320:52;2516:14:133::1;10896:18:134;:51;;;;-1:-1:-1::0;10919:28:134::1;:11;10940:6:::0;10919:20:::1;:28::i;:::-;10918:29;10896:51;10892:88;;;10956:24;::::0;::::1;::::0;;-1:-1:-1;;;;;1931:55:351;;10956:24:134::1;::::0;::::1;1913:74:351::0;1886:18;;10956:24:134::1;1750:243:351::0;10892:88:134::1;12502:10:::2;-1:-1:-1::0;;;;;12497:25:134::2;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12493:54;;;12533:14;;;;;;;;;;;;;;12493:54;2573:31:133::3;2597:6;2573:23;:31::i;:::-;2615:26;::::0;3710:25:351;;;2622:10:133::3;::::0;2615:26:::3;::::0;3698:2:351;3683:18;2615:26:133::3;;;;;;;-1:-1:-1::0;;2647:9:133::3;::::0;;::::3;::::0;::::3;::::0;;;-1:-1:-1;2647:9:133;;;2340:321;-1:-1:-1;;;;;;;2340:321:133:o;4769:372::-;4857:10;4829:39;;;;:27;:39;;;;;;:48;-1:-1:-1;4825:80:133;;;4886:19;;;;;;;;;;;;;;4825:80;4915:32;;;;;4941:4;4915:32;;;1913:74:351;4950:6:133;;4915:7;-1:-1:-1;;;;;4915:17:133;;;;1886:18:351;;4915:32:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:41;4911:77;;;4965:23;;;;;;;;;;;;;;4911:77;5022:10;4994:39;;;;:27;:39;;;;;:49;;5037:6;;4994:39;:49;;5037:6;;4994:49;:::i;:::-;;;;-1:-1:-1;5049:40:133;;-1:-1:-1;;;;;;5049:7:133;:20;5070:10;5082:6;5049:20;:40::i;:::-;5100:36;;5129:6;;5117:10;;5100:36;;;;;4769:372;:::o;5361:99:134:-;5405:16;5436:19;:10;:17;:19::i;11287:103::-;11334:16;11365:20;:11;:18;:20::i;8978:185::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9103:28:134;;;;;;:19;:28;;;;;;;;;:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:55;;:53;:55::i;5726:163::-;1941:20:249;:18;:20::i;:::-;5848:36:134::1;5866:7;;5875:8;;5848:17;:36::i;9646:283::-:0;1941:20:249;:18;:20::i;:::-;9764:18:134::1;9774:7;9764:9;:18::i;:::-;9759:56;;9791:24;::::0;::::1;::::0;;-1:-1:-1;;;;;1931:55:351;;9791:24:134::1;::::0;::::1;1913:74:351::0;1886:18;;9791:24:134::1;1750:243:351::0;9759:56:134::1;-1:-1:-1::0;;;;;9821:28:134;::::1;;::::0;;;:19:::1;:28;::::0;;;;:58:::1;::::0;9872:6;9821:50:::1;:58::i;:::-;9890:34;9908:7;9917:6;9890:34;;;;;;;:::i;811:98:249:-:0;1941:20;:18;:20::i;:::-;882:22:::1;901:2;882:18;:22::i;:::-;811:98:::0;:::o;4197:191:134:-;4282:4;4301:38;;;4316:23;4301:38;;:82;;-1:-1:-1;4343:40:134;;;4358:25;4343:40;4294:89;4197:191;-1:-1:-1;;4197:191:134:o;8294:159:346:-;-1:-1:-1;;;;;8423:23:346;;8374:4;4067:19;;;:12;;;:19;;;;;;:24;;8393:55;8386:62;8294:159;-1:-1:-1;;;8294:159:346:o;932:197:331:-;1055:68;;-1:-1:-1;;;;;13525:15:351;;;1055:68:331;;;13507:34:351;13577:15;;13557:18;;;13550:43;13609:18;;;13602:34;;;1028:96:331;;1048:5;;1078:27;;13419:18:351;;1055:68:331;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1028:19;:96::i;1715:111:249:-;1787:7;;-1:-1:-1;;;;;1787:7:249;1773:10;:21;1765:56;;;;;;;13849:2:351;1765:56:249;;;13831:21:351;13888:2;13868:18;;;13861:30;13927:24;13907:18;;;13900:52;13969:18;;1765:56:249;13647:346:351;1765:56:249;1715:111::o;11847:561:134:-;11948:18;11943:53;;11975:21;;;;;;;;;;;;;;11943:53;12008:9;12003:179;12027:7;:14;12023:1;:18;12003:179;;;12056:16;12075:7;12083:1;12075:10;;;;;;;;:::i;:::-;;;;;;;12056:29;;12097:28;12116:8;12097:11;:18;;:28;;;;:::i;:::-;12093:83;;;12142:25;;-1:-1:-1;;;;;1931:55:351;;1913:74;;12142:25:134;;1901:2:351;1886:18;12142:25:134;;;;;;;12093:83;-1:-1:-1;12043:3:134;;;:::i;:::-;;;12003:179;;;;12192:9;12187:217;12211:4;:11;12207:1;:15;12187:217;;;12237:13;12253:4;12258:1;12253:7;;;;;;;;:::i;:::-;;;;;;;12237:23;;12289:1;-1:-1:-1;;;;;12272:19:134;:5;-1:-1:-1;;;;;12272:19:134;;12268:52;;12303:8;;;12268:52;12331:22;:11;12347:5;12331:15;:22::i;:::-;12327:71;;;12370:19;;-1:-1:-1;;;;;1931:55:351;;1913:74;;12370:19:134;;1901:2:351;1886:18;12370:19:134;;;;;;;12327:71;12229:175;12187:217;12224:3;;;:::i;:::-;;;12187:217;;;;11847:561;;:::o;4939:700:125:-;5194:20;;5157:16;;5176:38;;5194:20;;;;;5176:15;:38;:::i;:::-;5157:57;-1:-1:-1;5224:13:125;;5220:193;;5290:17;;;;5309:15;;5273:77;;5290:17;;;;;5309:15;;;5326:8;;5336:13;;;;;5273:16;:77::i;:::-;5247:104;;;;;;;5360:46;;;;;;5390:15;5360:46;;;;;;5220:193;5450:15;;;;5467;;5445:38;;;;;;;5467:15;5445:4;:38::i;:::-;5419:65;;5511:16;;5490:37;;;;;;;;5419:65;;;;5490:37;;;;5553:15;;;;5590:11;;;;;5574:27;;;;5533:35;;;;5574:27;5419:65;5533:17;;5574:27;5613:21;;;;;5511:6;;5613:21;:::i;:::-;;;;;;;;5031:608;4939:700;;:::o;4289:528::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4638:99:125;4655:6;:15;;;4638:99;;4672:6;:13;;;4638:99;;4705:6;:18;;;4687:36;;:15;:36;;;;:::i;:::-;4725:6;:11;;;4638:99;;:16;:99::i;:::-;4607:136;;;;-1:-1:-1;4749:44:125;4777:15;4749:44;:18;;;:44;4607:6;4289:528::o;8415:136:134:-;8500:10;8480:31;;;;:19;:31;;;;;:66;;8521:6;8537:7;8480:40;:66::i;759:169:331:-;864:58;;-1:-1:-1;;;;;14829:55:351;;864:58:331;;;14811:74:351;14901:18;;;14894:34;;;837:86:331;;857:5;;887:23;;14784:18:351;;864:58:331;14637:297:351;9627:268:346;9690:16;9714:22;9739:19;9747:3;9739:7;:19::i;8210:134:134:-;8293:10;8274:30;;;;:18;:30;;;;;:65;;8314:6;8330:7;8274:39;:65::i;5893:2030::-;1941:20:249;:18;:20::i;:::-;6013:9:134::1;6008:948;6028:18:::0;;::::1;6008:948;;;6061:24;6088:7;;6096:1;6088:10;;;;;;;:::i;:::-;;;;;;6061:37;;;;;;;;;;:::i;:::-;;;6110:6;:14;;;6106:844;;;6154:11:::0;;6140:26:::1;::::0;:9:::1;::::0;:13:::1;:26::i;:::-;6136:529;;;6214:307;::::0;;::::1;::::0;::::1;::::0;;6366:24;;::::1;::::0;;:33:::1;::::0;;::::1;::::0;6214:307:::1;::::0;;::::1;::::0;;::::1;6433:15;6214:307:::0;::::1;::::0;;::::1;::::0;;;6474:24;;:34;6214:307:::1;;::::0;;;;;;6311:24;;:33;::::1;::::0;6214:307;::::1;::::0;;;;;;6258:24;;:29;::::1;::::0;6214:307;::::1;::::0;;;;;;6199:11;;-1:-1:-1;;;;;6180:31:134::1;-1:-1:-1::0;6180:31:134;;;:18:::1;:31:::0;;;;;;;:341;;;;;;;;::::1;;::::0;::::1;::::0;;;;::::1;::::0;;;::::1;::::0;;;;;;::::1;::::0;;;;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;;;;;;::::1;;::::0;::::1;;::::0;;;::::1;::::0;;;;6550:11;;6563:24;;6538:50;;::::1;::::0;::::1;::::0;6550:11;6538:50:::1;:::i;:::-;;;;;;;;6106:844;;6136:529;6642:11:::0;;6624:30:::1;::::0;::::1;::::0;;-1:-1:-1;;;;;1931:55:351;;;6624:30:134::1;::::0;::::1;1913:74:351::0;1886:18;;6624:30:134::1;1750:243:351::0;6106:844:134::1;6710:11:::0;;6693:29:::1;::::0;:9:::1;::::0;:16:::1;:29::i;:::-;6689:253;;;6762:11:::0;;-1:-1:-1;;;;;6743:31:134::1;;::::0;;;:18:::1;:31;::::0;;;;;6736:38;;;;;;;::::1;::::0;;;;6805:11;;6791:26;;::::1;::::0;::::1;::::0;-1:-1:-1;;;;;1931:55:351;;;;1913:74;;1901:2;1886:18;;1750:243;6689:253:134::1;6919:11:::0;;6903:28:::1;::::0;::::1;::::0;;-1:-1:-1;;;;;1931:55:351;;;6903:28:134::1;::::0;::::1;1913:74:351::0;1886:18;;6903:28:134::1;1750:243:351::0;6689:253:134::1;-1:-1:-1::0;6048:3:134::1;::::0;::::1;:::i;:::-;;;6008:948;;;;6967:9;6962:957;6982:19:::0;;::::1;6962:957;;;7016:24;7043:8;;7052:1;7043:11;;;;;;;:::i;:::-;;;;;;7016:38;;;;;;;;;;:::i;:::-;;;7066:6;:14;;;7062:851;;;7111:11:::0;;7096:27:::1;::::0;:10:::1;::::0;:14:::1;:27::i;:::-;7092:532;;;7172:307;::::0;;::::1;::::0;::::1;::::0;;7324:24;;::::1;::::0;;:33:::1;::::0;;::::1;::::0;7172:307:::1;::::0;;::::1;::::0;;::::1;7391:15;7172:307:::0;::::1;::::0;;::::1;::::0;;;7432:24;;:34;7172:307:::1;;::::0;;;;;;7269:24;;:33;::::1;::::0;7172:307;::::1;::::0;;;;;;7216:24;;:29;::::1;::::0;7172:307;::::1;::::0;;;;;;7157:11;;-1:-1:-1;;;;;7137:32:134::1;-1:-1:-1::0;7137:32:134;;;:19:::1;:32:::0;;;;;;;:342;;;;;;;;::::1;;::::0;::::1;::::0;;;;::::1;::::0;;;::::1;::::0;;;;;;::::1;::::0;;;;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;;;;;;::::1;;::::0;::::1;;::::0;;;::::1;::::0;;;;7509:11;;7522:24;;7496:51;;::::1;::::0;::::1;::::0;7509:11;7496:51:::1;:::i;:::-;;;;;;;;7062:851;;;7670:11:::0;;7652:30:::1;::::0;:10:::1;::::0;:17:::1;:30::i;:::-;7648:257;;;7723:11:::0;;-1:-1:-1;;;;;7703:32:134::1;;::::0;;;:19:::1;:32;::::0;;;;;7696:39;;;;;;;::::1;::::0;;;;7767:11;;7752:27;;::::1;::::0;::::1;::::0;-1:-1:-1;;;;;1931:55:351;;;;1913:74;;1901:2;1886:18;;1750:243;7648:257:134::1;-1:-1:-1::0;7003:3:134::1;::::0;::::1;:::i;:::-;;;6962:957;;;;5893:2030:::0;;;;:::o;1482:188:249:-;1550:10;-1:-1:-1;;;;;1544:16:249;;;1536:52;;;;;;;15651:2:351;1536:52:249;;;15633:21:351;15690:2;15670:18;;;15663:30;15729:25;15709:18;;;15702:53;15772:18;;1536:52:249;15449:347:351;1536:52:249;1595:14;:19;;;;-1:-1:-1;;;;;1595:19:249;;;;;;;;;-1:-1:-1;1653:7:249;;1626:39;;1595:19;;1653:7;;1626:39;;-1:-1:-1;1626:39:249;1482:188;:::o;3401:668:331:-;3804:23;3830:69;3858:4;3830:69;;;;;;;;;;;;;;;;;3838:5;-1:-1:-1;;;;;3830:27:331;;;:69;;;;;:::i;:::-;3909:17;;3804:95;;-1:-1:-1;3909:21:331;3905:160;;3992:10;3981:30;;;;;;;;;;;;:::i;:::-;3973:85;;;;;;;16003:2:351;3973:85:331;;;15985:21:351;16042:2;16022:18;;;16015:30;16081:34;16061:18;;;16054:62;16152:12;16132:18;;;16125:40;16182:19;;3973:85:331;15801:406:351;8071:150:346;8144:4;8163:53;8171:3;-1:-1:-1;;;;;8191:23:346;;8163:7;:53::i;7773:144::-;7843:4;7862:50;7867:3;-1:-1:-1;;;;;7887:23:346;;7862:4;:50::i;5909:201:125:-;6043:7;6065:40;6070:8;6089:15;6100:4;6089:8;:15;:::i;:::-;6080:24;;:6;:24;:::i;:::-;6065:4;:40::i;:::-;6058:47;;5909:201;;;;;;;:::o;6238:99::-;6297:7;6323:1;6319;:5;:13;;6331:1;6319:13;;;-1:-1:-1;6327:1:125;;6238:99;-1:-1:-1;6238:99:125:o;2376:1790::-;2594:18;;;;;;;2593:19;;:41;;-1:-1:-1;2616:18:125;;2593:41;2589:68;;;2376:1790;;;:::o;2589:68::-;2680:15;;;2720:17;;;2680:15;;;;;2720:17;;;2663:14;;2762:38;;2780:20;;;;;2762:15;:38;:::i;:::-;2743:57;-1:-1:-1;2811:13:125;;2807:271;;2847:8;2838:6;:17;2834:48;;;2864:18;;;;;;;;;;;;;;2834:48;3002:13;;;;2957:59;;2974:8;;2984:6;;2992:8;;3002:13;;;;;2957:16;:59::i;:::-;3025:46;;;;;3055:15;3025:46;;;;;;2948:68;-1:-1:-1;2807:271:125;3099:13;3088:8;:24;3084:302;;;-1:-1:-1;;;;;3208:26:125;;3204:97;;3243:58;;;;;;;;16559:25:351;;;16600:18;;;16593:34;;;16532:18;;3243:58:125;16385:248:351;3204:97:125;3316:63;;;;;;;;16840:25:351;;;16881:18;;;16874:34;;;-1:-1:-1;;;;;16944:55:351;;16924:18;;;16917:83;16813:18;;3316:63:125;16638:368:351;3084:302:125;3404:13;3395:6;:22;3391:594;;;3442:13;;;;;;;;;;;3427:12;;3442:13;;3781:8;;3442:13;3781:8;:::i;:::-;3754:22;3770:6;3754:13;:22;:::i;:::-;3753:37;;;;:::i;:::-;3752:46;;;;:::i;:::-;3725:73;-1:-1:-1;;;;;;3811:26:125;;3807:95;;3846:56;;;;;;;;16559:25:351;;;16600:18;;;16593:34;;;16532:18;;3846:56:125;16385:248:351;3807:95:125;3917:61;;;;;;;;16840:25:351;;;16881:18;;;16874:34;;;-1:-1:-1;;;;;16944:55:351;;16924:18;;;16917:83;16813:18;;3917:61:125;16638:368:351;3391:594:125;3990:23;4000:13;3990:23;;:::i;:::-;4088:33;;;;;;;;;;4132:29;;3710:25:351;;;4088:33:125;;-1:-1:-1;4132:29:125;;3698:2:351;3683:18;4132:29:125;;;;;;;2478:1688;;;2376:1790;;;:::o;5224:103:346:-;5280:16;5311:3;:11;;5304:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5224:103;;;:::o;3695:187:332:-;3798:12;3825:52;3847:6;3855:4;3861:1;3864:12;3825:21;:52::i;2660:1242:346:-;2726:4;2855:19;;;:12;;;:19;;;;;;2885:15;;2881:1017;;3224:21;3248:14;3261:1;3248:10;:14;:::i;:::-;3290:18;;3224:38;;-1:-1:-1;3270:17:346;;3290:22;;3311:1;;3290:22;:::i;:::-;3270:42;;3338:13;3325:9;:26;3321:352;;3363:17;3383:3;:11;;3395:9;3383:22;;;;;;;;:::i;:::-;;;;;;;;;3363:42;;3518:9;3489:3;:11;;3501:13;3489:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3585:23;;;:12;;;:23;;;;;:36;;;3321:352;3739:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3819:3;:12;;:19;3832:5;3819:19;;;;;;;;;;;3812:26;;;3854:4;3847:11;;;;;;;2881:1017;3886:5;3879:12;;;;;2152:354;2215:4;4067:19;;;:12;;;:19;;;;;;2227:275;;-1:-1:-1;2263:23:346;;;;;;;;:11;:23;;;;;;;;;;;;;2425:18;;2403:19;;;:12;;;:19;;;;;;:40;;;;2451:11;;2227:275;-1:-1:-1;2490:5:346;2483:12;;4672:414:332;4819:12;4872:5;4847:21;:30;;4839:81;;;;;;;17681:2:351;4839:81:332;;;17663:21:351;17720:2;17700:18;;;17693:30;17759:34;17739:18;;;17732:62;17830:8;17810:18;;;17803:36;17856:19;;4839:81:332;17479:402:351;4839:81:332;4927:12;4941:23;4968:6;-1:-1:-1;;;;;4968:11:332;4987:5;4994:4;4968:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4926:73;;;;5012:69;5039:6;5047:7;5056:10;5068:12;5012:26;:69::i;:::-;5005:76;4672:414;-1:-1:-1;;;;;;;4672:414:332:o;7016:548::-;7178:12;7202:7;7198:362;;;7223:10;:17;7244:1;7223:22;7219:256;;-1:-1:-1;;;;;1395:19:332;;;7406:60;;;;;;;18380:2:351;7406:60:332;;;18362:21:351;18419:2;18399:18;;;18392:30;18458:31;18438:18;;;18431:59;18507:18;;7406:60:332;18178:353:351;7406:60:332;-1:-1:-1;7489:10:332;7482:17;;7198:362;7520:33;7528:10;7540:12;8181:17;;:21;8177:325;;8383:10;8377:17;8431:15;8418:10;8414:2;8410:19;8403:44;8177:325;8482:12;8475:20;;;;;;;;;;;:::i;14:332:351:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:66;223:5;219:78;212:5;209:89;199:117;;312:1;309;302:12;543:250;628:1;638:113;652:6;649:1;646:13;638:113;;;728:11;;;722:18;709:11;;;702:39;674:2;667:10;638:113;;;-1:-1:-1;;785:1:351;767:16;;760:27;543:250::o;798:330::-;840:3;878:5;872:12;905:6;900:3;893:19;921:76;990:6;983:4;978:3;974:14;967:4;960:5;956:16;921:76;:::i;:::-;1042:2;1030:15;1047:66;1026:88;1017:98;;;;1117:4;1013:109;;798:330;-1:-1:-1;;798:330:351:o;1133:220::-;1282:2;1271:9;1264:21;1245:4;1302:45;1343:2;1332:9;1328:18;1320:6;1302:45;:::i;1358:196::-;1426:20;;-1:-1:-1;;;;;1475:54:351;;1465:65;;1455:93;;1544:1;1541;1534:12;1455:93;1358:196;;;:::o;1559:186::-;1618:6;1671:2;1659:9;1650:7;1646:23;1642:32;1639:52;;;1687:1;1684;1677:12;1639:52;1710:29;1729:9;1710:29;:::i;1998:180::-;2057:6;2110:2;2098:9;2089:7;2085:23;2081:32;2078:52;;;2126:1;2123;2116:12;2078:52;-1:-1:-1;2149:23:351;;1998:180;-1:-1:-1;1998:180:351:o;2414:367::-;2477:8;2487:6;2541:3;2534:4;2526:6;2522:17;2518:27;2508:55;;2559:1;2556;2549:12;2508:55;-1:-1:-1;2582:20:351;;2625:18;2614:30;;2611:50;;;2657:1;2654;2647:12;2611:50;2694:4;2686:6;2682:17;2670:29;;2754:3;2747:4;2737:6;2734:1;2730:14;2722:6;2718:27;2714:38;2711:47;2708:67;;;2771:1;2768;2761:12;2708:67;2414:367;;;;;:::o;2786:773::-;2908:6;2916;2924;2932;2985:2;2973:9;2964:7;2960:23;2956:32;2953:52;;;3001:1;2998;2991:12;2953:52;3041:9;3028:23;3070:18;3111:2;3103:6;3100:14;3097:34;;;3127:1;3124;3117:12;3097:34;3166:70;3228:7;3219:6;3208:9;3204:22;3166:70;:::i;:::-;3255:8;;-1:-1:-1;3140:96:351;-1:-1:-1;3343:2:351;3328:18;;3315:32;;-1:-1:-1;3359:16:351;;;3356:36;;;3388:1;3385;3378:12;3356:36;;3427:72;3491:7;3480:8;3469:9;3465:24;3427:72;:::i;:::-;2786:773;;;;-1:-1:-1;3518:8:351;-1:-1:-1;;;;2786:773:351:o;3746:184::-;3798:77;3795:1;3788:88;3895:4;3892:1;3885:15;3919:4;3916:1;3909:15;3935:248;4002:2;3996:9;4044:4;4032:17;;4079:18;4064:34;;4100:22;;;4061:62;4058:88;;;4126:18;;:::i;:::-;4162:2;4155:22;3935:248;:::o;4188:118::-;4274:5;4267:13;4260:21;4253:5;4250:32;4240:60;;4296:1;4293;4286:12;4311:188;4379:20;;4439:34;4428:46;;4418:57;;4408:85;;4489:1;4486;4479:12;4504:423;4557:5;4605:4;4593:9;4588:3;4584:19;4580:30;4577:50;;;4623:1;4620;4613:12;4577:50;4645:17;;:::i;:::-;4636:26;;4699:9;4686:23;4718:30;4740:7;4718:30;:::i;:::-;4757:22;;4811:38;4845:2;4830:18;;4811:38;:::i;:::-;4806:2;4799:5;4795:14;4788:62;4882:38;4916:2;4905:9;4901:18;4882:38;:::i;:::-;4877:2;4870:5;4866:14;4859:62;4504:423;;;;:::o;4932:301::-;5025:6;5033;5086:3;5074:9;5065:7;5061:23;5057:33;5054:53;;;5103:1;5100;5093:12;5054:53;5126:29;5145:9;5126:29;:::i;:::-;5116:39;;5174:53;5219:7;5214:2;5203:9;5199:18;5174:53;:::i;:::-;5164:63;;4932:301;;;;;:::o;5853:777::-;5895:5;5948:3;5941:4;5933:6;5929:17;5925:27;5915:55;;5966:1;5963;5956:12;5915:55;6002:6;5989:20;6028:18;6065:2;6061;6058:10;6055:36;;;6071:18;;:::i;:::-;6205:2;6199:9;6267:4;6259:13;;6110:66;6255:22;;;6279:2;6251:31;6247:40;6235:53;;;6303:18;;;6323:22;;;6300:46;6297:72;;;6349:18;;:::i;:::-;6389:10;6385:2;6378:22;6424:2;6416:6;6409:18;6470:3;6463:4;6458:2;6450:6;6446:15;6442:26;6439:35;6436:55;;;6487:1;6484;6477:12;6436:55;6551:2;6544:4;6536:6;6532:17;6525:4;6517:6;6513:17;6500:54;6598:1;6591:4;6586:2;6578:6;6574:15;6570:26;6563:37;6618:6;6609:15;;;;;;5853:777;;;;:::o;6635:171::-;6702:20;;6762:18;6751:30;;6741:41;;6731:69;;6796:1;6793;6786:12;6811:755;6923:6;6931;6939;6947;6955;7008:3;6996:9;6987:7;6983:23;6979:33;6976:53;;;7025:1;7022;7015:12;6976:53;7065:9;7052:23;7094:18;7135:2;7127:6;7124:14;7121:34;;;7151:1;7148;7141:12;7121:34;7174:49;7215:7;7206:6;7195:9;7191:22;7174:49;:::i;:::-;7164:59;;7242:38;7276:2;7265:9;7261:18;7242:38;:::i;:::-;7232:48;;7327:2;7316:9;7312:18;7299:32;7289:42;;7350:37;7383:2;7372:9;7368:18;7350:37;:::i;:::-;7340:47;;7440:3;7429:9;7425:19;7412:33;7396:49;;7470:2;7460:8;7457:16;7454:36;;;7486:1;7483;7476:12;7454:36;;7509:51;7552:7;7541:8;7530:9;7526:24;7509:51;:::i;:::-;7499:61;;;6811:755;;;;;;;;:::o;7571:681::-;7742:2;7794:21;;;7864:13;;7767:18;;;7886:22;;;7713:4;;7742:2;7965:15;;;;7939:2;7924:18;;;7713:4;8008:218;8022:6;8019:1;8016:13;8008:218;;;8087:13;;-1:-1:-1;;;;;8083:62:351;8071:75;;8201:15;;;;8166:12;;;;8044:1;8037:9;8008:218;;;-1:-1:-1;8243:3:351;;7571:681;-1:-1:-1;;;;;;7571:681:351:o;8510:347::-;8561:8;8571:6;8625:3;8618:4;8610:6;8606:17;8602:27;8592:55;;8643:1;8640;8633:12;8592:55;-1:-1:-1;8666:20:351;;8709:18;8698:30;;8695:50;;;8741:1;8738;8731:12;8695:50;8778:4;8770:6;8766:17;8754:29;;8830:3;8823:4;8814:6;8806;8802:19;8798:30;8795:39;8792:59;;;8847:1;8844;8837:12;8862:933;8978:6;8986;8994;9002;9010;9018;9026;9079:3;9067:9;9058:7;9054:23;9050:33;9047:53;;;9096:1;9093;9086:12;9047:53;9119:29;9138:9;9119:29;:::i;:::-;9109:39;;9199:2;9188:9;9184:18;9171:32;9222:18;9263:2;9255:6;9252:14;9249:34;;;9279:1;9276;9269:12;9249:34;9318:58;9368:7;9359:6;9348:9;9344:22;9318:58;:::i;:::-;9395:8;;-1:-1:-1;9292:84:351;-1:-1:-1;9477:2:351;9462:18;;9449:32;;-1:-1:-1;9292:84:351;;-1:-1:-1;9500:37:351;9533:2;9518:18;;9500:37;:::i;:::-;9490:47;;9590:3;9579:9;9575:19;9562:33;9546:49;;9620:2;9610:8;9607:16;9604:36;;;9636:1;9633;9626:12;9604:36;;9675:60;9727:7;9716:8;9705:9;9701:24;9675:60;:::i;:::-;8862:933;;;;-1:-1:-1;8862:933:351;;-1:-1:-1;8862:933:351;;;;9649:86;;-1:-1:-1;;;8862:933:351:o;10023:389::-;10105:8;10115:6;10169:3;10162:4;10154:6;10150:17;10146:27;10136:55;;10187:1;10184;10177:12;10136:55;-1:-1:-1;10210:20:351;;10253:18;10242:30;;10239:50;;;10285:1;10282;10275:12;10239:50;10322:4;10314:6;10310:17;10298:29;;10385:3;10378:4;10370;10362:6;10358:17;10350:6;10346:30;10342:41;10339:50;10336:70;;;10402:1;10399;10392:12;10417:873;10601:6;10609;10617;10625;10678:2;10666:9;10657:7;10653:23;10649:32;10646:52;;;10694:1;10691;10684:12;10646:52;10734:9;10721:23;10763:18;10804:2;10796:6;10793:14;10790:34;;;10820:1;10817;10810:12;10790:34;10859:89;10940:7;10931:6;10920:9;10916:22;10859:89;:::i;:::-;10967:8;;-1:-1:-1;10833:115:351;-1:-1:-1;11055:2:351;11040:18;;11027:32;;-1:-1:-1;11071:16:351;;;11068:36;;;11100:1;11097;11090:12;11068:36;;11139:91;11222:7;11211:8;11200:9;11196:24;11139:91;:::i;11295:184::-;11347:77;11344:1;11337:88;11444:4;11441:1;11434:15;11468:4;11465:1;11458:15;11484:125;11549:9;;;11570:10;;;11567:36;;;11583:18;;:::i;11950:366::-;-1:-1:-1;;;;;12193:55:351;;12175:74;;12162:3;12147:19;;12258:52;12306:2;12291:18;;12283:6;11700:12;;11693:20;11686:28;11674:41;;11761:4;11750:16;;;11744:23;11786:34;11852:21;;;11836:14;;;11829:45;;;;11927:4;11916:16;;;11910:23;11906:32;11890:14;;11883:56;11614:331;12672:245;12739:6;12792:2;12780:9;12771:7;12767:23;12763:32;12760:52;;;12808:1;12805;12798:12;12760:52;12840:9;12834:16;12859:28;12881:5;12859:28;:::i;12922:184::-;12992:6;13045:2;13033:9;13024:7;13020:23;13016:32;13013:52;;;13061:1;13058;13051:12;13013:52;-1:-1:-1;13084:16:351;;12922:184;-1:-1:-1;12922:184:351:o;13111:128::-;13178:9;;;13199:11;;;13196:37;;;13213:18;;:::i;13998:184::-;14050:77;14047:1;14040:88;14147:4;14144:1;14137:15;14171:4;14168:1;14161:15;14187:195;14226:3;14257:66;14250:5;14247:77;14244:103;;14327:18;;:::i;:::-;-1:-1:-1;14374:1:351;14363:13;;14187:195::o;14387:245::-;14571:2;14556:18;;14583:43;14560:9;14608:6;11700:12;;11693:20;11686:28;11674:41;;11761:4;11750:16;;;11744:23;11786:34;11852:21;;;11836:14;;;11829:45;;;;11927:4;11916:16;;;11910:23;11906:32;11890:14;;11883:56;11614:331;14939:505;15027:6;15080:3;15068:9;15059:7;15055:23;15051:33;15048:53;;;15097:1;15094;15087:12;15048:53;15123:17;;:::i;:::-;15163:29;15182:9;15163:29;:::i;:::-;15156:5;15149:44;15245:2;15234:9;15230:18;15217:32;15258:30;15280:7;15258:30;:::i;:::-;15315:2;15304:14;;15297:31;15360:53;15405:7;15400:2;15385:18;;15360:53;:::i;:::-;15355:2;15344:14;;15337:77;15348:5;14939:505;-1:-1:-1;;;14939:505:351:o;16212:168::-;16285:9;;;16316;;16333:15;;;16327:22;;16313:37;16303:71;;16354:18;;:::i;17011:274::-;17051:1;17077;17067:189;;17112:77;17109:1;17102:88;17213:4;17210:1;17203:15;17241:4;17238:1;17231:15;17067:189;-1:-1:-1;17270:9:351;;17011:274::o;17290:184::-;17342:77;17339:1;17332:88;17439:4;17436:1;17429:15;17463:4;17460:1;17453:15;17886:287;18015:3;18053:6;18047:13;18069:66;18128:6;18123:3;18116:4;18108:6;18104:17;18069:66;:::i;:::-;18151:16;;;;;17886:287;-1:-1:-1;;17886:287:351:o",
    "linkReferences": {},
    "immutableReferences": {
      "78031": [
        {
          "start": 1093,
          "length": 32
        },
        {
          "start": 1331,
          "length": 32
        }
      ],
      "78407": [
        {
          "start": 569,
          "length": 32
        },
        {
          "start": 1429,
          "length": 32
        },
        {
          "start": 2577,
          "length": 32
        },
        {
          "start": 3285,
          "length": 32
        },
        {
          "start": 3506,
          "length": 32
        },
        {
          "start": 5583,
          "length": 32
        },
        {
          "start": 5727,
          "length": 32
        }
      ],
      "78410": [
        {
          "start": 648,
          "length": 32
        },
        {
          "start": 2372,
          "length": 32
        },
        {
          "start": 2891,
          "length": 32
        }
      ],
      "78413": [
        {
          "start": 1169,
          "length": 32
        },
        {
          "start": 2772,
          "length": 32
        },
        {
          "start": 4547,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "acceptOwnership()": "79ba5097",
    "addLiquidity(uint256)": "51c6590a",
    "applyAllowListUpdates(address[],address[])": "54c8a4f3",
    "applyRampUpdates((address,bool,(bool,uint128,uint128))[],(address,bool,(bool,uint128,uint128))[])": "c49907b5",
    "canAcceptLiquidity()": "bb98546b",
    "currentOffRampRateLimiterState(address)": "b3a3fb41",
    "currentOnRampRateLimiterState(address)": "7787e7ab",
    "getAllowList()": "a7cd63b7",
    "getAllowListEnabled()": "e0351e13",
    "getArmProxy()": "5246492f",
    "getLockReleaseInterfaceId()": "8bfca18c",
    "getOffRamps()": "a40e69c7",
    "getOnRamps()": "87381314",
    "getProvidedLiquidity(address)": "56dd1e81",
    "getToken()": "21df0da7",
    "isOffRamp(address)": "1d7a74a0",
    "isOnRamp(address)": "6f32b872",
    "lockOrBurn(address,bytes,uint256,uint64,bytes)": "96875445",
    "owner()": "8da5cb5b",
    "releaseOrMint(bytes,address,uint256,uint64,bytes)": "8627fad6",
    "removeLiquidity(uint256)": "9c8f9f23",
    "setOffRampRateLimiterConfig(address,(bool,uint128,uint128))": "d612b945",
    "setOnRampRateLimiterConfig(address,(bool,uint128,uint128))": "7448b3c7",
    "supportsInterface(bytes4)": "01ffc9a7",
    "transferOwnership(address)": "f2fde38b",
    "typeAndVersion()": "181f5a77"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"allowlist\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"armProxy\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"acceptLiquidity\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"capacity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requested\",\"type\":\"uint256\"}],\"name\":\"AggregateValueMaxCapacityExceeded\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minWaitInSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"available\",\"type\":\"uint256\"}],\"name\":\"AggregateValueRateLimitReached\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AllowListNotEnabled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BadARMSignal\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BucketOverfilled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientLiquidity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LiquidityNotAccepted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ramp\",\"type\":\"address\"}],\"name\":\"NonExistentRamp\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PermissionsError\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ramp\",\"type\":\"address\"}],\"name\":\"RampAlreadyExists\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"SenderNotAllowed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"capacity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requested\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"TokenMaxCapacityExceeded\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minWaitInSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"available\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"TokenRateLimitReached\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WithdrawalTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddressNotAllowed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"AllowListAdd\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"AllowListRemove\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint128\",\"name\":\"capacity\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"rate\",\"type\":\"uint128\"}],\"indexed\":false,\"internalType\":\"struct RateLimiter.Config\",\"name\":\"config\",\"type\":\"tuple\"}],\"name\":\"ConfigChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LiquidityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LiquidityRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Locked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"offRamp\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint128\",\"name\":\"capacity\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"rate\",\"type\":\"uint128\"}],\"indexed\":false,\"internalType\":\"struct RateLimiter.Config\",\"name\":\"rateLimiterConfig\",\"type\":\"tuple\"}],\"name\":\"OffRampAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"offRamp\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint128\",\"name\":\"capacity\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"rate\",\"type\":\"uint128\"}],\"indexed\":false,\"internalType\":\"struct RateLimiter.Config\",\"name\":\"rateLimiterConfig\",\"type\":\"tuple\"}],\"name\":\"OffRampConfigured\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"offRamp\",\"type\":\"address\"}],\"name\":\"OffRampRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"onRamp\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint128\",\"name\":\"capacity\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"rate\",\"type\":\"uint128\"}],\"indexed\":false,\"internalType\":\"struct RateLimiter.Config\",\"name\":\"rateLimiterConfig\",\"type\":\"tuple\"}],\"name\":\"OnRampAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"onRamp\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint128\",\"name\":\"capacity\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"rate\",\"type\":\"uint128\"}],\"indexed\":false,\"internalType\":\"struct RateLimiter.Config\",\"name\":\"rateLimiterConfig\",\"type\":\"tuple\"}],\"name\":\"OnRampConfigured\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"onRamp\",\"type\":\"address\"}],\"name\":\"OnRampRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Released\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"TokensConsumed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"removes\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"adds\",\"type\":\"address[]\"}],\"name\":\"applyAllowListUpdates\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"ramp\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint128\",\"name\":\"capacity\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"rate\",\"type\":\"uint128\"}],\"internalType\":\"struct RateLimiter.Config\",\"name\":\"rateLimiterConfig\",\"type\":\"tuple\"}],\"internalType\":\"struct TokenPool.RampUpdate[]\",\"name\":\"onRamps\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"ramp\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint128\",\"name\":\"capacity\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"rate\",\"type\":\"uint128\"}],\"internalType\":\"struct RateLimiter.Config\",\"name\":\"rateLimiterConfig\",\"type\":\"tuple\"}],\"internalType\":\"struct TokenPool.RampUpdate[]\",\"name\":\"offRamps\",\"type\":\"tuple[]\"}],\"name\":\"applyRampUpdates\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canAcceptLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"offRamp\",\"type\":\"address\"}],\"name\":\"currentOffRampRateLimiterState\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"tokens\",\"type\":\"uint128\"},{\"internalType\":\"uint32\",\"name\":\"lastUpdated\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"isEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint128\",\"name\":\"capacity\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"rate\",\"type\":\"uint128\"}],\"internalType\":\"struct RateLimiter.TokenBucket\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"onRamp\",\"type\":\"address\"}],\"name\":\"currentOnRampRateLimiterState\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"tokens\",\"type\":\"uint128\"},{\"internalType\":\"uint32\",\"name\":\"lastUpdated\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"isEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint128\",\"name\":\"capacity\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"rate\",\"type\":\"uint128\"}],\"internalType\":\"struct RateLimiter.TokenBucket\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllowList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllowListEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getArmProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"armProxy\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLockReleaseInterfaceId\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOffRamps\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOnRamps\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"getProvidedLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"offRamp\",\"type\":\"address\"}],\"name\":\"isOffRamp\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"onRamp\",\"type\":\"address\"}],\"name\":\"isOnRamp\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"originalSender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"lockOrBurn\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"releaseOrMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"offRamp\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint128\",\"name\":\"capacity\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"rate\",\"type\":\"uint128\"}],\"internalType\":\"struct RateLimiter.Config\",\"name\":\"config\",\"type\":\"tuple\"}],\"name\":\"setOffRampRateLimiterConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"onRamp\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint128\",\"name\":\"capacity\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"rate\",\"type\":\"uint128\"}],\"internalType\":\"struct RateLimiter.Config\",\"name\":\"config\",\"type\":\"tuple\"}],\"name\":\"setOnRampRateLimiterConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"typeAndVersion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"One token per LockReleaseTokenPool.\",\"kind\":\"dev\",\"methods\":{\"addLiquidity(uint256)\":{\"params\":{\"amount\":\"The amount of liquidity to provide.\"}},\"applyAllowListUpdates(address[],address[])\":{\"details\":\"allowListing will be removed before public launch\",\"params\":{\"adds\":\"The addresses to be added.\",\"removes\":\"The addresses to be removed.\"}},\"applyRampUpdates((address,bool,(bool,uint128,uint128))[],(address,bool,(bool,uint128,uint128))[])\":{\"details\":\"Only callable by the owner\",\"params\":{\"offRamps\":\"A list of offRamps and their new permission status/rate limits\",\"onRamps\":\"A list of onRamps and their new permission status/rate limits\"}},\"canAcceptLiquidity()\":{\"returns\":{\"_0\":\"true if the pool can accept liquidity, false otherwise.\"}},\"currentOffRampRateLimiterState(address)\":{\"returns\":{\"_0\":\"The token bucket.\"}},\"currentOnRampRateLimiterState(address)\":{\"returns\":{\"_0\":\"The token bucket.\"}},\"getAllowList()\":{\"returns\":{\"_0\":\"The allowed addresses.\"}},\"getAllowListEnabled()\":{\"returns\":{\"_0\":\"true is enabled, false if not.\"}},\"getArmProxy()\":{\"returns\":{\"armProxy\":\"Address of arm proxy\"}},\"getOffRamps()\":{\"returns\":{\"_0\":\"list of offramps\"}},\"getOnRamps()\":{\"returns\":{\"_0\":\"list of onramps.\"}},\"getProvidedLiquidity(address)\":{\"params\":{\"provider\":\"The address for which to get the balance.\"},\"returns\":{\"_0\":\"The current provided liquidity.\"}},\"getToken()\":{\"returns\":{\"token\":\"The IERC20 token representation.\"}},\"isOffRamp(address)\":{\"returns\":{\"_0\":\"true if the given address is a permissioned offRamp.\"}},\"isOnRamp(address)\":{\"returns\":{\"_0\":\"true if the given address is a permissioned onRamp.\"}},\"lockOrBurn(address,bytes,uint256,uint64,bytes)\":{\"details\":\"The whenHealthy check is important to ensure that even if a ramp is compromised we're able to stop token movement via ARM.\",\"params\":{\"amount\":\"Amount to lock\"}},\"releaseOrMint(bytes,address,uint256,uint64,bytes)\":{\"details\":\"The whenHealthy check is important to ensure that even if a ramp is compromised we're able to stop token movement via ARM.\",\"params\":{\"amount\":\"Amount to release\",\"receiver\":\"Recipient address\"}},\"removeLiquidity(uint256)\":{\"params\":{\"amount\":\"The amount of liquidity to remove.\"}},\"setOffRampRateLimiterConfig(address,(bool,uint128,uint128))\":{\"params\":{\"config\":\"The new rate limiter config.\"}},\"setOnRampRateLimiterConfig(address,(bool,uint128,uint128))\":{\"params\":{\"config\":\"The new rate limiter config.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"stateVariables\":{\"LOCK_RELEASE_INTERFACE_ID\":{\"details\":\"The unique lock release pool flag to signal through EIP 165.\"},\"i_acceptLiquidity\":{\"details\":\"Whether or not the pool accepts liquidity. External liquidity is not required when there is one canonical token deployed to a chain, and CCIP is facilitating mint/burn on all the other chains, in which case the invariant balanceOf(pool) on home chain == sum(totalSupply(mint/burn \\\"wrapped\\\" token) on all remote chains) should always hold\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"addLiquidity(uint256)\":{\"notice\":\"Adds liquidity to the pool. The tokens should be approved first.\"},\"applyAllowListUpdates(address[],address[])\":{\"notice\":\"Apply updates to the allow list.\"},\"applyRampUpdates((address,bool,(bool,uint128,uint128))[],(address,bool,(bool,uint128,uint128))[])\":{\"notice\":\"Sets permissions for all on and offRamps.\"},\"canAcceptLiquidity()\":{\"notice\":\"Checks if the pool can accept liquidity.\"},\"currentOffRampRateLimiterState(address)\":{\"notice\":\"Gets the token bucket with its values for the block it was requested at.\"},\"currentOnRampRateLimiterState(address)\":{\"notice\":\"Gets the token bucket with its values for the block it was requested at.\"},\"getAllowList()\":{\"notice\":\"Gets the allowed addresses.\"},\"getAllowListEnabled()\":{\"notice\":\"Gets whether the allowList functionality is enabled.\"},\"getArmProxy()\":{\"notice\":\"Get ARM proxy address\"},\"getLockReleaseInterfaceId()\":{\"notice\":\"returns the lock release interface flag used for EIP165 identification.\"},\"getOffRamps()\":{\"notice\":\"Get offRamp whitelist\"},\"getOnRamps()\":{\"notice\":\"Get onRamp whitelist\"},\"getProvidedLiquidity(address)\":{\"notice\":\"Gets the amount of provided liquidity for a given address.\"},\"getToken()\":{\"notice\":\"Gets the IERC20 token that this pool can lock or burn.\"},\"isOffRamp(address)\":{\"notice\":\"Checks whether something is a permissioned offRamp on this contract.\"},\"isOnRamp(address)\":{\"notice\":\"Checks whether something is a permissioned onRamp on this contract.\"},\"lockOrBurn(address,bytes,uint256,uint64,bytes)\":{\"notice\":\"Locks the token in the pool\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"releaseOrMint(bytes,address,uint256,uint64,bytes)\":{\"notice\":\"Release tokens from the pool to the recipient\"},\"removeLiquidity(uint256)\":{\"notice\":\"Removed liquidity to the pool. The tokens will be sent to msg.sender.\"},\"setOffRampRateLimiterConfig(address,(bool,uint128,uint128))\":{\"notice\":\"Sets the offramp rate limited config.\"},\"setOnRampRateLimiterConfig(address,(bool,uint128,uint128))\":{\"notice\":\"Sets the onramp rate limited config.\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address, pending.\"}},\"notice\":\"Token pool used for tokens on their native chain. This uses a lock and release mechanism. Because of lock/unlock requiring liquidity, this pool contract also has function to add and remove liquidity. This allows for proper bookkeeping for both user and liquidity provider balances.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/v0.8/ccip/pools/LockReleaseTokenPool.sol\":\"LockReleaseTokenPool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@ERC3643/=lib/ERC-3643/contracts/\",\":@chainlink/contracts-ccip/=src/v0.8/\",\":@chainlink/contracts/=node_modules/@chainlink/contracts/src/v0.6/\",\":@erc721a/=lib/ERC721A/contracts/\",\":@onchain-id/solidity/contracts/=lib/solidity/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/test/=lib/prb-test/src/\",\":ERC-3643/=lib/ERC-3643/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/contracts-upgradleable/=lib/openzeppelin-contracts-upgradleable/contracts/\",\":prb-test/=lib/prb-test/src/\",\":solidity/=lib/solidity/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"src/v0.8/ccip/interfaces/IARM.sol\":{\"keccak256\":\"0x7d0609f6b36bce268df88bb6b525d1b53033f5ad443579a22f06ba92974f89cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9899c4237f92f635ed23f8403963091c996dcc2d5bac540f5cb0010b95246429\",\"dweb:/ipfs/QmSri7Q36D5UCPRvDoCFr9RJYQKLKr9188wRxrVYyADVH4\"]},\"src/v0.8/ccip/interfaces/pools/IPool.sol\":{\"keccak256\":\"0xd1304829f4a2f244935c2825bb963a2ce885d67716a8286d2e09230679cae840\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e0cc32b9a6e49b56ebf8231e173c650b29cb83b8d47cbf186564cb5cf4c9e7e\",\"dweb:/ipfs/QmawsMRBgPHyRifjqsY9iw7ebMkzJsKHvDHahYa9A1kLDZ\"]},\"src/v0.8/ccip/libraries/RateLimiter.sol\":{\"keccak256\":\"0xb0e8f990d5d6fd39a9aef9cc2205dde67cf455cdcf5affb2131e19af78043c46\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b5f5ce55dcabec0ced8f428595e10058fbbfa1716acaec3efc9d5abd3dc8d944\",\"dweb:/ipfs/QmPJifoX1cAj9pL23g2Vnn91iSsS3MbBWuQ1CuCkxE8Q1N\"]},\"src/v0.8/ccip/pools/LockReleaseTokenPool.sol\":{\"keccak256\":\"0x25aee83b59830bf5f72f4d6562c8662a0ff1250911e19f49ca471d47eecc9859\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1480c6bd14e3404548a18a004c236beef5ee5ee136a0bbea654c8417bc902a1a\",\"dweb:/ipfs/QmQCWa7mE8fJEVS8U2VyuHCik58CF5gkXfzERyofy3GFV9\"]},\"src/v0.8/ccip/pools/TokenPool.sol\":{\"keccak256\":\"0xe82b1ebd484a495e9d8d59b345467150ea4d78e7b681f1f86f9f41615301337d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://272e875f21a68edda985623b1d0efb90cf667b4efa99bd6447479a2ecc0081b2\",\"dweb:/ipfs/QmbSJM56Q74o3sZXThcRQH3tx3RUWBAuru6yJDFRJGvS4A\"]},\"src/v0.8/shared/access/ConfirmedOwner.sol\":{\"keccak256\":\"0x99d0b0786fe368970009c703f2249bfbc56340ddf1a28b60d2915bb58c34cd72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af0371c1af45db651823b9a3d5af761b08243c78f105166342eee28de356c8dd\",\"dweb:/ipfs/QmPnC9qNDKwJFd5unwLb9pxjrutoe8MWjm5EXHTxq2kJ4x\"]},\"src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"keccak256\":\"0x215529a99534a40e6257ef2282a91ea4a95b66debc3997866406907622efb405\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecc56a2cddb1ba6225ca0cffb07fdf6e24bcc4234cc87710c42a59c0a21ae395\",\"dweb:/ipfs/QmSpW4vkPHeRNZ14beMEk2LEtqY5JQTueNJC4sCT8JaSoc\"]},\"src/v0.8/shared/access/OwnerIsCreator.sol\":{\"keccak256\":\"0x895af02d6a3df2930bbb6ec1f2d68118b492ca6e710ba0c34fcb6b574a0906aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4c69fab5eea1c0448f856a51d7e5736454fe5cc083d36c60bf3ee23bb3d0e8e\",\"dweb:/ipfs/QmP4fYQ9k7xeZms6cwnqnQuuAkRkeE2TWewyvCD8Mrc2DZ\"]},\"src/v0.8/shared/interfaces/IOwnable.sol\":{\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921\",\"dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q\"]},\"src/v0.8/shared/interfaces/ITypeAndVersion.sol\":{\"keccak256\":\"0xf5827cb463c01d055021684d04f9186391c2d9ac850e0d0819f76140e4fc84ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a19c7bae07330e6d7904a0a21cf0ab0067ef096b66c1653a2e012801a931c5b9\",\"dweb:/ipfs/QmckpvSuLx8UL8zfVzAtN6ZRxyXHUSVqqz2JwYZ2jrK58h\"]},\"src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x527e858729af8197f6c8f99554d32bfc4f5a72b15975489c94809363d7ae522f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6828dfa867eaff18f383aad4ca4b5aaedb93109023d74aaf418fee6c06e556c2\",\"dweb:/ipfs/QmXSQ9WnaJ6Ba9gvKvgNxDY7sa7ATJ9V55uwGSGCpBuJKu\"]},\"src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0x28d267ba89cbaca4a86577add59f1a18842ca6e7d80a05f3dbf52127928a5e2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67a26777e88ae78952713f4479ca3126db804dc9ce1a85f079ec067393a6275d\",\"dweb:/ipfs/QmNLxBkkA6os8W9vUeCsjcFsMkGhtqAZrGjPuoACTqVhbh\"]},\"src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x19d64e8f5fa895ab2625917111fd9f316d4f9314239f0712fd6dc2f5bff9d0c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://14de158ff9e64ebeac381bba59fe3500b48853063cfb27343090a3f710795fee\",\"dweb:/ipfs/QmQJE5SfDfgy8aKENnsjW4t9P4bmTSnujotFmnXnrwpfzQ\"]},\"src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/utils/Address.sol\":{\"keccak256\":\"0x172a09a55d730f20a9bb309086a4ad06b17c612151f58bab2b44efe78d583d4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f812456ddd112f09606bfc5965c6e643558d740264273017ad556122502b4e2\",\"dweb:/ipfs/QmdWE4wncanz9Lhu5ESgSo14jAR74Ss5puCM5zUGonATLw\"]},\"src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa36a31b4bb17fad88d023474893b3b895fa421650543b1ce5aefc78efbd43244\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f235b9175d95111f301d729566e214c32559e55a2b0579c947484748e20679d\",\"dweb:/ipfs/QmSsNBuPejy1wNe2u3JSt2p9wFhrjvBjFrnAaNe1nDNkEA\"]},\"src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9ec0d82ee53d4137be44f1f38f9a82d0d3a2027b3b8b226a5a90e4ee76e926d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f783b453420dee16bb4f0839e3d2485d753d2dcd317adbeecb7e510c39563f57\",\"dweb:/ipfs/QmUd4BeCaw6ZujaYvvMrCn2BNqmiP4bt4eA9rxiXY5od5E\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "allowlist",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "armProxy",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "acceptLiquidity",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "capacity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "requested",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "AggregateValueMaxCapacityExceeded"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "minWaitInSeconds",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "available",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "AggregateValueRateLimitReached"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AllowListNotEnabled"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BadARMSignal"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BucketOverfilled"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InsufficientLiquidity"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LiquidityNotAccepted"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "ramp",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "NonExistentRamp"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PermissionsError"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "ramp",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "RampAlreadyExists"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "SenderNotAllowed"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "capacity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "requested",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "TokenMaxCapacityExceeded"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "minWaitInSeconds",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "available",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "TokenRateLimitReached"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "WithdrawalTooHigh"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZeroAddressNotAllowed"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AllowListAdd",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AllowListRemove",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Burned",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct RateLimiter.Config",
              "name": "config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "isEnabled",
                  "type": "bool"
                },
                {
                  "internalType": "uint128",
                  "name": "capacity",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "rate",
                  "type": "uint128"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ConfigChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "provider",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "LiquidityAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "provider",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "LiquidityRemoved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Locked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Minted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "offRamp",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "struct RateLimiter.Config",
              "name": "rateLimiterConfig",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "isEnabled",
                  "type": "bool"
                },
                {
                  "internalType": "uint128",
                  "name": "capacity",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "rate",
                  "type": "uint128"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OffRampAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "offRamp",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "struct RateLimiter.Config",
              "name": "rateLimiterConfig",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "isEnabled",
                  "type": "bool"
                },
                {
                  "internalType": "uint128",
                  "name": "capacity",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "rate",
                  "type": "uint128"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OffRampConfigured",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "offRamp",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OffRampRemoved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "onRamp",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "struct RateLimiter.Config",
              "name": "rateLimiterConfig",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "isEnabled",
                  "type": "bool"
                },
                {
                  "internalType": "uint128",
                  "name": "capacity",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "rate",
                  "type": "uint128"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OnRampAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "onRamp",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "struct RateLimiter.Config",
              "name": "rateLimiterConfig",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "isEnabled",
                  "type": "bool"
                },
                {
                  "internalType": "uint128",
                  "name": "capacity",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "rate",
                  "type": "uint128"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OnRampConfigured",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "onRamp",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OnRampRemoved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferRequested",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Released",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokens",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensConsumed",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addLiquidity"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "removes",
              "type": "address[]"
            },
            {
              "internalType": "address[]",
              "name": "adds",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "applyAllowListUpdates"
        },
        {
          "inputs": [
            {
              "internalType": "struct TokenPool.RampUpdate[]",
              "name": "onRamps",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "ramp",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "allowed",
                  "type": "bool"
                },
                {
                  "internalType": "struct RateLimiter.Config",
                  "name": "rateLimiterConfig",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "isEnabled",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint128",
                      "name": "capacity",
                      "type": "uint128"
                    },
                    {
                      "internalType": "uint128",
                      "name": "rate",
                      "type": "uint128"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct TokenPool.RampUpdate[]",
              "name": "offRamps",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "ramp",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "allowed",
                  "type": "bool"
                },
                {
                  "internalType": "struct RateLimiter.Config",
                  "name": "rateLimiterConfig",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "isEnabled",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint128",
                      "name": "capacity",
                      "type": "uint128"
                    },
                    {
                      "internalType": "uint128",
                      "name": "rate",
                      "type": "uint128"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "applyRampUpdates"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "canAcceptLiquidity",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "offRamp",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "currentOffRampRateLimiterState",
          "outputs": [
            {
              "internalType": "struct RateLimiter.TokenBucket",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint128",
                  "name": "tokens",
                  "type": "uint128"
                },
                {
                  "internalType": "uint32",
                  "name": "lastUpdated",
                  "type": "uint32"
                },
                {
                  "internalType": "bool",
                  "name": "isEnabled",
                  "type": "bool"
                },
                {
                  "internalType": "uint128",
                  "name": "capacity",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "rate",
                  "type": "uint128"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "onRamp",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "currentOnRampRateLimiterState",
          "outputs": [
            {
              "internalType": "struct RateLimiter.TokenBucket",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint128",
                  "name": "tokens",
                  "type": "uint128"
                },
                {
                  "internalType": "uint32",
                  "name": "lastUpdated",
                  "type": "uint32"
                },
                {
                  "internalType": "bool",
                  "name": "isEnabled",
                  "type": "bool"
                },
                {
                  "internalType": "uint128",
                  "name": "capacity",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "rate",
                  "type": "uint128"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllowList",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllowListEnabled",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getArmProxy",
          "outputs": [
            {
              "internalType": "address",
              "name": "armProxy",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getLockReleaseInterfaceId",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getOffRamps",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getOnRamps",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "provider",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getProvidedLiquidity",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getToken",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "offRamp",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOffRamp",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "onRamp",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOnRamp",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "originalSender",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "lockOrBurn",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "releaseOrMint"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeLiquidity"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "offRamp",
              "type": "address"
            },
            {
              "internalType": "struct RateLimiter.Config",
              "name": "config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "isEnabled",
                  "type": "bool"
                },
                {
                  "internalType": "uint128",
                  "name": "capacity",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "rate",
                  "type": "uint128"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOffRampRateLimiterConfig"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "onRamp",
              "type": "address"
            },
            {
              "internalType": "struct RateLimiter.Config",
              "name": "config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "isEnabled",
                  "type": "bool"
                },
                {
                  "internalType": "uint128",
                  "name": "capacity",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "rate",
                  "type": "uint128"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOnRampRateLimiterConfig"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "typeAndVersion",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addLiquidity(uint256)": {
            "params": {
              "amount": "The amount of liquidity to provide."
            }
          },
          "applyAllowListUpdates(address[],address[])": {
            "details": "allowListing will be removed before public launch",
            "params": {
              "adds": "The addresses to be added.",
              "removes": "The addresses to be removed."
            }
          },
          "applyRampUpdates((address,bool,(bool,uint128,uint128))[],(address,bool,(bool,uint128,uint128))[])": {
            "details": "Only callable by the owner",
            "params": {
              "offRamps": "A list of offRamps and their new permission status/rate limits",
              "onRamps": "A list of onRamps and their new permission status/rate limits"
            }
          },
          "canAcceptLiquidity()": {
            "returns": {
              "_0": "true if the pool can accept liquidity, false otherwise."
            }
          },
          "currentOffRampRateLimiterState(address)": {
            "returns": {
              "_0": "The token bucket."
            }
          },
          "currentOnRampRateLimiterState(address)": {
            "returns": {
              "_0": "The token bucket."
            }
          },
          "getAllowList()": {
            "returns": {
              "_0": "The allowed addresses."
            }
          },
          "getAllowListEnabled()": {
            "returns": {
              "_0": "true is enabled, false if not."
            }
          },
          "getArmProxy()": {
            "returns": {
              "armProxy": "Address of arm proxy"
            }
          },
          "getOffRamps()": {
            "returns": {
              "_0": "list of offramps"
            }
          },
          "getOnRamps()": {
            "returns": {
              "_0": "list of onramps."
            }
          },
          "getProvidedLiquidity(address)": {
            "params": {
              "provider": "The address for which to get the balance."
            },
            "returns": {
              "_0": "The current provided liquidity."
            }
          },
          "getToken()": {
            "returns": {
              "token": "The IERC20 token representation."
            }
          },
          "isOffRamp(address)": {
            "returns": {
              "_0": "true if the given address is a permissioned offRamp."
            }
          },
          "isOnRamp(address)": {
            "returns": {
              "_0": "true if the given address is a permissioned onRamp."
            }
          },
          "lockOrBurn(address,bytes,uint256,uint64,bytes)": {
            "details": "The whenHealthy check is important to ensure that even if a ramp is compromised we're able to stop token movement via ARM.",
            "params": {
              "amount": "Amount to lock"
            }
          },
          "releaseOrMint(bytes,address,uint256,uint64,bytes)": {
            "details": "The whenHealthy check is important to ensure that even if a ramp is compromised we're able to stop token movement via ARM.",
            "params": {
              "amount": "Amount to release",
              "receiver": "Recipient address"
            }
          },
          "removeLiquidity(uint256)": {
            "params": {
              "amount": "The amount of liquidity to remove."
            }
          },
          "setOffRampRateLimiterConfig(address,(bool,uint128,uint128))": {
            "params": {
              "config": "The new rate limiter config."
            }
          },
          "setOnRampRateLimiterConfig(address,(bool,uint128,uint128))": {
            "params": {
              "config": "The new rate limiter config."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "acceptOwnership()": {
            "notice": "Allows an ownership transfer to be completed by the recipient."
          },
          "addLiquidity(uint256)": {
            "notice": "Adds liquidity to the pool. The tokens should be approved first."
          },
          "applyAllowListUpdates(address[],address[])": {
            "notice": "Apply updates to the allow list."
          },
          "applyRampUpdates((address,bool,(bool,uint128,uint128))[],(address,bool,(bool,uint128,uint128))[])": {
            "notice": "Sets permissions for all on and offRamps."
          },
          "canAcceptLiquidity()": {
            "notice": "Checks if the pool can accept liquidity."
          },
          "currentOffRampRateLimiterState(address)": {
            "notice": "Gets the token bucket with its values for the block it was requested at."
          },
          "currentOnRampRateLimiterState(address)": {
            "notice": "Gets the token bucket with its values for the block it was requested at."
          },
          "getAllowList()": {
            "notice": "Gets the allowed addresses."
          },
          "getAllowListEnabled()": {
            "notice": "Gets whether the allowList functionality is enabled."
          },
          "getArmProxy()": {
            "notice": "Get ARM proxy address"
          },
          "getLockReleaseInterfaceId()": {
            "notice": "returns the lock release interface flag used for EIP165 identification."
          },
          "getOffRamps()": {
            "notice": "Get offRamp whitelist"
          },
          "getOnRamps()": {
            "notice": "Get onRamp whitelist"
          },
          "getProvidedLiquidity(address)": {
            "notice": "Gets the amount of provided liquidity for a given address."
          },
          "getToken()": {
            "notice": "Gets the IERC20 token that this pool can lock or burn."
          },
          "isOffRamp(address)": {
            "notice": "Checks whether something is a permissioned offRamp on this contract."
          },
          "isOnRamp(address)": {
            "notice": "Checks whether something is a permissioned onRamp on this contract."
          },
          "lockOrBurn(address,bytes,uint256,uint64,bytes)": {
            "notice": "Locks the token in the pool"
          },
          "owner()": {
            "notice": "Get the current owner"
          },
          "releaseOrMint(bytes,address,uint256,uint64,bytes)": {
            "notice": "Release tokens from the pool to the recipient"
          },
          "removeLiquidity(uint256)": {
            "notice": "Removed liquidity to the pool. The tokens will be sent to msg.sender."
          },
          "setOffRampRateLimiterConfig(address,(bool,uint128,uint128))": {
            "notice": "Sets the offramp rate limited config."
          },
          "setOnRampRateLimiterConfig(address,(bool,uint128,uint128))": {
            "notice": "Sets the onramp rate limited config."
          },
          "transferOwnership(address)": {
            "notice": "Allows an owner to begin transferring ownership to a new address, pending."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ERC3643/=lib/ERC-3643/contracts/",
        "@chainlink/contracts-ccip/=src/v0.8/",
        "@chainlink/contracts/=node_modules/@chainlink/contracts/src/v0.6/",
        "@erc721a/=lib/ERC721A/contracts/",
        "@onchain-id/solidity/contracts/=lib/solidity/contracts/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@prb/test/=lib/prb-test/src/",
        "ERC-3643/=lib/ERC-3643/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/contracts-upgradleable/=lib/openzeppelin-contracts-upgradleable/contracts/",
        "prb-test/=lib/prb-test/src/",
        "solidity/=lib/solidity/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10000
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/v0.8/ccip/pools/LockReleaseTokenPool.sol": "LockReleaseTokenPool"
      },
      "libraries": {}
    },
    "sources": {
      "src/v0.8/ccip/interfaces/IARM.sol": {
        "keccak256": "0x7d0609f6b36bce268df88bb6b525d1b53033f5ad443579a22f06ba92974f89cb",
        "urls": [
          "bzz-raw://9899c4237f92f635ed23f8403963091c996dcc2d5bac540f5cb0010b95246429",
          "dweb:/ipfs/QmSri7Q36D5UCPRvDoCFr9RJYQKLKr9188wRxrVYyADVH4"
        ],
        "license": "MIT"
      },
      "src/v0.8/ccip/interfaces/pools/IPool.sol": {
        "keccak256": "0xd1304829f4a2f244935c2825bb963a2ce885d67716a8286d2e09230679cae840",
        "urls": [
          "bzz-raw://0e0cc32b9a6e49b56ebf8231e173c650b29cb83b8d47cbf186564cb5cf4c9e7e",
          "dweb:/ipfs/QmawsMRBgPHyRifjqsY9iw7ebMkzJsKHvDHahYa9A1kLDZ"
        ],
        "license": "MIT"
      },
      "src/v0.8/ccip/libraries/RateLimiter.sol": {
        "keccak256": "0xb0e8f990d5d6fd39a9aef9cc2205dde67cf455cdcf5affb2131e19af78043c46",
        "urls": [
          "bzz-raw://b5f5ce55dcabec0ced8f428595e10058fbbfa1716acaec3efc9d5abd3dc8d944",
          "dweb:/ipfs/QmPJifoX1cAj9pL23g2Vnn91iSsS3MbBWuQ1CuCkxE8Q1N"
        ],
        "license": "BUSL-1.1"
      },
      "src/v0.8/ccip/pools/LockReleaseTokenPool.sol": {
        "keccak256": "0x25aee83b59830bf5f72f4d6562c8662a0ff1250911e19f49ca471d47eecc9859",
        "urls": [
          "bzz-raw://1480c6bd14e3404548a18a004c236beef5ee5ee136a0bbea654c8417bc902a1a",
          "dweb:/ipfs/QmQCWa7mE8fJEVS8U2VyuHCik58CF5gkXfzERyofy3GFV9"
        ],
        "license": "BUSL-1.1"
      },
      "src/v0.8/ccip/pools/TokenPool.sol": {
        "keccak256": "0xe82b1ebd484a495e9d8d59b345467150ea4d78e7b681f1f86f9f41615301337d",
        "urls": [
          "bzz-raw://272e875f21a68edda985623b1d0efb90cf667b4efa99bd6447479a2ecc0081b2",
          "dweb:/ipfs/QmbSJM56Q74o3sZXThcRQH3tx3RUWBAuru6yJDFRJGvS4A"
        ],
        "license": "BUSL-1.1"
      },
      "src/v0.8/shared/access/ConfirmedOwner.sol": {
        "keccak256": "0x99d0b0786fe368970009c703f2249bfbc56340ddf1a28b60d2915bb58c34cd72",
        "urls": [
          "bzz-raw://af0371c1af45db651823b9a3d5af761b08243c78f105166342eee28de356c8dd",
          "dweb:/ipfs/QmPnC9qNDKwJFd5unwLb9pxjrutoe8MWjm5EXHTxq2kJ4x"
        ],
        "license": "MIT"
      },
      "src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol": {
        "keccak256": "0x215529a99534a40e6257ef2282a91ea4a95b66debc3997866406907622efb405",
        "urls": [
          "bzz-raw://ecc56a2cddb1ba6225ca0cffb07fdf6e24bcc4234cc87710c42a59c0a21ae395",
          "dweb:/ipfs/QmSpW4vkPHeRNZ14beMEk2LEtqY5JQTueNJC4sCT8JaSoc"
        ],
        "license": "MIT"
      },
      "src/v0.8/shared/access/OwnerIsCreator.sol": {
        "keccak256": "0x895af02d6a3df2930bbb6ec1f2d68118b492ca6e710ba0c34fcb6b574a0906aa",
        "urls": [
          "bzz-raw://c4c69fab5eea1c0448f856a51d7e5736454fe5cc083d36c60bf3ee23bb3d0e8e",
          "dweb:/ipfs/QmP4fYQ9k7xeZms6cwnqnQuuAkRkeE2TWewyvCD8Mrc2DZ"
        ],
        "license": "MIT"
      },
      "src/v0.8/shared/interfaces/IOwnable.sol": {
        "keccak256": "0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767",
        "urls": [
          "bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921",
          "dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q"
        ],
        "license": "MIT"
      },
      "src/v0.8/shared/interfaces/ITypeAndVersion.sol": {
        "keccak256": "0xf5827cb463c01d055021684d04f9186391c2d9ac850e0d0819f76140e4fc84ed",
        "urls": [
          "bzz-raw://a19c7bae07330e6d7904a0a21cf0ab0067ef096b66c1653a2e012801a931c5b9",
          "dweb:/ipfs/QmckpvSuLx8UL8zfVzAtN6ZRxyXHUSVqqz2JwYZ2jrK58h"
        ],
        "license": "MIT"
      },
      "src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x527e858729af8197f6c8f99554d32bfc4f5a72b15975489c94809363d7ae522f",
        "urls": [
          "bzz-raw://6828dfa867eaff18f383aad4ca4b5aaedb93109023d74aaf418fee6c06e556c2",
          "dweb:/ipfs/QmXSQ9WnaJ6Ba9gvKvgNxDY7sa7ATJ9V55uwGSGCpBuJKu"
        ],
        "license": "MIT"
      },
      "src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0x28d267ba89cbaca4a86577add59f1a18842ca6e7d80a05f3dbf52127928a5e2c",
        "urls": [
          "bzz-raw://67a26777e88ae78952713f4479ca3126db804dc9ce1a85f079ec067393a6275d",
          "dweb:/ipfs/QmNLxBkkA6os8W9vUeCsjcFsMkGhtqAZrGjPuoACTqVhbh"
        ],
        "license": "MIT"
      },
      "src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x19d64e8f5fa895ab2625917111fd9f316d4f9314239f0712fd6dc2f5bff9d0c9",
        "urls": [
          "bzz-raw://14de158ff9e64ebeac381bba59fe3500b48853063cfb27343090a3f710795fee",
          "dweb:/ipfs/QmQJE5SfDfgy8aKENnsjW4t9P4bmTSnujotFmnXnrwpfzQ"
        ],
        "license": "MIT"
      },
      "src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/utils/Address.sol": {
        "keccak256": "0x172a09a55d730f20a9bb309086a4ad06b17c612151f58bab2b44efe78d583d4e",
        "urls": [
          "bzz-raw://1f812456ddd112f09606bfc5965c6e643558d740264273017ad556122502b4e2",
          "dweb:/ipfs/QmdWE4wncanz9Lhu5ESgSo14jAR74Ss5puCM5zUGonATLw"
        ],
        "license": "MIT"
      },
      "src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0xa36a31b4bb17fad88d023474893b3b895fa421650543b1ce5aefc78efbd43244",
        "urls": [
          "bzz-raw://0f235b9175d95111f301d729566e214c32559e55a2b0579c947484748e20679d",
          "dweb:/ipfs/QmSsNBuPejy1wNe2u3JSt2p9wFhrjvBjFrnAaNe1nDNkEA"
        ],
        "license": "MIT"
      },
      "src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x9ec0d82ee53d4137be44f1f38f9a82d0d3a2027b3b8b226a5a90e4ee76e926d6",
        "urls": [
          "bzz-raw://f783b453420dee16bb4f0839e3d2485d753d2dcd317adbeecb7e510c39563f57",
          "dweb:/ipfs/QmUd4BeCaw6ZujaYvvMrCn2BNqmiP4bt4eA9rxiXY5od5E"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/v0.8/ccip/pools/LockReleaseTokenPool.sol",
    "id": 78273,
    "exportedSymbols": {
      "IERC20": [
        137559
      ],
      "ITypeAndVersion": [
        122903
      ],
      "LockReleaseTokenPool": [
        78272
      ],
      "SafeERC20": [
        138117
      ],
      "TokenPool": [
        79129
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:5107:133",
    "nodes": [
      {
        "id": 77980,
        "nodeType": "PragmaDirective",
        "src": "37:24:133",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 77982,
        "nodeType": "ImportDirective",
        "src": "63:76:133",
        "nodes": [],
        "absolutePath": "src/v0.8/shared/interfaces/ITypeAndVersion.sol",
        "file": "../../shared/interfaces/ITypeAndVersion.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78273,
        "sourceUnit": 122904,
        "symbolAliases": [
          {
            "foreign": {
              "id": 77981,
              "name": "ITypeAndVersion",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 122903,
              "src": "71:15:133",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 77984,
        "nodeType": "ImportDirective",
        "src": "141:42:133",
        "nodes": [],
        "absolutePath": "src/v0.8/ccip/pools/TokenPool.sol",
        "file": "./TokenPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78273,
        "sourceUnit": 79130,
        "symbolAliases": [
          {
            "foreign": {
              "id": 77983,
              "name": "TokenPool",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 79129,
              "src": "149:9:133",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 77986,
        "nodeType": "ImportDirective",
        "src": "185:98:133",
        "nodes": [],
        "absolutePath": "src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/token/ERC20/IERC20.sol",
        "file": "../../vendor/openzeppelin-solidity/v4.8.0/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78273,
        "sourceUnit": 137560,
        "symbolAliases": [
          {
            "foreign": {
              "id": 77985,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 137559,
              "src": "193:6:133",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 77988,
        "nodeType": "ImportDirective",
        "src": "284:110:133",
        "nodes": [],
        "absolutePath": "src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "../../vendor/openzeppelin-solidity/v4.8.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78273,
        "sourceUnit": 138118,
        "symbolAliases": [
          {
            "foreign": {
              "id": 77987,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 138117,
              "src": "292:9:133",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 78272,
        "nodeType": "ContractDefinition",
        "src": "743:4400:133",
        "nodes": [
          {
            "id": 77997,
            "nodeType": "UsingForDirective",
            "src": "807:27:133",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 77994,
              "name": "SafeERC20",
              "nameLocations": [
                "813:9:133"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 138117,
              "src": "813:9:133"
            },
            "typeName": {
              "id": 77996,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 77995,
                "name": "IERC20",
                "nameLocations": [
                  "827:6:133"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 137559,
                "src": "827:6:133"
              },
              "referencedDeclaration": 137559,
              "src": "827:6:133",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$137559",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 78003,
            "nodeType": "EventDefinition",
            "src": "838:71:133",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "c17cea59c2955cb181b03393209566960365771dbba9dc3d510180e7cb312088",
            "name": "LiquidityAdded",
            "nameLocation": "844:14:133",
            "parameters": {
              "id": 78002,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77999,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "provider",
                  "nameLocation": "875:8:133",
                  "nodeType": "VariableDeclaration",
                  "scope": 78003,
                  "src": "859:24:133",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77998,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "859:7:133",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78001,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "901:6:133",
                  "nodeType": "VariableDeclaration",
                  "scope": 78003,
                  "src": "885:22:133",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 78000,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "885:7:133",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "858:50:133"
            }
          },
          {
            "id": 78009,
            "nodeType": "EventDefinition",
            "src": "912:73:133",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "c2c3f06e49b9f15e7b4af9055e183b0d73362e033ad82a07dec9bf9840171719",
            "name": "LiquidityRemoved",
            "nameLocation": "918:16:133",
            "parameters": {
              "id": 78008,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78005,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "provider",
                  "nameLocation": "951:8:133",
                  "nodeType": "VariableDeclaration",
                  "scope": 78009,
                  "src": "935:24:133",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 78004,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "935:7:133",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78007,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "977:6:133",
                  "nodeType": "VariableDeclaration",
                  "scope": 78009,
                  "src": "961:22:133",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 78006,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "961:7:133",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "934:50:133"
            }
          },
          {
            "id": 78011,
            "nodeType": "ErrorDefinition",
            "src": "989:30:133",
            "nodes": [],
            "errorSelector": "bb55fd27",
            "name": "InsufficientLiquidity",
            "nameLocation": "995:21:133",
            "parameters": {
              "id": 78010,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1016:2:133"
            }
          },
          {
            "id": 78013,
            "nodeType": "ErrorDefinition",
            "src": "1022:26:133",
            "nodes": [],
            "errorSelector": "69820120",
            "name": "WithdrawalTooHigh",
            "nameLocation": "1028:17:133",
            "parameters": {
              "id": 78012,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1045:2:133"
            }
          },
          {
            "id": 78015,
            "nodeType": "ErrorDefinition",
            "src": "1051:29:133",
            "nodes": [],
            "errorSelector": "e93f8fa4",
            "name": "LiquidityNotAccepted",
            "nameLocation": "1057:20:133",
            "parameters": {
              "id": 78014,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1077:2:133"
            }
          },
          {
            "id": 78019,
            "nodeType": "VariableDeclaration",
            "src": "1170:77:133",
            "nodes": [],
            "baseFunctions": [
              122902
            ],
            "constant": true,
            "functionSelector": "181f5a77",
            "mutability": "constant",
            "name": "typeAndVersion",
            "nameLocation": "1202:14:133",
            "overrides": {
              "id": 78017,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1193:8:133"
            },
            "scope": 78272,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 78016,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1170:6:133",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "4c6f636b52656c65617365546f6b656e506f6f6c20312e322e30",
              "id": 78018,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1219:28:133",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_3c2ba2538070f3661fbd8c5bc44aa57e5305b8704b273bfb750f5d8e59216935",
                "typeString": "literal_string \"LockReleaseTokenPool 1.2.0\""
              },
              "value": "LockReleaseTokenPool 1.2.0"
            },
            "visibility": "public"
          },
          {
            "id": 78028,
            "nodeType": "VariableDeclaration",
            "src": "1324:93:133",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 78020,
              "nodeType": "StructuredDocumentation",
              "src": "1252:69:133",
              "text": "@dev The unique lock release pool flag to signal through EIP 165."
            },
            "mutability": "constant",
            "name": "LOCK_RELEASE_INTERFACE_ID",
            "nameLocation": "1348:25:133",
            "scope": 78272,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 78021,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "1324:6:133",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "4c6f636b52656c65617365546f6b656e506f6f6c",
                      "id": 78025,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1393:22:133",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_98a4717726e0b4881e6ed4b01819dd36ad05b1c791d74f437733024dd8fcf6ad",
                        "typeString": "literal_string \"LockReleaseTokenPool\""
                      },
                      "value": "LockReleaseTokenPool"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_98a4717726e0b4881e6ed4b01819dd36ad05b1c791d74f437733024dd8fcf6ad",
                        "typeString": "literal_string \"LockReleaseTokenPool\""
                      }
                    ],
                    "id": 78024,
                    "name": "keccak256",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": -8,
                    "src": "1383:9:133",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                      "typeString": "function (bytes memory) pure returns (bytes32)"
                    }
                  },
                  "id": 78026,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "1383:33:133",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                ],
                "id": 78023,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1376:6:133",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_bytes4_$",
                  "typeString": "type(bytes4)"
                },
                "typeName": {
                  "id": 78022,
                  "name": "bytes4",
                  "nodeType": "ElementaryTypeName",
                  "src": "1376:6:133",
                  "typeDescriptions": {}
                }
              },
              "id": 78027,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1376:41:133",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "visibility": "private"
          },
          {
            "id": 78031,
            "nodeType": "VariableDeclaration",
            "src": "1789:41:133",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 78029,
              "nodeType": "StructuredDocumentation",
              "src": "1422:364:133",
              "text": "@dev Whether or not the pool accepts liquidity.\n External liquidity is not required when there is one canonical token deployed to a chain,\n and CCIP is facilitating mint/burn on all the other chains, in which case the invariant\n balanceOf(pool) on home chain == sum(totalSupply(mint/burn \"wrapped\" token) on all remote chains) should always hold"
            },
            "mutability": "immutable",
            "name": "i_acceptLiquidity",
            "nameLocation": "1813:17:133",
            "scope": 78272,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 78030,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1789:4:133",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 78035,
            "nodeType": "VariableDeclaration",
            "src": "1835:81:133",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "s_liquidityProviderBalances",
            "nameLocation": "1889:27:133",
            "scope": 78272,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 78034,
              "keyName": "provider",
              "keyNameLocation": "1851:8:133",
              "keyType": {
                "id": 78032,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1843:7:133",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1835:44:133",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "balance",
              "valueNameLocation": "1871:7:133",
              "valueType": {
                "id": 78033,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1863:7:133",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 78058,
            "nodeType": "FunctionDefinition",
            "src": "1921:198:133",
            "nodes": [],
            "body": {
              "id": 78057,
              "nodeType": "Block",
              "src": "2073:46:133",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 78055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 78053,
                      "name": "i_acceptLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78031,
                      "src": "2079:17:133",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 78054,
                      "name": "acceptLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78045,
                      "src": "2099:15:133",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2079:35:133",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 78056,
                  "nodeType": "ExpressionStatement",
                  "src": "2079:35:133"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 78048,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 78038,
                    "src": "2045:5:133",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$137559",
                      "typeString": "contract IERC20"
                    }
                  },
                  {
                    "id": 78049,
                    "name": "allowlist",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 78041,
                    "src": "2052:9:133",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  {
                    "id": 78050,
                    "name": "armProxy",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 78043,
                    "src": "2063:8:133",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 78051,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 78047,
                  "name": "TokenPool",
                  "nameLocations": [
                    "2035:9:133"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 79129,
                  "src": "2035:9:133"
                },
                "nodeType": "ModifierInvocation",
                "src": "2035:37:133"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 78046,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78038,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1945:5:133",
                  "nodeType": "VariableDeclaration",
                  "scope": 78058,
                  "src": "1938:12:133",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$137559",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 78037,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 78036,
                      "name": "IERC20",
                      "nameLocations": [
                        "1938:6:133"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 137559,
                      "src": "1938:6:133"
                    },
                    "referencedDeclaration": 137559,
                    "src": "1938:6:133",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$137559",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78041,
                  "mutability": "mutable",
                  "name": "allowlist",
                  "nameLocation": "1973:9:133",
                  "nodeType": "VariableDeclaration",
                  "scope": 78058,
                  "src": "1956:26:133",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 78039,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1956:7:133",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 78040,
                    "nodeType": "ArrayTypeName",
                    "src": "1956:9:133",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78043,
                  "mutability": "mutable",
                  "name": "armProxy",
                  "nameLocation": "1996:8:133",
                  "nodeType": "VariableDeclaration",
                  "scope": 78058,
                  "src": "1988:16:133",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 78042,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1988:7:133",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78045,
                  "mutability": "mutable",
                  "name": "acceptLiquidity",
                  "nameLocation": "2015:15:133",
                  "nodeType": "VariableDeclaration",
                  "scope": 78058,
                  "src": "2010:20:133",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 78044,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2010:4:133",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1932:102:133"
            },
            "returnParameters": {
              "id": 78052,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2073:0:133"
            },
            "scope": 78272,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 78095,
            "nodeType": "FunctionDefinition",
            "src": "2340:321:133",
            "nodes": [],
            "body": {
              "id": 78094,
              "nodeType": "Block",
              "src": "2567:94:133",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78083,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78065,
                        "src": "2597:6:133",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 78082,
                      "name": "_consumeOnRampRateLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78828,
                      "src": "2573:23:133",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 78084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2573:31:133",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78085,
                  "nodeType": "ExpressionStatement",
                  "src": "2573:31:133"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 78087,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2622:3:133",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 78088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2626:6:133",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2622:10:133",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 78089,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78065,
                        "src": "2634:6:133",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 78086,
                      "name": "Locked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78329,
                      "src": "2615:6:133",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 78090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2615:26:133",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78091,
                  "nodeType": "EmitStatement",
                  "src": "2610:31:133"
                },
                {
                  "expression": {
                    "hexValue": "",
                    "id": 78092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2654:2:133",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  "functionReturnParameters": 78081,
                  "id": 78093,
                  "nodeType": "Return",
                  "src": "2647:9:133"
                }
              ]
            },
            "baseFunctions": [
              71170
            ],
            "documentation": {
              "id": 78059,
              "nodeType": "StructuredDocumentation",
              "src": "2123:214:133",
              "text": "@notice Locks the token in the pool\n @param amount Amount to lock\n @dev The whenHealthy check is important to ensure that even if a ramp is compromised\n we're able to stop token movement via ARM."
            },
            "functionSelector": "96875445",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 78073,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 78072,
                  "name": "onlyOnRamp",
                  "nameLocations": [
                    "2490:10:133"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 78959,
                  "src": "2490:10:133"
                },
                "nodeType": "ModifierInvocation",
                "src": "2490:10:133"
              },
              {
                "arguments": [
                  {
                    "id": 78075,
                    "name": "originalSender",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 78061,
                    "src": "2516:14:133",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 78076,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 78074,
                  "name": "checkAllowList",
                  "nameLocations": [
                    "2501:14:133"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 78991,
                  "src": "2501:14:133"
                },
                "nodeType": "ModifierInvocation",
                "src": "2501:30:133"
              },
              {
                "id": 78078,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 78077,
                  "name": "whenHealthy",
                  "nameLocations": [
                    "2532:11:133"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 79128,
                  "src": "2532:11:133"
                },
                "nodeType": "ModifierInvocation",
                "src": "2532:11:133"
              }
            ],
            "name": "lockOrBurn",
            "nameLocation": "2349:10:133",
            "overrides": {
              "id": 78071,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2481:8:133"
            },
            "parameters": {
              "id": 78070,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78061,
                  "mutability": "mutable",
                  "name": "originalSender",
                  "nameLocation": "2373:14:133",
                  "nodeType": "VariableDeclaration",
                  "scope": 78095,
                  "src": "2365:22:133",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 78060,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2365:7:133",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78063,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 78095,
                  "src": "2393:14:133",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 78062,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2393:5:133",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78065,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2421:6:133",
                  "nodeType": "VariableDeclaration",
                  "scope": 78095,
                  "src": "2413:14:133",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 78064,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2413:7:133",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78067,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 78095,
                  "src": "2433:6:133",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 78066,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2433:6:133",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78069,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 78095,
                  "src": "2445:14:133",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 78068,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2445:5:133",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2359:104:133"
            },
            "returnParameters": {
              "id": 78081,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78080,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 78095,
                  "src": "2553:12:133",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 78079,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2553:5:133",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2552:14:133"
            },
            "scope": 78272,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 78133,
            "nodeType": "FunctionDefinition",
            "src": "2943:306:133",
            "nodes": [],
            "body": {
              "id": 78132,
              "nodeType": "Block",
              "src": "3110:139:133",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78115,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78102,
                        "src": "3141:6:133",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 78114,
                      "name": "_consumeOffRampRateLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78847,
                      "src": "3116:24:133",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 78116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3116:32:133",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78117,
                  "nodeType": "ExpressionStatement",
                  "src": "3116:32:133"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78121,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78100,
                        "src": "3178:8:133",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 78122,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78102,
                        "src": "3188:6:133",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 78118,
                          "name": "getToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78509,
                          "src": "3154:8:133",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$137559_$",
                            "typeString": "function () view returns (contract IERC20)"
                          }
                        },
                        "id": 78119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3154:10:133",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$137559",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 78120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3165:12:133",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 137868,
                      "src": "3154:23:133",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$137559_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$137559_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 78123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3154:41:133",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78124,
                  "nodeType": "ExpressionStatement",
                  "src": "3154:41:133"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 78126,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3215:3:133",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 78127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3219:6:133",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3215:10:133",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 78128,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78100,
                        "src": "3227:8:133",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 78129,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78102,
                        "src": "3237:6:133",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 78125,
                      "name": "Released",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78343,
                      "src": "3206:8:133",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 78130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3206:38:133",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78131,
                  "nodeType": "EmitStatement",
                  "src": "3201:43:133"
                }
              ]
            },
            "baseFunctions": [
              71184
            ],
            "documentation": {
              "id": 78096,
              "nodeType": "StructuredDocumentation",
              "src": "2665:275:133",
              "text": "@notice Release tokens from the pool to the recipient\n @param receiver Recipient address\n @param amount Amount to release\n @dev The whenHealthy check is important to ensure that even if a ramp is compromised\n we're able to stop token movement via ARM."
            },
            "functionSelector": "8627fad6",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 78110,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 78109,
                  "name": "onlyOffRamp",
                  "nameLocations": [
                    "3086:11:133"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 78973,
                  "src": "3086:11:133"
                },
                "nodeType": "ModifierInvocation",
                "src": "3086:11:133"
              },
              {
                "id": 78112,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 78111,
                  "name": "whenHealthy",
                  "nameLocations": [
                    "3098:11:133"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 79128,
                  "src": "3098:11:133"
                },
                "nodeType": "ModifierInvocation",
                "src": "3098:11:133"
              }
            ],
            "name": "releaseOrMint",
            "nameLocation": "2952:13:133",
            "overrides": {
              "id": 78108,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3077:8:133"
            },
            "parameters": {
              "id": 78107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78098,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 78133,
                  "src": "2971:12:133",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 78097,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2971:5:133",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78100,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "2997:8:133",
                  "nodeType": "VariableDeclaration",
                  "scope": 78133,
                  "src": "2989:16:133",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 78099,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2989:7:133",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78102,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3019:6:133",
                  "nodeType": "VariableDeclaration",
                  "scope": 78133,
                  "src": "3011:14:133",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 78101,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3011:7:133",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78104,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 78133,
                  "src": "3031:6:133",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 78103,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "3031:6:133",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78106,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 78133,
                  "src": "3043:12:133",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 78105,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3043:5:133",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2965:94:133"
            },
            "returnParameters": {
              "id": 78113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3110:0:133"
            },
            "scope": 78272,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 78142,
            "nodeType": "FunctionDefinition",
            "src": "3339:109:133",
            "nodes": [],
            "body": {
              "id": 78141,
              "nodeType": "Block",
              "src": "3405:43:133",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 78139,
                    "name": "LOCK_RELEASE_INTERFACE_ID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 78028,
                    "src": "3418:25:133",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 78138,
                  "id": 78140,
                  "nodeType": "Return",
                  "src": "3411:32:133"
                }
              ]
            },
            "documentation": {
              "id": 78134,
              "nodeType": "StructuredDocumentation",
              "src": "3253:83:133",
              "text": "@notice returns the lock release interface flag used for EIP165 identification."
            },
            "functionSelector": "8bfca18c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLockReleaseInterfaceId",
            "nameLocation": "3348:25:133",
            "parameters": {
              "id": 78135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3373:2:133"
            },
            "returnParameters": {
              "id": 78138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78137,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 78142,
                  "src": "3397:6:133",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 78136,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3397:6:133",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3396:8:133"
            },
            "scope": 78272,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 78160,
            "nodeType": "FunctionDefinition",
            "src": "3477:189:133",
            "nodes": [],
            "body": {
              "id": 78159,
              "nodeType": "Block",
              "src": "3568:98:133",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 78157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 78152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 78150,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78144,
                        "src": "3581:11:133",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 78151,
                        "name": "LOCK_RELEASE_INTERFACE_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78028,
                        "src": "3596:25:133",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "3581:40:133",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 78155,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78144,
                          "src": "3649:11:133",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 78153,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "3625:5:133",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_LockReleaseTokenPool_$78272_$",
                            "typeString": "type(contract super LockReleaseTokenPool)"
                          }
                        },
                        "id": 78154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3631:17:133",
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 78533,
                        "src": "3625:23:133",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) pure returns (bool)"
                        }
                      },
                      "id": 78156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3625:36:133",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3581:80:133",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 78149,
                  "id": 78158,
                  "nodeType": "Return",
                  "src": "3574:87:133"
                }
              ]
            },
            "baseFunctions": [
              78533
            ],
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "3486:17:133",
            "overrides": {
              "id": 78146,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3544:8:133"
            },
            "parameters": {
              "id": 78145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78144,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "3511:11:133",
                  "nodeType": "VariableDeclaration",
                  "scope": 78160,
                  "src": "3504:18:133",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 78143,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3504:6:133",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3503:20:133"
            },
            "returnParameters": {
              "id": 78149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78148,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 78160,
                  "src": "3562:4:133",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 78147,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3562:4:133",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3561:6:133"
            },
            "scope": 78272,
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 78173,
            "nodeType": "FunctionDefinition",
            "src": "3853:135:133",
            "nodes": [],
            "body": {
              "id": 78172,
              "nodeType": "Block",
              "src": "3933:55:133",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 78168,
                      "name": "s_liquidityProviderBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78035,
                      "src": "3946:27:133",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 78170,
                    "indexExpression": {
                      "id": 78169,
                      "name": "provider",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78163,
                      "src": "3974:8:133",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3946:37:133",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 78167,
                  "id": 78171,
                  "nodeType": "Return",
                  "src": "3939:44:133"
                }
              ]
            },
            "documentation": {
              "id": 78161,
              "nodeType": "StructuredDocumentation",
              "src": "3670:180:133",
              "text": "@notice Gets the amount of provided liquidity for a given address.\n @param provider The address for which to get the balance.\n @return The current provided liquidity."
            },
            "functionSelector": "56dd1e81",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getProvidedLiquidity",
            "nameLocation": "3862:20:133",
            "parameters": {
              "id": 78164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78163,
                  "mutability": "mutable",
                  "name": "provider",
                  "nameLocation": "3891:8:133",
                  "nodeType": "VariableDeclaration",
                  "scope": 78173,
                  "src": "3883:16:133",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 78162,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3883:7:133",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3882:18:133"
            },
            "returnParameters": {
              "id": 78167,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78166,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 78173,
                  "src": "3924:7:133",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 78165,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3924:7:133",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3923:9:133"
            },
            "scope": 78272,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 78182,
            "nodeType": "FunctionDefinition",
            "src": "4117:94:133",
            "nodes": [],
            "body": {
              "id": 78181,
              "nodeType": "Block",
              "src": "4176:35:133",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 78179,
                    "name": "i_acceptLiquidity",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 78031,
                    "src": "4189:17:133",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 78178,
                  "id": 78180,
                  "nodeType": "Return",
                  "src": "4182:24:133"
                }
              ]
            },
            "documentation": {
              "id": 78174,
              "nodeType": "StructuredDocumentation",
              "src": "3992:122:133",
              "text": "@notice Checks if the pool can accept liquidity.\n @return true if the pool can accept liquidity, false otherwise."
            },
            "functionSelector": "bb98546b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "canAcceptLiquidity",
            "nameLocation": "4126:18:133",
            "parameters": {
              "id": 78175,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4144:2:133"
            },
            "returnParameters": {
              "id": 78178,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78177,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 78182,
                  "src": "4170:4:133",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 78176,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4170:4:133",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4169:6:133"
            },
            "scope": 78272,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 78220,
            "nodeType": "FunctionDefinition",
            "src": "4350:276:133",
            "nodes": [],
            "body": {
              "id": 78219,
              "nodeType": "Block",
              "src": "4397:229:133",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 78189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4407:18:133",
                    "subExpression": {
                      "id": 78188,
                      "name": "i_acceptLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78031,
                      "src": "4408:17:133",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 78193,
                  "nodeType": "IfStatement",
                  "src": "4403:53:133",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 78190,
                        "name": "LiquidityNotAccepted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78015,
                        "src": "4434:20:133",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 78191,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4434:22:133",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 78192,
                    "nodeType": "RevertStatement",
                    "src": "4427:29:133"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 78197,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4487:3:133",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 78198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4491:6:133",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4487:10:133",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 78201,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4507:4:133",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LockReleaseTokenPool_$78272",
                              "typeString": "contract LockReleaseTokenPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LockReleaseTokenPool_$78272",
                              "typeString": "contract LockReleaseTokenPool"
                            }
                          ],
                          "id": 78200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4499:7:133",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 78199,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4499:7:133",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 78202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4499:13:133",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 78203,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78185,
                        "src": "4514:6:133",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 78194,
                        "name": "i_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78407,
                        "src": "4462:7:133",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$137559",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 78196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4470:16:133",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 137894,
                      "src": "4462:24:133",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$137559_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$137559_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 78204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4462:59:133",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78205,
                  "nodeType": "ExpressionStatement",
                  "src": "4462:59:133"
                },
                {
                  "expression": {
                    "id": 78211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 78206,
                        "name": "s_liquidityProviderBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78035,
                        "src": "4527:27:133",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 78209,
                      "indexExpression": {
                        "expression": {
                          "id": 78207,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4555:3:133",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 78208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4559:6:133",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4555:10:133",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4527:39:133",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 78210,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78185,
                      "src": "4570:6:133",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4527:49:133",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 78212,
                  "nodeType": "ExpressionStatement",
                  "src": "4527:49:133"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 78214,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4602:3:133",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 78215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4606:6:133",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4602:10:133",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 78216,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78185,
                        "src": "4614:6:133",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 78213,
                      "name": "LiquidityAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78003,
                      "src": "4587:14:133",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 78217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4587:34:133",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78218,
                  "nodeType": "EmitStatement",
                  "src": "4582:39:133"
                }
              ]
            },
            "documentation": {
              "id": 78183,
              "nodeType": "StructuredDocumentation",
              "src": "4215:132:133",
              "text": "@notice Adds liquidity to the pool. The tokens should be approved first.\n @param amount The amount of liquidity to provide."
            },
            "functionSelector": "51c6590a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addLiquidity",
            "nameLocation": "4359:12:133",
            "parameters": {
              "id": 78186,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78185,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4380:6:133",
                  "nodeType": "VariableDeclaration",
                  "scope": 78220,
                  "src": "4372:14:133",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 78184,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4372:7:133",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4371:16:133"
            },
            "returnParameters": {
              "id": 78187,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4397:0:133"
            },
            "scope": 78272,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 78271,
            "nodeType": "FunctionDefinition",
            "src": "4769:372:133",
            "nodes": [],
            "body": {
              "id": 78270,
              "nodeType": "Block",
              "src": "4819:322:133",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 78231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 78226,
                        "name": "s_liquidityProviderBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78035,
                        "src": "4829:27:133",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 78229,
                      "indexExpression": {
                        "expression": {
                          "id": 78227,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4857:3:133",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 78228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4861:6:133",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4857:10:133",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4829:39:133",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 78230,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78223,
                      "src": "4871:6:133",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4829:48:133",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 78235,
                  "nodeType": "IfStatement",
                  "src": "4825:80:133",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 78232,
                        "name": "WithdrawalTooHigh",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78013,
                        "src": "4886:17:133",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 78233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4886:19:133",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 78234,
                    "nodeType": "RevertStatement",
                    "src": "4879:26:133"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 78244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 78240,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "4941:4:133",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LockReleaseTokenPool_$78272",
                                "typeString": "contract LockReleaseTokenPool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_LockReleaseTokenPool_$78272",
                                "typeString": "contract LockReleaseTokenPool"
                              }
                            ],
                            "id": 78239,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4933:7:133",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 78238,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4933:7:133",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 78241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4933:13:133",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 78236,
                          "name": "i_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78407,
                          "src": "4915:7:133",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$137559",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 78237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4923:9:133",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 137516,
                        "src": "4915:17:133",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 78242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4915:32:133",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 78243,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78223,
                      "src": "4950:6:133",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4915:41:133",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 78248,
                  "nodeType": "IfStatement",
                  "src": "4911:77:133",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 78245,
                        "name": "InsufficientLiquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78011,
                        "src": "4965:21:133",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 78246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4965:23:133",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 78247,
                    "nodeType": "RevertStatement",
                    "src": "4958:30:133"
                  }
                },
                {
                  "expression": {
                    "id": 78254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 78249,
                        "name": "s_liquidityProviderBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78035,
                        "src": "4994:27:133",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 78252,
                      "indexExpression": {
                        "expression": {
                          "id": 78250,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5022:3:133",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 78251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5026:6:133",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5022:10:133",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4994:39:133",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 78253,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78223,
                      "src": "5037:6:133",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4994:49:133",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 78255,
                  "nodeType": "ExpressionStatement",
                  "src": "4994:49:133"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 78259,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5070:3:133",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 78260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5074:6:133",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5070:10:133",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 78261,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78223,
                        "src": "5082:6:133",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 78256,
                        "name": "i_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78407,
                        "src": "5049:7:133",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$137559",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 78258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5057:12:133",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 137868,
                      "src": "5049:20:133",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$137559_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$137559_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 78262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5049:40:133",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78263,
                  "nodeType": "ExpressionStatement",
                  "src": "5049:40:133"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 78265,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5117:3:133",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 78266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5121:6:133",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5117:10:133",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 78267,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78223,
                        "src": "5129:6:133",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 78264,
                      "name": "LiquidityRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78009,
                      "src": "5100:16:133",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 78268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5100:36:133",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78269,
                  "nodeType": "EmitStatement",
                  "src": "5095:41:133"
                }
              ]
            },
            "documentation": {
              "id": 78221,
              "nodeType": "StructuredDocumentation",
              "src": "4630:136:133",
              "text": "@notice Removed liquidity to the pool. The tokens will be sent to msg.sender.\n @param amount The amount of liquidity to remove."
            },
            "functionSelector": "9c8f9f23",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeLiquidity",
            "nameLocation": "4778:15:133",
            "parameters": {
              "id": 78224,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78223,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4802:6:133",
                  "nodeType": "VariableDeclaration",
                  "scope": 78271,
                  "src": "4794:14:133",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 78222,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4794:7:133",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4793:16:133"
            },
            "returnParameters": {
              "id": 78225,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4819:0:133"
            },
            "scope": 78272,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 77990,
              "name": "TokenPool",
              "nameLocations": [
                "776:9:133"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 79129,
              "src": "776:9:133"
            },
            "id": 77991,
            "nodeType": "InheritanceSpecifier",
            "src": "776:9:133"
          },
          {
            "baseName": {
              "id": 77992,
              "name": "ITypeAndVersion",
              "nameLocations": [
                "787:15:133"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 122903,
              "src": "787:15:133"
            },
            "id": 77993,
            "nodeType": "InheritanceSpecifier",
            "src": "787:15:133"
          }
        ],
        "canonicalName": "LockReleaseTokenPool",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 77989,
          "nodeType": "StructuredDocumentation",
          "src": "396:347:133",
          "text": "@notice Token pool used for tokens on their native chain. This uses a lock and release mechanism.\n Because of lock/unlock requiring liquidity, this pool contract also has function to add and remove\n liquidity. This allows for proper bookkeeping for both user and liquidity provider balances.\n @dev One token per LockReleaseTokenPool."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          78272,
          122903,
          79129,
          139523,
          122449,
          122271,
          122433,
          122895,
          71192
        ],
        "name": "LockReleaseTokenPool",
        "nameLocation": "752:20:133",
        "scope": 78273,
        "usedErrors": [
          71805,
          71815,
          71823,
          71829,
          71835,
          78011,
          78013,
          78015,
          78305,
          78307,
          78311,
          78313,
          78317,
          78319,
          78323
        ],
        "usedEvents": [
          71839,
          71844,
          78003,
          78009,
          78329,
          78335,
          78343,
          78351,
          78358,
          78365,
          78369,
          78376,
          78383,
          78387,
          78391,
          78395,
          122287,
          122293
        ]
      }
    ],
    "license": "BUSL-1.1"
  },
  "id": 133
}
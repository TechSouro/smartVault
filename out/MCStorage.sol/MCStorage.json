{
  "abi": [],
  "bytecode": {
    "object": "0x6080604052348015600f57600080fd5b50601680601d6000396000f3fe6080604052600080fdfea164736f6c6343000815000a",
    "sourceMap": "3843:492:1:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600080fdfea164736f6c6343000815000a",
    "sourceMap": "3843:492:1:-:0;;;;;",
    "linkReferences": {}
  },
  "methodIdentifiers": {},
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/ERC-3643/contracts/compliance/modular/MCStorage.sol\":\"MCStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@ERC3643/=lib/ERC-3643/contracts/\",\":@chainlink/contracts-ccip/=src/v0.8/\",\":@chainlink/contracts/=node_modules/@chainlink/contracts/src/v0.6/\",\":@erc721a/=lib/ERC721A/contracts/\",\":@onchain-id/solidity/contracts/=lib/solidity/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/test/=lib/prb-test/src/\",\":ERC-3643/=lib/ERC-3643/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/contracts-upgradleable/=lib/openzeppelin-contracts-upgradleable/contracts/\",\":prb-test/=lib/prb-test/src/\",\":solidity/=lib/solidity/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/ERC-3643/contracts/compliance/modular/MCStorage.sol\":{\"keccak256\":\"0xb9140664a6cf16de389254dde719e79835aaa9463edc147714b15494d842b7ab\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://4e81395cb2d4013fa57154bfc6c2030f1c218a05ecaffedae9e009fa918a11b5\",\"dweb:/ipfs/QmWoGSPrpzUwUqWUV8KTtNPqxuj8ZPHhPFwaGrEvLTHLH7\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ERC3643/=lib/ERC-3643/contracts/",
        "@chainlink/contracts-ccip/=src/v0.8/",
        "@chainlink/contracts/=node_modules/@chainlink/contracts/src/v0.6/",
        "@erc721a/=lib/ERC721A/contracts/",
        "@onchain-id/solidity/contracts/=lib/solidity/contracts/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@prb/test/=lib/prb-test/src/",
        "ERC-3643/=lib/ERC-3643/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/contracts-upgradleable/=lib/openzeppelin-contracts-upgradleable/contracts/",
        "prb-test/=lib/prb-test/src/",
        "solidity/=lib/solidity/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10000
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "lib/ERC-3643/contracts/compliance/modular/MCStorage.sol": "MCStorage"
      },
      "libraries": {}
    },
    "sources": {
      "lib/ERC-3643/contracts/compliance/modular/MCStorage.sol": {
        "keccak256": "0xb9140664a6cf16de389254dde719e79835aaa9463edc147714b15494d842b7ab",
        "urls": [
          "bzz-raw://4e81395cb2d4013fa57154bfc6c2030f1c218a05ecaffedae9e009fa918a11b5",
          "dweb:/ipfs/QmWoGSPrpzUwUqWUV8KTtNPqxuj8ZPHhPFwaGrEvLTHLH7"
        ],
        "license": "GPL-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/ERC-3643/contracts/compliance/modular/MCStorage.sol",
    "id": 141,
    "exportedSymbols": {
      "MCStorage": [
        140
      ]
    },
    "nodeType": "SourceUnit",
    "src": "3818:518:1",
    "nodes": [
      {
        "id": 122,
        "nodeType": "PragmaDirective",
        "src": "3818:23:1",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".21"
        ]
      },
      {
        "id": 140,
        "nodeType": "ContractDefinition",
        "src": "3843:492:1",
        "nodes": [
          {
            "id": 125,
            "nodeType": "VariableDeclaration",
            "src": "3916:28:1",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 123,
              "nodeType": "StructuredDocumentation",
              "src": "3868:43:1",
              "text": "token linked to the compliance contract"
            },
            "mutability": "mutable",
            "name": "_tokenBound",
            "nameLocation": "3933:11:1",
            "scope": 140,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 124,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3916:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 129,
            "nodeType": "VariableDeclaration",
            "src": "4000:27:1",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 126,
              "nodeType": "StructuredDocumentation",
              "src": "3951:44:1",
              "text": "Array of modules bound to the compliance"
            },
            "mutability": "mutable",
            "name": "_modules",
            "nameLocation": "4019:8:1",
            "scope": 140,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 127,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "4000:7:1",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 128,
              "nodeType": "ArrayTypeName",
              "src": "4000:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 134,
            "nodeType": "VariableDeclaration",
            "src": "4075:46:1",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 130,
              "nodeType": "StructuredDocumentation",
              "src": "4034:36:1",
              "text": "Mapping of module binding status"
            },
            "mutability": "mutable",
            "name": "_moduleBound",
            "nameLocation": "4109:12:1",
            "scope": 140,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 133,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 131,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "4083:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "4075:24:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 132,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "4094:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 139,
            "nodeType": "VariableDeclaration",
            "src": "4307:25:1",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 135,
              "nodeType": "StructuredDocumentation",
              "src": "4128:174:1",
              "text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain."
            },
            "mutability": "mutable",
            "name": "__gap",
            "nameLocation": "4327:5:1",
            "scope": 140,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$49_storage",
              "typeString": "uint256[49]"
            },
            "typeName": {
              "baseType": {
                "id": 136,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "4307:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 138,
              "length": {
                "hexValue": "3439",
                "id": 137,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "4315:2:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_49_by_1",
                  "typeString": "int_const 49"
                },
                "value": "49"
              },
              "nodeType": "ArrayTypeName",
              "src": "4307:11:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
                "typeString": "uint256[49]"
              }
            },
            "visibility": "private"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "MCStorage",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          140
        ],
        "name": "MCStorage",
        "nameLocation": "3852:9:1",
        "scope": 141,
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 1
}
{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "paused()": "5c975abb"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/v0.8/vendor/openzeppelin-contracts-upgradeable/v4.8.1/security/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@ERC3643/=lib/ERC-3643/contracts/\",\":@chainlink/contracts-ccip/=src/v0.8/\",\":@chainlink/contracts/=node_modules/@chainlink/contracts/src/v0.6/\",\":@erc721a/=lib/ERC721A/contracts/\",\":@onchain-id/solidity/contracts/=lib/solidity/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/test/=lib/prb-test/src/\",\":ERC-3643/=lib/ERC-3643/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/contracts-upgradleable/=lib/openzeppelin-contracts-upgradleable/contracts/\",\":prb-test/=lib/prb-test/src/\",\":solidity/=lib/solidity/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"src/v0.8/vendor/openzeppelin-contracts-upgradeable/v4.8.1/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x4ba129dca3010b6dd2b700776d089f98218468679c1e6f01ee56c9f520c5568f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8ae79afbea0b6f6c5e73bc2527fbcb09dd6dc7aff18608f6c5037fc2421c05c\",\"dweb:/ipfs/QmcvWf49HnTT23NebctCy3ptYMQt9VMcoRu6CWKJci4qpw\"]},\"src/v0.8/vendor/openzeppelin-contracts-upgradeable/v4.8.1/security/PausableUpgradeable.sol\":{\"keccak256\":\"0xccdeae36e25dbe050e6a68a68dce481e686c86ad63dee20f83b39991d22e8e82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fee4ca30caa0ddf34c05fbce21890cde2bd1e7e7ba4ff6c102a077606c4dcf33\",\"dweb:/ipfs/Qmetz1DZgZbEKmiHfPPEcccE99mDw4qtfFYPGnDJ7qHxDZ\"]},\"src/v0.8/vendor/openzeppelin-contracts-upgradeable/v4.8.1/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x90bb6dbbf9f8cfc7ae42f58db9362ecff164a4384abbe9933aaf87a2ca47e5ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b523973277d5b463f67b755af07cf0100a3d9d8d41e18f67210f314b08e2450\",\"dweb:/ipfs/Qmd32W47VK1zxvF3FqFdKaozuESMsaq25tVVTEDU98d1AY\"]},\"src/v0.8/vendor/openzeppelin-contracts-upgradeable/v4.8.1/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x3b8163a0b8c033c99e5c898fc45ab005b78def5f1524d179d0d57d0b8a8828a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f838a96b4d6bf0885ebf09c5015b72c30d96f3085262478ecb0c3061366cead4\",\"dweb:/ipfs/QmQaJpFHFZDfnaYBMsW5RGsV93X2PSTz9R1kVHqU5zpCDK\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "paused()": {
            "details": "Returns true if the contract is paused, and false otherwise."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ERC3643/=lib/ERC-3643/contracts/",
        "@chainlink/contracts-ccip/=src/v0.8/",
        "@chainlink/contracts/=node_modules/@chainlink/contracts/src/v0.6/",
        "@erc721a/=lib/ERC721A/contracts/",
        "@onchain-id/solidity/contracts/=lib/solidity/contracts/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@prb/test/=lib/prb-test/src/",
        "ERC-3643/=lib/ERC-3643/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/contracts-upgradleable/=lib/openzeppelin-contracts-upgradleable/contracts/",
        "prb-test/=lib/prb-test/src/",
        "solidity/=lib/solidity/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10000
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/v0.8/vendor/openzeppelin-contracts-upgradeable/v4.8.1/security/PausableUpgradeable.sol": "PausableUpgradeable"
      },
      "libraries": {}
    },
    "sources": {
      "src/v0.8/vendor/openzeppelin-contracts-upgradeable/v4.8.1/proxy/utils/Initializable.sol": {
        "keccak256": "0x4ba129dca3010b6dd2b700776d089f98218468679c1e6f01ee56c9f520c5568f",
        "urls": [
          "bzz-raw://d8ae79afbea0b6f6c5e73bc2527fbcb09dd6dc7aff18608f6c5037fc2421c05c",
          "dweb:/ipfs/QmcvWf49HnTT23NebctCy3ptYMQt9VMcoRu6CWKJci4qpw"
        ],
        "license": "MIT"
      },
      "src/v0.8/vendor/openzeppelin-contracts-upgradeable/v4.8.1/security/PausableUpgradeable.sol": {
        "keccak256": "0xccdeae36e25dbe050e6a68a68dce481e686c86ad63dee20f83b39991d22e8e82",
        "urls": [
          "bzz-raw://fee4ca30caa0ddf34c05fbce21890cde2bd1e7e7ba4ff6c102a077606c4dcf33",
          "dweb:/ipfs/Qmetz1DZgZbEKmiHfPPEcccE99mDw4qtfFYPGnDJ7qHxDZ"
        ],
        "license": "MIT"
      },
      "src/v0.8/vendor/openzeppelin-contracts-upgradeable/v4.8.1/utils/AddressUpgradeable.sol": {
        "keccak256": "0x90bb6dbbf9f8cfc7ae42f58db9362ecff164a4384abbe9933aaf87a2ca47e5ad",
        "urls": [
          "bzz-raw://1b523973277d5b463f67b755af07cf0100a3d9d8d41e18f67210f314b08e2450",
          "dweb:/ipfs/Qmd32W47VK1zxvF3FqFdKaozuESMsaq25tVVTEDU98d1AY"
        ],
        "license": "MIT"
      },
      "src/v0.8/vendor/openzeppelin-contracts-upgradeable/v4.8.1/utils/ContextUpgradeable.sol": {
        "keccak256": "0x3b8163a0b8c033c99e5c898fc45ab005b78def5f1524d179d0d57d0b8a8828a9",
        "urls": [
          "bzz-raw://f838a96b4d6bf0885ebf09c5015b72c30d96f3085262478ecb0c3061366cead4",
          "dweb:/ipfs/QmQaJpFHFZDfnaYBMsW5RGsV93X2PSTz9R1kVHqU5zpCDK"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/v0.8/vendor/openzeppelin-contracts-upgradeable/v4.8.1/security/PausableUpgradeable.sol",
    "id": 133239,
    "exportedSymbols": {
      "AddressUpgradeable": [
        133522
      ],
      "ContextUpgradeable": [
        133564
      ],
      "Initializable": [
        133111
      ],
      "PausableUpgradeable": [
        133238
      ]
    },
    "nodeType": "SourceUnit",
    "src": "105:2981:306",
    "nodes": [
      {
        "id": 133113,
        "nodeType": "PragmaDirective",
        "src": "105:23:306",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 133114,
        "nodeType": "ImportDirective",
        "src": "130:41:306",
        "nodes": [],
        "absolutePath": "src/v0.8/vendor/openzeppelin-contracts-upgradeable/v4.8.1/utils/ContextUpgradeable.sol",
        "file": "../utils/ContextUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 133239,
        "sourceUnit": 133565,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 133115,
        "nodeType": "ImportDirective",
        "src": "172:42:306",
        "nodes": [],
        "absolutePath": "src/v0.8/vendor/openzeppelin-contracts-upgradeable/v4.8.1/proxy/utils/Initializable.sol",
        "file": "../proxy/utils/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 133239,
        "sourceUnit": 133112,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 133238,
        "nodeType": "ContractDefinition",
        "src": "656:2430:306",
        "nodes": [
          {
            "id": 133125,
            "nodeType": "EventDefinition",
            "src": "815:30:306",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 133121,
              "nodeType": "StructuredDocumentation",
              "src": "737:73:306",
              "text": " @dev Emitted when the pause is triggered by `account`."
            },
            "eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
            "name": "Paused",
            "nameLocation": "821:6:306",
            "parameters": {
              "id": 133124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 133123,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "836:7:306",
                  "nodeType": "VariableDeclaration",
                  "scope": 133125,
                  "src": "828:15:306",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 133122,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "828:7:306",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "827:17:306"
            }
          },
          {
            "id": 133130,
            "nodeType": "EventDefinition",
            "src": "926:32:306",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 133126,
              "nodeType": "StructuredDocumentation",
              "src": "851:70:306",
              "text": " @dev Emitted when the pause is lifted by `account`."
            },
            "eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
            "name": "Unpaused",
            "nameLocation": "932:8:306",
            "parameters": {
              "id": 133129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 133128,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "949:7:306",
                  "nodeType": "VariableDeclaration",
                  "scope": 133130,
                  "src": "941:15:306",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 133127,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "941:7:306",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "940:17:306"
            }
          },
          {
            "id": 133132,
            "nodeType": "VariableDeclaration",
            "src": "964:20:306",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_paused",
            "nameLocation": "977:7:306",
            "scope": 133238,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 133131,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "964:4:306",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "id": 133142,
            "nodeType": "FunctionDefinition",
            "src": "1063:97:306",
            "nodes": [],
            "body": {
              "id": 133141,
              "nodeType": "Block",
              "src": "1116:44:306",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 133138,
                      "name": "__Pausable_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 133152,
                      "src": "1126:25:306",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 133139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1126:27:306",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 133140,
                  "nodeType": "ExpressionStatement",
                  "src": "1126:27:306"
                }
              ]
            },
            "documentation": {
              "id": 133133,
              "nodeType": "StructuredDocumentation",
              "src": "991:67:306",
              "text": " @dev Initializes the contract in unpaused state."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 133136,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 133135,
                  "name": "onlyInitializing",
                  "nameLocations": [
                    "1099:16:306"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 133056,
                  "src": "1099:16:306"
                },
                "nodeType": "ModifierInvocation",
                "src": "1099:16:306"
              }
            ],
            "name": "__Pausable_init",
            "nameLocation": "1072:15:306",
            "parameters": {
              "id": 133134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1087:2:306"
            },
            "returnParameters": {
              "id": 133137,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1116:0:306"
            },
            "scope": 133238,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 133152,
            "nodeType": "FunctionDefinition",
            "src": "1166:95:306",
            "nodes": [],
            "body": {
              "id": 133151,
              "nodeType": "Block",
              "src": "1229:32:306",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 133149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 133147,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 133132,
                      "src": "1239:7:306",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 133148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1249:5:306",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1239:15:306",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 133150,
                  "nodeType": "ExpressionStatement",
                  "src": "1239:15:306"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 133145,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 133144,
                  "name": "onlyInitializing",
                  "nameLocations": [
                    "1212:16:306"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 133056,
                  "src": "1212:16:306"
                },
                "nodeType": "ModifierInvocation",
                "src": "1212:16:306"
              }
            ],
            "name": "__Pausable_init_unchained",
            "nameLocation": "1175:25:306",
            "parameters": {
              "id": 133143,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1200:2:306"
            },
            "returnParameters": {
              "id": 133146,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1229:0:306"
            },
            "scope": 133238,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 133160,
            "nodeType": "ModifierDefinition",
            "src": "1447:72:306",
            "nodes": [],
            "body": {
              "id": 133159,
              "nodeType": "Block",
              "src": "1472:47:306",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 133155,
                      "name": "_requireNotPaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 133189,
                      "src": "1482:17:306",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 133156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1482:19:306",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 133157,
                  "nodeType": "ExpressionStatement",
                  "src": "1482:19:306"
                },
                {
                  "id": 133158,
                  "nodeType": "PlaceholderStatement",
                  "src": "1511:1:306"
                }
              ]
            },
            "documentation": {
              "id": 133153,
              "nodeType": "StructuredDocumentation",
              "src": "1267:175:306",
              "text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
            },
            "name": "whenNotPaused",
            "nameLocation": "1456:13:306",
            "parameters": {
              "id": 133154,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1469:2:306"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 133168,
            "nodeType": "ModifierDefinition",
            "src": "1697:66:306",
            "nodes": [],
            "body": {
              "id": 133167,
              "nodeType": "Block",
              "src": "1719:44:306",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 133163,
                      "name": "_requirePaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 133200,
                      "src": "1729:14:306",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 133164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1729:16:306",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 133165,
                  "nodeType": "ExpressionStatement",
                  "src": "1729:16:306"
                },
                {
                  "id": 133166,
                  "nodeType": "PlaceholderStatement",
                  "src": "1755:1:306"
                }
              ]
            },
            "documentation": {
              "id": 133161,
              "nodeType": "StructuredDocumentation",
              "src": "1525:167:306",
              "text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
            },
            "name": "whenPaused",
            "nameLocation": "1706:10:306",
            "parameters": {
              "id": 133162,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1716:2:306"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 133177,
            "nodeType": "FunctionDefinition",
            "src": "1858:84:306",
            "nodes": [],
            "body": {
              "id": 133176,
              "nodeType": "Block",
              "src": "1911:31:306",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 133174,
                    "name": "_paused",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 133132,
                    "src": "1928:7:306",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 133173,
                  "id": 133175,
                  "nodeType": "Return",
                  "src": "1921:14:306"
                }
              ]
            },
            "documentation": {
              "id": 133169,
              "nodeType": "StructuredDocumentation",
              "src": "1769:84:306",
              "text": " @dev Returns true if the contract is paused, and false otherwise."
            },
            "functionSelector": "5c975abb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "paused",
            "nameLocation": "1867:6:306",
            "parameters": {
              "id": 133170,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1873:2:306"
            },
            "returnParameters": {
              "id": 133173,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 133172,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 133177,
                  "src": "1905:4:306",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 133171,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1905:4:306",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1904:6:306"
            },
            "scope": 133238,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 133189,
            "nodeType": "FunctionDefinition",
            "src": "2010:106:306",
            "nodes": [],
            "body": {
              "id": 133188,
              "nodeType": "Block",
              "src": "2061:55:306",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 133184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2079:9:306",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 133182,
                            "name": "paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 133177,
                            "src": "2080:6:306",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 133183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2080:8:306",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061757361626c653a20706175736564",
                        "id": 133185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2090:18:306",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
                          "typeString": "literal_string \"Pausable: paused\""
                        },
                        "value": "Pausable: paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
                          "typeString": "literal_string \"Pausable: paused\""
                        }
                      ],
                      "id": 133181,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2071:7:306",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 133186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2071:38:306",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 133187,
                  "nodeType": "ExpressionStatement",
                  "src": "2071:38:306"
                }
              ]
            },
            "documentation": {
              "id": 133178,
              "nodeType": "StructuredDocumentation",
              "src": "1948:57:306",
              "text": " @dev Throws if the contract is paused."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_requireNotPaused",
            "nameLocation": "2019:17:306",
            "parameters": {
              "id": 133179,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2036:2:306"
            },
            "returnParameters": {
              "id": 133180,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2061:0:306"
            },
            "scope": 133238,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 133200,
            "nodeType": "FunctionDefinition",
            "src": "2188:106:306",
            "nodes": [],
            "body": {
              "id": 133199,
              "nodeType": "Block",
              "src": "2236:58:306",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 133194,
                          "name": "paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 133177,
                          "src": "2254:6:306",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 133195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2254:8:306",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061757361626c653a206e6f7420706175736564",
                        "id": 133196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2264:22:306",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
                          "typeString": "literal_string \"Pausable: not paused\""
                        },
                        "value": "Pausable: not paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
                          "typeString": "literal_string \"Pausable: not paused\""
                        }
                      ],
                      "id": 133193,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2246:7:306",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 133197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2246:41:306",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 133198,
                  "nodeType": "ExpressionStatement",
                  "src": "2246:41:306"
                }
              ]
            },
            "documentation": {
              "id": 133190,
              "nodeType": "StructuredDocumentation",
              "src": "2122:61:306",
              "text": " @dev Throws if the contract is not paused."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_requirePaused",
            "nameLocation": "2197:14:306",
            "parameters": {
              "id": 133191,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2211:2:306"
            },
            "returnParameters": {
              "id": 133192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2236:0:306"
            },
            "scope": 133238,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 133216,
            "nodeType": "FunctionDefinition",
            "src": "2429:115:306",
            "nodes": [],
            "body": {
              "id": 133215,
              "nodeType": "Block",
              "src": "2478:66:306",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 133208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 133206,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 133132,
                      "src": "2488:7:306",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 133207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2498:4:306",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2488:14:306",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 133209,
                  "nodeType": "ExpressionStatement",
                  "src": "2488:14:306"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 133211,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 133549,
                          "src": "2524:10:306",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 133212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2524:12:306",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 133210,
                      "name": "Paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 133125,
                      "src": "2517:6:306",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 133213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2517:20:306",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 133214,
                  "nodeType": "EmitStatement",
                  "src": "2512:25:306"
                }
              ]
            },
            "documentation": {
              "id": 133201,
              "nodeType": "StructuredDocumentation",
              "src": "2300:124:306",
              "text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 133204,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 133203,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "2464:13:306"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 133160,
                  "src": "2464:13:306"
                },
                "nodeType": "ModifierInvocation",
                "src": "2464:13:306"
              }
            ],
            "name": "_pause",
            "nameLocation": "2438:6:306",
            "parameters": {
              "id": 133202,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2444:2:306"
            },
            "returnParameters": {
              "id": 133205,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2478:0:306"
            },
            "scope": 133238,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 133232,
            "nodeType": "FunctionDefinition",
            "src": "2676:117:306",
            "nodes": [],
            "body": {
              "id": 133231,
              "nodeType": "Block",
              "src": "2724:69:306",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 133224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 133222,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 133132,
                      "src": "2734:7:306",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 133223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2744:5:306",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2734:15:306",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 133225,
                  "nodeType": "ExpressionStatement",
                  "src": "2734:15:306"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 133227,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 133549,
                          "src": "2773:10:306",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 133228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2773:12:306",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 133226,
                      "name": "Unpaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 133130,
                      "src": "2764:8:306",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 133229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2764:22:306",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 133230,
                  "nodeType": "EmitStatement",
                  "src": "2759:27:306"
                }
              ]
            },
            "documentation": {
              "id": 133217,
              "nodeType": "StructuredDocumentation",
              "src": "2550:121:306",
              "text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 133220,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 133219,
                  "name": "whenPaused",
                  "nameLocations": [
                    "2713:10:306"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 133168,
                  "src": "2713:10:306"
                },
                "nodeType": "ModifierInvocation",
                "src": "2713:10:306"
              }
            ],
            "name": "_unpause",
            "nameLocation": "2685:8:306",
            "parameters": {
              "id": 133218,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2693:2:306"
            },
            "returnParameters": {
              "id": 133221,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2724:0:306"
            },
            "scope": 133238,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 133237,
            "nodeType": "VariableDeclaration",
            "src": "3058:25:306",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 133233,
              "nodeType": "StructuredDocumentation",
              "src": "2799:254:306",
              "text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
            },
            "mutability": "mutable",
            "name": "__gap",
            "nameLocation": "3078:5:306",
            "scope": 133238,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$49_storage",
              "typeString": "uint256[49]"
            },
            "typeName": {
              "baseType": {
                "id": 133234,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3058:7:306",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 133236,
              "length": {
                "hexValue": "3439",
                "id": 133235,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "3066:2:306",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_49_by_1",
                  "typeString": "int_const 49"
                },
                "value": "49"
              },
              "nodeType": "ArrayTypeName",
              "src": "3058:11:306",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
                "typeString": "uint256[49]"
              }
            },
            "visibility": "private"
          }
        ],
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 133117,
              "name": "Initializable",
              "nameLocations": [
                "697:13:306"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 133111,
              "src": "697:13:306"
            },
            "id": 133118,
            "nodeType": "InheritanceSpecifier",
            "src": "697:13:306"
          },
          {
            "baseName": {
              "id": 133119,
              "name": "ContextUpgradeable",
              "nameLocations": [
                "712:18:306"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 133564,
              "src": "712:18:306"
            },
            "id": 133120,
            "nodeType": "InheritanceSpecifier",
            "src": "712:18:306"
          }
        ],
        "canonicalName": "PausableUpgradeable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 133116,
          "nodeType": "StructuredDocumentation",
          "src": "216:439:306",
          "text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          133238,
          133564,
          133111
        ],
        "name": "PausableUpgradeable",
        "nameLocation": "674:19:306",
        "scope": 133239,
        "usedErrors": [],
        "usedEvents": [
          132957,
          133125,
          133130
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 306
}
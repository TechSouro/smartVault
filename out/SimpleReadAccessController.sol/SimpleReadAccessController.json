{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "AddedAccess",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "CheckAccessDisabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "CheckAccessEnabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferRequested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "RemovedAccess",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "addAccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "checkEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disableAccessCheck",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enableAccessCheck",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_calldata",
          "type": "bytes"
        }
      ],
      "name": "hasAccess",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "removeAccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5033806000816100675760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f000000000000000060448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b038481169190911790915581161561009757610097816100b2565b50506001805460ff60a01b1916600160a01b1790555061015b565b336001600160a01b0382160361010a5760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000604482015260640161005e565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b6108628061016a6000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c80638823da6c11610076578063a118f2491161005b578063a118f24914610125578063dc7f012414610138578063f2fde38b1461015d57600080fd5b80638823da6c146100ea5780638da5cb5b146100fd57600080fd5b80630a756983146100a85780636b14daf8146100b257806379ba5097146100da5780638038e4a1146100e2575b600080fd5b6100b0610170565b005b6100c56100c036600461075a565b6101ef565b60405190151581526020015b60405180910390f35b6100b0610222565b6100b0610324565b6100b06100f836600461083a565b6103b8565b60005460405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100d1565b6100b061013336600461083a565b610472565b6001546100c59074010000000000000000000000000000000000000000900460ff1681565b6100b061016b36600461083a565b610526565b610178610537565b60015474010000000000000000000000000000000000000000900460ff16156101ed57600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1690556040517f3be8a977a014527b50ae38adda80b56911c267328965c98ddc385d248f53963890600090a15b565b60006101fb83836105b8565b8061021b575073ffffffffffffffffffffffffffffffffffffffff831632145b9392505050565b60015473ffffffffffffffffffffffffffffffffffffffff1633146102a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4d7573742062652070726f706f736564206f776e65720000000000000000000060448201526064015b60405180910390fd5b60008054337fffffffffffffffffffffffff00000000000000000000000000000000000000008083168217845560018054909116905560405173ffffffffffffffffffffffffffffffffffffffff90921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b61032c610537565b60015474010000000000000000000000000000000000000000900460ff166101ed57600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000001790556040517faebf329500988c6488a0074e5a0a9ff304561fc5c6fc877aeb1d59c8282c348090600090a1565b6103c0610537565b73ffffffffffffffffffffffffffffffffffffffff811660009081526002602052604090205460ff161561046f5773ffffffffffffffffffffffffffffffffffffffff811660008181526002602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905590519182527f3d68a6fce901d20453d1a7aa06bf3950302a735948037deb182a8db66df2a0d191015b60405180910390a15b50565b61047a610537565b73ffffffffffffffffffffffffffffffffffffffff811660009081526002602052604090205460ff1661046f5773ffffffffffffffffffffffffffffffffffffffff811660008181526002602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905590519182527f87286ad1f399c8e82bf0c4ef4fcdc570ea2e1e92176e5c848b6413545b885db49101610466565b61052e610537565b61046f8161060d565b60005473ffffffffffffffffffffffffffffffffffffffff1633146101ed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000604482015260640161029f565b73ffffffffffffffffffffffffffffffffffffffff821660009081526002602052604081205460ff168061021b57505060015474010000000000000000000000000000000000000000900460ff161592915050565b3373ffffffffffffffffffffffffffffffffffffffff82160361068c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000604482015260640161029f565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b803573ffffffffffffffffffffffffffffffffffffffff8116811461072657600080fd5b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000806040838503121561076d57600080fd5b61077683610702565b9150602083013567ffffffffffffffff8082111561079357600080fd5b818501915085601f8301126107a757600080fd5b8135818111156107b9576107b961072b565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156107ff576107ff61072b565b8160405282815288602084870101111561081857600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60006020828403121561084c57600080fd5b61021b8261070256fea164736f6c6343000815000a",
    "sourceMap": "629:345:251:-:0;;;;;;;;;;;;-1:-1:-1;722:10:252;;345:1:248;722:10:252;529:59:249;;;;-1:-1:-1;;;529:59:249;;216:2:351;529:59:249;;;198:21:351;255:2;235:18;;;228:30;294:26;274:18;;;267:54;338:18;;529:59:249;;;;;;;;;595:7;:18;;-1:-1:-1;;;;;;595:18:249;-1:-1:-1;;;;;595:18:249;;;;;;;;;;623:26;;;619:79;;659:32;678:12;659:18;:32::i;:::-;-1:-1:-1;;755:4:252::1;740:19:::0;;-1:-1:-1;;;;740:19:252::1;-1:-1:-1::0;;;740:19:252::1;::::0;;-1:-1:-1;629:345:251;;1482:188:249;1550:10;-1:-1:-1;;;;;1544:16:249;;;1536:52;;;;-1:-1:-1;;;1536:52:249;;569:2:351;1536:52:249;;;551:21:351;608:2;588:18;;;581:30;647:25;627:18;;;620:53;690:18;;1536:52:249;367:347:351;1536:52:249;1595:14;:19;;-1:-1:-1;;;;;;1595:19:249;-1:-1:-1;;;;;1595:19:249;;;;;;;;;-1:-1:-1;1653:7:249;;1626:39;;1595:19;;1653:7;;1626:39;;-1:-1:-1;1626:39:249;1482:188;:::o;367:347:351:-;629:345:251;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100a35760003560e01c80638823da6c11610076578063a118f2491161005b578063a118f24914610125578063dc7f012414610138578063f2fde38b1461015d57600080fd5b80638823da6c146100ea5780638da5cb5b146100fd57600080fd5b80630a756983146100a85780636b14daf8146100b257806379ba5097146100da5780638038e4a1146100e2575b600080fd5b6100b0610170565b005b6100c56100c036600461075a565b6101ef565b60405190151581526020015b60405180910390f35b6100b0610222565b6100b0610324565b6100b06100f836600461083a565b6103b8565b60005460405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100d1565b6100b061013336600461083a565b610472565b6001546100c59074010000000000000000000000000000000000000000900460ff1681565b6100b061016b36600461083a565b610526565b610178610537565b60015474010000000000000000000000000000000000000000900460ff16156101ed57600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1690556040517f3be8a977a014527b50ae38adda80b56911c267328965c98ddc385d248f53963890600090a15b565b60006101fb83836105b8565b8061021b575073ffffffffffffffffffffffffffffffffffffffff831632145b9392505050565b60015473ffffffffffffffffffffffffffffffffffffffff1633146102a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4d7573742062652070726f706f736564206f776e65720000000000000000000060448201526064015b60405180910390fd5b60008054337fffffffffffffffffffffffff00000000000000000000000000000000000000008083168217845560018054909116905560405173ffffffffffffffffffffffffffffffffffffffff90921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b61032c610537565b60015474010000000000000000000000000000000000000000900460ff166101ed57600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000001790556040517faebf329500988c6488a0074e5a0a9ff304561fc5c6fc877aeb1d59c8282c348090600090a1565b6103c0610537565b73ffffffffffffffffffffffffffffffffffffffff811660009081526002602052604090205460ff161561046f5773ffffffffffffffffffffffffffffffffffffffff811660008181526002602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905590519182527f3d68a6fce901d20453d1a7aa06bf3950302a735948037deb182a8db66df2a0d191015b60405180910390a15b50565b61047a610537565b73ffffffffffffffffffffffffffffffffffffffff811660009081526002602052604090205460ff1661046f5773ffffffffffffffffffffffffffffffffffffffff811660008181526002602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905590519182527f87286ad1f399c8e82bf0c4ef4fcdc570ea2e1e92176e5c848b6413545b885db49101610466565b61052e610537565b61046f8161060d565b60005473ffffffffffffffffffffffffffffffffffffffff1633146101ed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000604482015260640161029f565b73ffffffffffffffffffffffffffffffffffffffff821660009081526002602052604081205460ff168061021b57505060015474010000000000000000000000000000000000000000900460ff161592915050565b3373ffffffffffffffffffffffffffffffffffffffff82160361068c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000604482015260640161029f565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b803573ffffffffffffffffffffffffffffffffffffffff8116811461072657600080fd5b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000806040838503121561076d57600080fd5b61077683610702565b9150602083013567ffffffffffffffff8082111561079357600080fd5b818501915085601f8301126107a757600080fd5b8135818111156107b9576107b961072b565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156107ff576107ff61072b565b8160405282815288602084870101111561081857600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60006020828403121561084c57600080fd5b61021b8261070256fea164736f6c6343000815000a",
    "sourceMap": "629:345:251:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1809:147:252;;;:::i;:::-;;797:175:251;;;;;;:::i;:::-;;:::i;:::-;;;1628:14:351;;1621:22;1603:41;;1591:2;1576:18;797:175:251;;;;;;;;1001:265:249;;;:::i;1601:145:252:-;;;:::i;1377:163::-;;;;;;:::i;:::-;;:::i;1317:81:249:-;1364:7;1386;1317:81;;1386:7;;;;1992:74:351;;1980:2;1965:18;1317:81:249;1846:226:351;1110:158:252;;;;;;:::i;:::-;;:::i;482:24::-;;;;;;;;;;;;811:98:249;;;;;;:::i;:::-;;:::i;1809:147:252:-;1941:20:249;:18;:20::i;:::-;1868:12:252::1;::::0;;;::::1;;;1864:88;;;1890:12;:20:::0;;;::::1;::::0;;1924:21:::1;::::0;::::1;::::0;1905:5:::1;::::0;1924:21:::1;1864:88;1809:147::o:0;797:175:251:-;893:4;912:33;928:5;935:9;912:15;:33::i;:::-;:55;;;-1:-1:-1;949:18:251;;;958:9;949:18;912:55;905:62;797:175;-1:-1:-1;;;797:175:251:o;1001:265:249:-;1074:14;;;;1060:10;:28;1052:63;;;;;;;2279:2:351;1052:63:249;;;2261:21:351;2318:2;2298:18;;;2291:30;2357:24;2337:18;;;2330:52;2399:18;;1052:63:249;;;;;;;;;1122:16;1141:7;;1164:10;1154:20;;;;;;;;-1:-1:-1;1180:27:249;;;;;;;1219:42;;1141:7;;;;;1164:10;;1141:7;;1219:42;;;1046:220;1001:265::o;1601:145:252:-;1941:20:249;:18;:20::i;:::-;1660:12:252::1;::::0;;;::::1;;;1655:87;;1697:4;1682:19:::0;;;::::1;::::0;::::1;::::0;;1715:20:::1;::::0;::::1;::::0;1682:19;;1715:20:::1;1601:145::o:0;1377:163::-;1941:20:249;:18;:20::i;:::-;1443:17:252::1;::::0;::::1;;::::0;;;:10:::1;:17;::::0;;;;;::::1;;1439:97;;;1470:17;::::0;::::1;1490:5;1470:17:::0;;;:10:::1;:17;::::0;;;;;;;;:25;;;::::1;::::0;;1509:20;;1992:74:351;;;1509:20:252::1;::::0;1965:18:351;1509:20:252::1;;;;;;;;1439:97;1377:163:::0;:::o;1110:158::-;1941:20:249;:18;:20::i;:::-;1174:17:252::1;::::0;::::1;;::::0;;;:10:::1;:17;::::0;;;;;::::1;;1169:95;;1201:17;::::0;::::1;;::::0;;;:10:::1;:17;::::0;;;;;;;;:24;;;::::1;1221:4;1201:24;::::0;;1239:18;;1992:74:351;;;1239:18:252::1;::::0;1965::351;1239::252::1;1846:226:351::0;811:98:249;1941:20;:18;:20::i;:::-;882:22:::1;901:2;882:18;:22::i;1715:111::-:0;1787:7;;;;1773:10;:21;1765:56;;;;;;;2630:2:351;1765:56:249;;;2612:21:351;2669:2;2649:18;;;2642:30;2708:24;2688:18;;;2681:52;2750:18;;1765:56:249;2428:346:351;865:144:252;970:17;;;951:4;970:17;;;:10;:17;;;;;;;;;:34;;-1:-1:-1;;992:12:252;;;;;;;991:13;;865:144;-1:-1:-1;;865:144:252:o;1482:188:249:-;1550:10;1544:16;;;;1536:52;;;;;;;2981:2:351;1536:52:249;;;2963:21:351;3020:2;3000:18;;;2993:30;3059:25;3039:18;;;3032:53;3102:18;;1536:52:249;2779:347:351;1536:52:249;1595:14;:19;;;;;;;;;;;;;;-1:-1:-1;1653:7:249;;1626:39;;1595:19;;1653:7;;1626:39;;-1:-1:-1;1626:39:249;1482:188;:::o;14:196:351:-;82:20;;142:42;131:54;;121:65;;111:93;;200:1;197;190:12;111:93;14:196;;;:::o;215:184::-;267:77;264:1;257:88;364:4;361:1;354:15;388:4;385:1;378:15;404:1054;481:6;489;542:2;530:9;521:7;517:23;513:32;510:52;;;558:1;555;548:12;510:52;581:29;600:9;581:29;:::i;:::-;571:39;;661:2;650:9;646:18;633:32;684:18;725:2;717:6;714:14;711:34;;;741:1;738;731:12;711:34;779:6;768:9;764:22;754:32;;824:7;817:4;813:2;809:13;805:27;795:55;;846:1;843;836:12;795:55;882:2;869:16;904:2;900;897:10;894:36;;;910:18;;:::i;:::-;1044:2;1038:9;1106:4;1098:13;;949:66;1094:22;;;1118:2;1090:31;1086:40;1074:53;;;1142:18;;;1162:22;;;1139:46;1136:72;;;1188:18;;:::i;:::-;1228:10;1224:2;1217:22;1263:2;1255:6;1248:18;1303:7;1298:2;1293;1289;1285:11;1281:20;1278:33;1275:53;;;1324:1;1321;1314:12;1275:53;1380:2;1375;1371;1367:11;1362:2;1354:6;1350:15;1337:46;1425:1;1420:2;1415;1407:6;1403:15;1399:24;1392:35;1446:6;1436:16;;;;;;;404:1054;;;;;:::o;1655:186::-;1714:6;1767:2;1755:9;1746:7;1742:23;1738:32;1735:52;;;1783:1;1780;1773:12;1735:52;1806:29;1825:9;1806:29;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "acceptOwnership()": "79ba5097",
    "addAccess(address)": "a118f249",
    "checkEnabled()": "dc7f0124",
    "disableAccessCheck()": "0a756983",
    "enableAccessCheck()": "8038e4a1",
    "hasAccess(address,bytes)": "6b14daf8",
    "owner()": "8da5cb5b",
    "removeAccess(address)": "8823da6c",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"AddedAccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"CheckAccessDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"CheckAccessEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"RemovedAccess\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"addAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableAccessCheck\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableAccessCheck\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_calldata\",\"type\":\"bytes\"}],\"name\":\"hasAccess\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"removeAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"SimpleReadAccessController is not suitable for access controlling writes since it grants any externally owned account access! See SimpleWriteAccessController for that.\",\"kind\":\"dev\",\"methods\":{\"addAccess(address)\":{\"params\":{\"_user\":\"The address to add\"}},\"hasAccess(address,bytes)\":{\"params\":{\"_user\":\"The address to query\"}},\"removeAccess(address)\":{\"params\":{\"_user\":\"The address to remove\"}}},\"title\":\"SimpleReadAccessController\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"addAccess(address)\":{\"notice\":\"Adds an address to the access list\"},\"disableAccessCheck()\":{\"notice\":\"makes the access check unenforced\"},\"enableAccessCheck()\":{\"notice\":\"makes the access check enforced\"},\"hasAccess(address,bytes)\":{\"notice\":\"Returns the access of an address\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"removeAccess(address)\":{\"notice\":\"Removes an address from the access list\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address, pending.\"}},\"notice\":\"Gives access to: - any externally owned account (note that off-chain actors can always read any contract storage regardless of on-chain access control measures, so this does not weaken the access control while improving usability) - accounts explicitly added to an access list\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/v0.8/shared/access/SimpleReadAccessController.sol\":\"SimpleReadAccessController\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@ERC3643/=lib/ERC-3643/contracts/\",\":@chainlink/contracts-ccip/=src/v0.8/\",\":@chainlink/contracts/=node_modules/@chainlink/contracts/src/v0.6/\",\":@erc721a/=lib/ERC721A/contracts/\",\":@onchain-id/solidity/contracts/=lib/solidity/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/test/=lib/prb-test/src/\",\":ERC-3643/=lib/ERC-3643/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/contracts-upgradleable/=lib/openzeppelin-contracts-upgradleable/contracts/\",\":prb-test/=lib/prb-test/src/\",\":solidity/=lib/solidity/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"src/v0.8/shared/access/ConfirmedOwner.sol\":{\"keccak256\":\"0x99d0b0786fe368970009c703f2249bfbc56340ddf1a28b60d2915bb58c34cd72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af0371c1af45db651823b9a3d5af761b08243c78f105166342eee28de356c8dd\",\"dweb:/ipfs/QmPnC9qNDKwJFd5unwLb9pxjrutoe8MWjm5EXHTxq2kJ4x\"]},\"src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"keccak256\":\"0x215529a99534a40e6257ef2282a91ea4a95b66debc3997866406907622efb405\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecc56a2cddb1ba6225ca0cffb07fdf6e24bcc4234cc87710c42a59c0a21ae395\",\"dweb:/ipfs/QmSpW4vkPHeRNZ14beMEk2LEtqY5JQTueNJC4sCT8JaSoc\"]},\"src/v0.8/shared/access/SimpleReadAccessController.sol\":{\"keccak256\":\"0x14cb667cc421e09791233f97332cd107f427dab63c2d5c23d290829c2168eefd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://785fdf66030b3ea92fca62f1ef0eb5c603268b6fbcc17afd89b6953b58b5b389\",\"dweb:/ipfs/QmStY3eN3sKVpe2Yj8aPLXBgeMR3iQ5pssbZFt3jny4peM\"]},\"src/v0.8/shared/access/SimpleWriteAccessController.sol\":{\"keccak256\":\"0x2ef467db622e194c3681d6495aa8f748cf3c0772129fc1dfd571ad2504ecafcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fff7d4c5ab86c670b587f528aeff45faa52caea59863a1c420419328659937a8\",\"dweb:/ipfs/QmVTWnwh66punAWUREo1R6b9iM5XvwkXCerKTWVkG96Kh1\"]},\"src/v0.8/shared/interfaces/AccessControllerInterface.sol\":{\"keccak256\":\"0x08aba11f50508cbaf9d6690decea5e8ca7b1874e2709bda60e4c5f98d52a00bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b7735e657c13fcdcaea54a2e66f7dbe32ecb09056f98b36a8727eddd045c49a\",\"dweb:/ipfs/QmYNakxBHmX4164V7WcTF1uRq3t9PQ7UJ74UmuhSYjiS2Z\"]},\"src/v0.8/shared/interfaces/IOwnable.sol\":{\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921\",\"dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AddedAccess",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "CheckAccessDisabled",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "CheckAccessEnabled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferRequested",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RemovedAccess",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addAccess"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "checkEnabled",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "disableAccessCheck"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "enableAccessCheck"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_calldata",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasAccess",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeAccess"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addAccess(address)": {
            "params": {
              "_user": "The address to add"
            }
          },
          "hasAccess(address,bytes)": {
            "params": {
              "_user": "The address to query"
            }
          },
          "removeAccess(address)": {
            "params": {
              "_user": "The address to remove"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "acceptOwnership()": {
            "notice": "Allows an ownership transfer to be completed by the recipient."
          },
          "addAccess(address)": {
            "notice": "Adds an address to the access list"
          },
          "disableAccessCheck()": {
            "notice": "makes the access check unenforced"
          },
          "enableAccessCheck()": {
            "notice": "makes the access check enforced"
          },
          "hasAccess(address,bytes)": {
            "notice": "Returns the access of an address"
          },
          "owner()": {
            "notice": "Get the current owner"
          },
          "removeAccess(address)": {
            "notice": "Removes an address from the access list"
          },
          "transferOwnership(address)": {
            "notice": "Allows an owner to begin transferring ownership to a new address, pending."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ERC3643/=lib/ERC-3643/contracts/",
        "@chainlink/contracts-ccip/=src/v0.8/",
        "@chainlink/contracts/=node_modules/@chainlink/contracts/src/v0.6/",
        "@erc721a/=lib/ERC721A/contracts/",
        "@onchain-id/solidity/contracts/=lib/solidity/contracts/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@prb/test/=lib/prb-test/src/",
        "ERC-3643/=lib/ERC-3643/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/contracts-upgradleable/=lib/openzeppelin-contracts-upgradleable/contracts/",
        "prb-test/=lib/prb-test/src/",
        "solidity/=lib/solidity/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10000
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/v0.8/shared/access/SimpleReadAccessController.sol": "SimpleReadAccessController"
      },
      "libraries": {}
    },
    "sources": {
      "src/v0.8/shared/access/ConfirmedOwner.sol": {
        "keccak256": "0x99d0b0786fe368970009c703f2249bfbc56340ddf1a28b60d2915bb58c34cd72",
        "urls": [
          "bzz-raw://af0371c1af45db651823b9a3d5af761b08243c78f105166342eee28de356c8dd",
          "dweb:/ipfs/QmPnC9qNDKwJFd5unwLb9pxjrutoe8MWjm5EXHTxq2kJ4x"
        ],
        "license": "MIT"
      },
      "src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol": {
        "keccak256": "0x215529a99534a40e6257ef2282a91ea4a95b66debc3997866406907622efb405",
        "urls": [
          "bzz-raw://ecc56a2cddb1ba6225ca0cffb07fdf6e24bcc4234cc87710c42a59c0a21ae395",
          "dweb:/ipfs/QmSpW4vkPHeRNZ14beMEk2LEtqY5JQTueNJC4sCT8JaSoc"
        ],
        "license": "MIT"
      },
      "src/v0.8/shared/access/SimpleReadAccessController.sol": {
        "keccak256": "0x14cb667cc421e09791233f97332cd107f427dab63c2d5c23d290829c2168eefd",
        "urls": [
          "bzz-raw://785fdf66030b3ea92fca62f1ef0eb5c603268b6fbcc17afd89b6953b58b5b389",
          "dweb:/ipfs/QmStY3eN3sKVpe2Yj8aPLXBgeMR3iQ5pssbZFt3jny4peM"
        ],
        "license": "MIT"
      },
      "src/v0.8/shared/access/SimpleWriteAccessController.sol": {
        "keccak256": "0x2ef467db622e194c3681d6495aa8f748cf3c0772129fc1dfd571ad2504ecafcb",
        "urls": [
          "bzz-raw://fff7d4c5ab86c670b587f528aeff45faa52caea59863a1c420419328659937a8",
          "dweb:/ipfs/QmVTWnwh66punAWUREo1R6b9iM5XvwkXCerKTWVkG96Kh1"
        ],
        "license": "MIT"
      },
      "src/v0.8/shared/interfaces/AccessControllerInterface.sol": {
        "keccak256": "0x08aba11f50508cbaf9d6690decea5e8ca7b1874e2709bda60e4c5f98d52a00bf",
        "urls": [
          "bzz-raw://9b7735e657c13fcdcaea54a2e66f7dbe32ecb09056f98b36a8727eddd045c49a",
          "dweb:/ipfs/QmYNakxBHmX4164V7WcTF1uRq3t9PQ7UJ74UmuhSYjiS2Z"
        ],
        "license": "MIT"
      },
      "src/v0.8/shared/interfaces/IOwnable.sol": {
        "keccak256": "0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767",
        "urls": [
          "bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921",
          "dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/v0.8/shared/access/SimpleReadAccessController.sol",
    "id": 122480,
    "exportedSymbols": {
      "AccessControllerInterface": [
        122855
      ],
      "ConfirmedOwner": [
        122271
      ],
      "ConfirmedOwnerWithProposal": [
        122433
      ],
      "IOwnable": [
        122895
      ],
      "SimpleReadAccessController": [
        122479
      ],
      "SimpleWriteAccessController": [
        122637
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:943:251",
    "nodes": [
      {
        "id": 122451,
        "nodeType": "PragmaDirective",
        "src": "32:23:251",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 122452,
        "nodeType": "ImportDirective",
        "src": "57:43:251",
        "nodes": [],
        "absolutePath": "src/v0.8/shared/access/SimpleWriteAccessController.sol",
        "file": "./SimpleWriteAccessController.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 122480,
        "sourceUnit": 122638,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 122479,
        "nodeType": "ContractDefinition",
        "src": "629:345:251",
        "nodes": [
          {
            "id": 122478,
            "nodeType": "FunctionDefinition",
            "src": "797:175:251",
            "nodes": [],
            "body": {
              "id": 122477,
              "nodeType": "Block",
              "src": "899:73:251",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 122475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 122468,
                          "name": "_user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 122458,
                          "src": "928:5:251",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 122469,
                          "name": "_calldata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 122460,
                          "src": "935:9:251",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 122466,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "912:5:251",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_SimpleReadAccessController_$122479_$",
                            "typeString": "type(contract super SimpleReadAccessController)"
                          }
                        },
                        "id": 122467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "918:9:251",
                        "memberName": "hasAccess",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 122537,
                        "src": "912:15:251",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                          "typeString": "function (address,bytes memory) view returns (bool)"
                        }
                      },
                      "id": 122470,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "912:33:251",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 122474,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 122471,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122458,
                        "src": "949:5:251",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 122472,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "958:2:251",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 122473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "961:6:251",
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "958:9:251",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "949:18:251",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "912:55:251",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 122465,
                  "id": 122476,
                  "nodeType": "Return",
                  "src": "905:62:251"
                }
              ]
            },
            "baseFunctions": [
              122537
            ],
            "documentation": {
              "id": 122456,
              "nodeType": "StructuredDocumentation",
              "src": "700:94:251",
              "text": " @notice Returns the access of an address\n @param _user The address to query"
            },
            "functionSelector": "6b14daf8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hasAccess",
            "nameLocation": "806:9:251",
            "overrides": {
              "id": 122462,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "875:8:251"
            },
            "parameters": {
              "id": 122461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 122458,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "824:5:251",
                  "nodeType": "VariableDeclaration",
                  "scope": 122478,
                  "src": "816:13:251",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 122457,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "816:7:251",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 122460,
                  "mutability": "mutable",
                  "name": "_calldata",
                  "nameLocation": "844:9:251",
                  "nodeType": "VariableDeclaration",
                  "scope": 122478,
                  "src": "831:22:251",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 122459,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "831:5:251",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "815:39:251"
            },
            "returnParameters": {
              "id": 122465,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 122464,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 122478,
                  "src": "893:4:251",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 122463,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "893:4:251",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "892:6:251"
            },
            "scope": 122479,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 122454,
              "name": "SimpleWriteAccessController",
              "nameLocations": [
                "668:27:251"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 122637,
              "src": "668:27:251"
            },
            "id": 122455,
            "nodeType": "InheritanceSpecifier",
            "src": "668:27:251"
          }
        ],
        "canonicalName": "SimpleReadAccessController",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 122453,
          "nodeType": "StructuredDocumentation",
          "src": "102:526:251",
          "text": " @title SimpleReadAccessController\n @notice Gives access to:\n - any externally owned account (note that off-chain actors can always read\n any contract storage regardless of on-chain access control measures, so this\n does not weaken the access control while improving usability)\n - accounts explicitly added to an access list\n @dev SimpleReadAccessController is not suitable for access controlling writes\n since it grants any externally owned account access! See\n SimpleWriteAccessController for that."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          122479,
          122637,
          122271,
          122433,
          122895,
          122855
        ],
        "name": "SimpleReadAccessController",
        "nameLocation": "638:26:251",
        "scope": 122480,
        "usedErrors": [],
        "usedEvents": [
          122287,
          122293,
          122498,
          122502,
          122504,
          122506
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 251
}
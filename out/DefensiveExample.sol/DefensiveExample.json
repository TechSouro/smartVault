{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IRouterClient",
          "name": "router",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "feeToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ErrorCase",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "chainSelector",
          "type": "uint64"
        }
      ],
      "name": "InvalidChain",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidConfig",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "router",
          "type": "address"
        }
      ],
      "name": "InvalidRouter",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "messageId",
          "type": "bytes32"
        }
      ],
      "name": "MessageNotFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlySelf",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "messageId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "reason",
          "type": "bytes"
        }
      ],
      "name": "MessageFailed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "messageId",
          "type": "bytes32"
        }
      ],
      "name": "MessageReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "messageId",
          "type": "bytes32"
        }
      ],
      "name": "MessageRecovered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "messageId",
          "type": "bytes32"
        }
      ],
      "name": "MessageSent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "messageId",
          "type": "bytes32"
        }
      ],
      "name": "MessageSucceeded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferRequested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "messageId",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "sourceChainSelector",
              "type": "uint64"
            },
            {
              "internalType": "bytes",
              "name": "sender",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Client.EVMTokenAmount[]",
              "name": "destTokenAmounts",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Client.Any2EVMMessage",
          "name": "message",
          "type": "tuple"
        }
      ],
      "name": "ccipReceive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "chainSelector",
          "type": "uint64"
        }
      ],
      "name": "disableChain",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "chainSelector",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "extraArgs",
          "type": "bytes"
        }
      ],
      "name": "enableChain",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRouter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "messageId",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "sourceChainSelector",
              "type": "uint64"
            },
            {
              "internalType": "bytes",
              "name": "sender",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Client.EVMTokenAmount[]",
              "name": "destTokenAmounts",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Client.Any2EVMMessage",
          "name": "message",
          "type": "tuple"
        }
      ],
      "name": "processMessage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "messageId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "tokenReceiver",
          "type": "address"
        }
      ],
      "name": "retryFailedMessage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "destChainSelector",
          "type": "uint64"
        }
      ],
      "name": "s_chains",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "extraArgsBytes",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_feeToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "messageId",
          "type": "bytes32"
        }
      ],
      "name": "s_messageContents",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "messageId",
          "type": "bytes32"
        },
        {
          "internalType": "uint64",
          "name": "sourceChainSelector",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "sender",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "destChainSelector",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "receiver",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct Client.EVMTokenAmount[]",
          "name": "tokenAmounts",
          "type": "tuple[]"
        }
      ],
      "name": "sendDataAndTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "destChainSelector",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "receiver",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "sendDataPayFeeToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "destChainSelector",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "receiver",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "sendDataPayNative",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "destChainSelector",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "receiver",
          "type": "bytes"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct Client.EVMTokenAmount[]",
          "name": "tokenAmounts",
          "type": "tuple[]"
        }
      ],
      "name": "sendTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "simRevert",
          "type": "bool"
        }
      ],
      "name": "setSimRevert",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a06040526008805460ff191690553480156200001b57600080fd5b50604051620031d3380380620031d38339810160408190526200003e9162000264565b818133806000846001600160a01b03811662000075576040516335fdcccd60e21b8152600060048201526024015b60405180910390fd5b6001600160a01b039081166080528216620000d35760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f000000000000000060448201526064016200006c565b600080546001600160a01b0319166001600160a01b038481169190911790915581161562000106576200010681620001a0565b5050600280546001600160a01b0319166001600160a01b0384811691821790925560405163095ea7b360e01b815291851660048301526000196024830152915063095ea7b3906044016020604051808303816000875af11580156200016f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001959190620002a3565b5050505050620002ce565b336001600160a01b03821603620001fa5760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016200006c565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b6001600160a01b03811681146200026157600080fd5b50565b600080604083850312156200027857600080fd5b825162000285816200024b565b602084015190925062000298816200024b565b809150509250929050565b600060208284031215620002b657600080fd5b81518015158114620002c757600080fd5b9392505050565b608051612ebf6200031460003960008181610266015281816108a201528181610bfa01528181610edf01528181611126015281816114d3015261150f0152612ebf6000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c806379ba5097116100b2578063c0cb2d0811610081578063d0d1fc3d11610066578063d0d1fc3d146102b0578063f2fde38b146102d3578063ff2deec3146102e657600080fd5b8063c0cb2d081461028a578063cf6730f81461029d57600080fd5b806379ba50971461020a57806385572ffb146102125780638da5cb5b14610225578063b0f479a11461026457600080fd5b80635d8e7f18116101095780635dc5ebdb116100ee5780635dc5ebdb146101c4578063686fab79146101e45780637383c8fb146101f757600080fd5b80635d8e7f181461019e5780635dc02a2c146101b157600080fd5b806301ffc9a71461013b578063369f7f661461016357806341eade461461017857806352f813c31461018b575b600080fd5b61014e610149366004611fca565b610306565b60405190151581526020015b60405180910390f35b61017661017136600461202e565b61039f565b005b610176610186366004612074565b6106a1565b61017661019936600461209f565b6106ce565b6101766101ac3660046121b5565b610707565b6101766101bf36600461222b565b610982565b6101d76101d2366004612074565b6109b2565b60405161015a91906122cb565b6101766101f236600461238b565b610a4c565b6101766102053660046123f7565b610d31565b610176611011565b610176610220366004612492565b61110e565b60005473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161015a565b7f000000000000000000000000000000000000000000000000000000000000000061023f565b6101766102983660046121b5565b611330565b6101766102ab366004612492565b61160b565b6102c36102be3660046124cd565b6117c1565b60405161015a94939291906124e6565b6101766102e1366004612521565b611905565b60025461023f9073ffffffffffffffffffffffffffffffffffffffff1681565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f85572ffb00000000000000000000000000000000000000000000000000000000148061039957507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b6103a7611916565b60016103b4600584611999565b146103f3576040517fb6e78260000000000000000000000000000000000000000000000000000000008152600481018390526024015b60405180910390fd5b6104038260005b600591906119ac565b506000828152600460209081526040808320815160a08101835281548152600182015467ffffffffffffffff1693810193909352600281018054919284019161044b9061253e565b80601f01602080910402602001604051908101604052809291908181526020018280546104779061253e565b80156104c45780601f10610499576101008083540402835291602001916104c4565b820191906000526020600020905b8154815290600101906020018083116104a757829003601f168201915b505050505081526020016003820180546104dd9061253e565b80601f01602080910402602001604051908101604052809291908181526020018280546105099061253e565b80156105565780601f1061052b57610100808354040283529160200191610556565b820191906000526020600020905b81548152906001019060200180831161053957829003601f168201915b5050505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156105d95760008481526020908190206040805180820190915260028502909101805473ffffffffffffffffffffffffffffffffffffffff168252600190810154828401529083529092019101610584565b5050505081525050905060005b81608001515181101561067057610660838360800151838151811061060d5761060d612591565b6020026020010151602001518460800151848151811061062f5761062f612591565b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff166119c19092919063ffffffff16565b610669816125ef565b90506105e6565b5060405183907fef3bf8c64bc480286c4f3503b870ceb23e648d2d902e31fb7bb46680da6de8ad90600090a2505050565b6106a9611916565b67ffffffffffffffff811660009081526003602052604081206106cb91611f7c565b50565b6106d6611916565b600880547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b67ffffffffffffffff83166000908152600360205260409020805484919061072e9061253e565b9050600003610775576040517fd79f2ea400000000000000000000000000000000000000000000000000000000815267ffffffffffffffff821660048201526024016103ea565b60408051600080825260208201909252816107b2565b604080518082019091526000808252602082015281526020019060019003908161078b5790505b506040805160a081018252868152602080820187905281830184905260025473ffffffffffffffffffffffffffffffffffffffff16606083015267ffffffffffffffff891660009081526003909152918220805493945091929091608083019161081b9061253e565b80601f01602080910402602001604051908101604052809291908181526020018280546108479061253e565b80156108945780601f1061086957610100808354040283529160200191610894565b820191906000526020600020905b81548152906001019060200180831161087757829003601f168201915b5050505050815250905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166396f4e9f988846040518363ffffffff1660e01b81526004016108fb929190612627565b6020604051808303816000875af115801561091a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093e9190612739565b90507f54791b38f3859327992a1ca0590ad3c0f08feba98d1a4f56ab0dca74d203392a8160405161097191815260200190565b60405180910390a150505050505050565b61098a611916565b67ffffffffffffffff821660009081526003602052604090206109ad82826127a0565b505050565b600360205260009081526040902080546109cb9061253e565b80601f01602080910402602001604051908101604052809291908181526020018280546109f79061253e565b8015610a445780601f10610a1957610100808354040283529160200191610a44565b820191906000526020600020905b815481529060010190602001808311610a2757829003601f168201915b505050505081565b67ffffffffffffffff831660009081526003602052604090208054849190610a739061253e565b9050600003610aba576040517fd79f2ea400000000000000000000000000000000000000000000000000000000815267ffffffffffffffff821660048201526024016103ea565b60005b8251811015610cc957828181518110610ad857610ad8612591565b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330868581518110610b1357610b13612591565b60209081029190910181015101516040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815273ffffffffffffffffffffffffffffffffffffffff938416600482015292909116602483015260448201526064016020604051808303816000875af1158015610b9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bbe919061289c565b50828181518110610bd157610bd1612591565b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff1663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000858481518110610c2b57610c2b612591565b6020026020010151602001516040518363ffffffff1660e01b8152600401610c7592919073ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b6020604051808303816000875af1158015610c94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb8919061289c565b50610cc2816125ef565b9050610abd565b506040805160a0810182528481526060602080830182905282840186905260025473ffffffffffffffffffffffffffffffffffffffff168383015267ffffffffffffffff88166000908152600390915292832080549193929160808301919061081b9061253e565b67ffffffffffffffff841660009081526003602052604090208054859190610d589061253e565b9050600003610d9f576040517fd79f2ea400000000000000000000000000000000000000000000000000000000815267ffffffffffffffff821660048201526024016103ea565b60005b8251811015610fae57828181518110610dbd57610dbd612591565b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330868581518110610df857610df8612591565b60209081029190910181015101516040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815273ffffffffffffffffffffffffffffffffffffffff938416600482015292909116602483015260448201526064016020604051808303816000875af1158015610e7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea3919061289c565b50828181518110610eb657610eb6612591565b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff1663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000858481518110610f1057610f10612591565b6020026020010151602001516040518363ffffffff1660e01b8152600401610f5a92919073ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b6020604051808303816000875af1158015610f79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9d919061289c565b50610fa7816125ef565b9050610da2565b506040805160a081018252858152602080820186905281830185905260025473ffffffffffffffffffffffffffffffffffffffff16606083015267ffffffffffffffff881660009081526003909152918220805460808301919061081b9061253e565b60015473ffffffffffffffffffffffffffffffffffffffff163314611092576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4d7573742062652070726f706f736564206f776e65720000000000000000000060448201526064016103ea565b60008054337fffffffffffffffffffffffff00000000000000000000000000000000000000008083168217845560018054909116905560405173ffffffffffffffffffffffffffffffffffffffff90921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461117f576040517fd7f733340000000000000000000000000000000000000000000000000000000081523360048201526024016103ea565b61118f6040820160208301612074565b67ffffffffffffffff8116600090815260036020526040902080546111b39061253e565b90506000036111fa576040517fd79f2ea400000000000000000000000000000000000000000000000000000000815267ffffffffffffffff821660048201526024016103ea565b6040517fcf6730f8000000000000000000000000000000000000000000000000000000008152309063cf6730f8906112369085906004016129af565b600060405180830381600087803b15801561125057600080fd5b505af1925050508015611261575060015b611300573d80801561128f576040519150601f19603f3d011682016040523d82523d6000602084013e611294565b606091505b506112a1833560016103fa565b508235600090815260046020526040902083906112be8282612d96565b50506040518335907f55bc02a9ef6f146737edeeb425738006f67f077e7138de3bf84a15bde1a5b56f906112f39084906122cb565b60405180910390a2505050565b6040518235907fdf6958669026659bac75ba986685e11a7d271284989f565f2802522663e9a70f90600090a25050565b67ffffffffffffffff8316600090815260036020526040902080548491906113579061253e565b905060000361139e576040517fd79f2ea400000000000000000000000000000000000000000000000000000000815267ffffffffffffffff821660048201526024016103ea565b60408051600080825260208201909252816113db565b60408051808201909152600080825260208201528152602001906001900390816113b45790505b50905060006040518060a00160405280868152602001858152602001838152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600360008967ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020805461144c9061253e565b80601f01602080910402602001604051908101604052809291908181526020018280546114789061253e565b80156114c55780601f1061149a576101008083540402835291602001916114c5565b820191906000526020600020905b8154815290600101906020018083116114a857829003601f168201915b5050505050815250905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166396f4e9f97f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166320487ded8a866040518363ffffffff1660e01b8152600401611568929190612627565b602060405180830381865afa158015611585573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115a99190612739565b89856040518463ffffffff1660e01b81526004016115c8929190612627565b60206040518083038185885af11580156115e6573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061093e9190612739565b333014611644576040517f14d4a4e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6116546040820160208301612074565b67ffffffffffffffff8116600090815260036020526040902080546116789061253e565b90506000036116bf576040517fd79f2ea400000000000000000000000000000000000000000000000000000000815267ffffffffffffffff821660048201526024016103ea565b60085460ff16156116fc576040517f79f79e0b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b61170c6080840184612c01565b90508110156109ad576117b161173760005473ffffffffffffffffffffffffffffffffffffffff1690565b6117446080860186612c01565b8481811061175457611754612591565b9050604002016020013585806080019061176e9190612c01565b8581811061177e5761177e612591565b6117949260206040909202019081019150612521565b73ffffffffffffffffffffffffffffffffffffffff1691906119c1565b6117ba816125ef565b90506116ff565b600460205260009081526040902080546001820154600283018054929367ffffffffffffffff909216926117f49061253e565b80601f01602080910402602001604051908101604052809291908181526020018280546118209061253e565b801561186d5780601f106118425761010080835404028352916020019161186d565b820191906000526020600020905b81548152906001019060200180831161185057829003601f168201915b5050505050908060030180546118829061253e565b80601f01602080910402602001604051908101604052809291908181526020018280546118ae9061253e565b80156118fb5780601f106118d0576101008083540402835291602001916118fb565b820191906000526020600020905b8154815290600101906020018083116118de57829003601f168201915b5050505050905084565b61190d611916565b6106cb81611a4e565b60005473ffffffffffffffffffffffffffffffffffffffff163314611997576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e65720000000000000000000060448201526064016103ea565b565b60006119a58383611b43565b9392505050565b60006119b9848484611bcd565b949350505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790526109ad908490611bea565b3373ffffffffffffffffffffffffffffffffffffffff821603611acd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016103ea565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b600081815260028301602052604081205480151580611b675750611b678484611cf6565b6119a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f456e756d657261626c654d61703a206e6f6e6578697374656e74206b6579000060448201526064016103ea565b600082815260028401602052604081208290556119b98484611d02565b6000611c4c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611d0e9092919063ffffffff16565b8051909150156109ad5780806020019051810190611c6a919061289c565b6109ad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016103ea565b60006119a58383611d1d565b60006119a58383611d35565b60606119b98484600085611d84565b600081815260018301602052604081205415156119a5565b6000818152600183016020526040812054611d7c57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610399565b506000610399565b606082471015611e16576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016103ea565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611e3f9190612e96565b60006040518083038185875af1925050503d8060008114611e7c576040519150601f19603f3d011682016040523d82523d6000602084013e611e81565b606091505b5091509150611e9287838387611e9d565b979650505050505050565b60608315611f33578251600003611f2c5773ffffffffffffffffffffffffffffffffffffffff85163b611f2c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103ea565b50816119b9565b6119b98383815115611f485781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ea91906122cb565b508054611f889061253e565b6000825580601f10611f98575050565b601f0160209004906000526020600020908101906106cb91905b80821115611fc65760008155600101611fb2565b5090565b600060208284031215611fdc57600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146119a557600080fd5b73ffffffffffffffffffffffffffffffffffffffff811681146106cb57600080fd5b6000806040838503121561204157600080fd5b8235915060208301356120538161200c565b809150509250929050565b67ffffffffffffffff811681146106cb57600080fd5b60006020828403121561208657600080fd5b81356119a58161205e565b80151581146106cb57600080fd5b6000602082840312156120b157600080fd5b81356119a581612091565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561210e5761210e6120bc565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561213d5761213d6120bc565b604052919050565b600082601f83011261215657600080fd5b813567ffffffffffffffff811115612170576121706120bc565b6121836020601f19601f84011601612114565b81815284602083860101111561219857600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000606084860312156121ca57600080fd5b83356121d58161205e565b9250602084013567ffffffffffffffff808211156121f257600080fd5b6121fe87838801612145565b9350604086013591508082111561221457600080fd5b5061222186828701612145565b9150509250925092565b6000806040838503121561223e57600080fd5b82356122498161205e565b9150602083013567ffffffffffffffff81111561226557600080fd5b61227185828601612145565b9150509250929050565b60005b8381101561229657818101518382015260200161227e565b50506000910152565b600081518084526122b781602086016020860161227b565b601f01601f19169290920160200192915050565b6020815260006119a5602083018461229f565b600082601f8301126122ef57600080fd5b8135602067ffffffffffffffff82111561230b5761230b6120bc565b612319818360051b01612114565b82815260069290921b8401810191818101908684111561233857600080fd5b8286015b8481101561238057604081890312156123555760008081fd5b61235d6120eb565b81356123688161200c565b8152818501358582015283529183019160400161233c565b509695505050505050565b6000806000606084860312156123a057600080fd5b83356123ab8161205e565b9250602084013567ffffffffffffffff808211156123c857600080fd5b6123d487838801612145565b935060408601359150808211156123ea57600080fd5b50612221868287016122de565b6000806000806080858703121561240d57600080fd5b84356124188161205e565b9350602085013567ffffffffffffffff8082111561243557600080fd5b61244188838901612145565b9450604087013591508082111561245757600080fd5b61246388838901612145565b9350606087013591508082111561247957600080fd5b50612486878288016122de565b91505092959194509250565b6000602082840312156124a457600080fd5b813567ffffffffffffffff8111156124bb57600080fd5b820160a081850312156119a557600080fd5b6000602082840312156124df57600080fd5b5035919050565b84815267ffffffffffffffff8416602082015260806040820152600061250f608083018561229f565b8281036060840152611e92818561229f565b60006020828403121561253357600080fd5b81356119a58161200c565b600181811c9082168061255257607f821691505b60208210810361258b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612620576126206125c0565b5060010190565b6000604067ffffffffffffffff8516835260208181850152845160a08386015261265460e086018261229f565b9050818601517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08087840301606088015261268f838361229f565b88860151888203830160808a01528051808352908601945060009350908501905b808410156126ef578451805173ffffffffffffffffffffffffffffffffffffffff168352860151868301529385019360019390930192908601906126b0565b50606089015173ffffffffffffffffffffffffffffffffffffffff1660a08901526080890151888203830160c08a0152955061272b818761229f565b9a9950505050505050505050565b60006020828403121561274b57600080fd5b5051919050565b601f8211156109ad57600081815260208120601f850160051c810160208610156127795750805b601f850160051c820191505b8181101561279857828155600101612785565b505050505050565b815167ffffffffffffffff8111156127ba576127ba6120bc565b6127ce816127c8845461253e565b84612752565b602080601f83116001811461282157600084156127eb5750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555612798565b600085815260208120601f198616915b8281101561285057888601518255948401946001909101908401612831565b508582101561288c57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b6000602082840312156128ae57600080fd5b81516119a581612091565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126128ee57600080fd5b830160208101925035905067ffffffffffffffff81111561290e57600080fd5b80360382131561291d57600080fd5b9250929050565b818352818160208501375060006020828401015260006020601f19601f840116840101905092915050565b8183526000602080850194508260005b858110156129a45781356129728161200c565b73ffffffffffffffffffffffffffffffffffffffff16875281830135838801526040968701969091019060010161295f565b509495945050505050565b6020815281356020820152600060208301356129ca8161205e565b67ffffffffffffffff80821660408501526129e860408601866128b9565b925060a060608601526129ff60c086018483612924565b925050612a0f60608601866128b9565b601f1980878603016080880152612a27858385612924565b9450608088013592507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1883603018312612a6057600080fd5b60209288019283019235915083821115612a7957600080fd5b8160061b3603831315612a8b57600080fd5b8685030160a0870152611e9284828461294f565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612ad457600080fd5b83018035915067ffffffffffffffff821115612aef57600080fd5b60200191503681900382131561291d57600080fd5b67ffffffffffffffff831115612b1c57612b1c6120bc565b612b3083612b2a835461253e565b83612752565b6000601f841160018114612b825760008515612b4c5750838201355b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600387901b1c1916600186901b178355612bfa565b600083815260209020601f19861690835b82811015612bb35786850135825560209485019460019092019101612b93565b5086821015612bee577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612c3657600080fd5b83018035915067ffffffffffffffff821115612c5157600080fd5b6020019150600681901b360382131561291d57600080fd5b8135612c748161200c565b73ffffffffffffffffffffffffffffffffffffffff81167fffffffffffffffffffffffff000000000000000000000000000000000000000083541617825550602082013560018201555050565b68010000000000000000831115612cda57612cda6120bc565b805483825580841015612d615760017f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8083168314612d1b57612d1b6125c0565b8086168614612d2c57612d2c6125c0565b5060008381526020812086831b81019084841b015b80821015612d5c578282558284830155600282019150612d41565b505050505b5060008181526020812083915b8581101561279857612d808383612c69565b6040929092019160029190910190600101612d6e565b81358155600181016020830135612dac8161205e565b67ffffffffffffffff8082167fffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000845416178355612dec6040860186612a9f565b93509150612dfe838360028701612b04565b612e0b6060860186612a9f565b93509150612e1d838360038701612b04565b608085013592507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1853603018312612e5457600080fd5b918401918235915080821115612e6957600080fd5b506020820191508060061b3603821315612e8257600080fd5b612e90818360048601612cc1565b50505050565b60008251612ea881846020870161227b565b919091019291505056fea164736f6c6343000815000a",
    "sourceMap": "555:4108:106:-:0;;;1510:33;;;-1:-1:-1;;1510:33:106;;;1548:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1617:6;1625:8;291:10:250;;345:1:248;1617:6:106;-1:-1:-1;;;;;538:20:105;;534:58;;567:25;;-1:-1:-1;;;567:25:105;;589:1;567:25;;;771:51:351;744:18;;567:25:105;;;;;;;;534:58;-1:-1:-1;;;;;598:17:105;;;;;537:22:249;;529:59;;;;-1:-1:-1;;;529:59:249;;1035:2:351;529:59:249;;;1017:21:351;1074:2;1054:18;;;1047:30;1113:26;1093:18;;;1086:54;1157:18;;529:59:249;833:348:351;529:59:249;595:7;:18;;-1:-1:-1;;;;;;595:18:249;-1:-1:-1;;;;;595:18:249;;;;;;;;;;623:26;;;619:79;;659:32;678:12;659:18;:32::i;:::-;-1:-1:-1;;2941:10:104::1;:21:::0;;-1:-1:-1;;;;;;2941:21:104::1;-1:-1:-1::0;;;;;2941:21:104;;::::1;::::0;;::::1;::::0;;;2968:54:::1;::::0;-1:-1:-1;;;2968:54:104;;1378:32:351;;;2968:54:104::1;::::0;::::1;1360:51:351::0;-1:-1:-1;;1427:18:351;;;1420:34;2941:21:104;-1:-1:-1;2968:18:104::1;::::0;1333::351;;2968:54:104::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2854:173:::0;;1548:89:106;;555:4108;;1482:188:249;1550:10;-1:-1:-1;;;;;1544:16:249;;;1536:52;;;;-1:-1:-1;;;1536:52:249;;1949:2:351;1536:52:249;;;1931:21:351;1988:2;1968:18;;;1961:30;2027:25;2007:18;;;2000:53;2070:18;;1536:52:249;1747:347:351;1536:52:249;1595:14;:19;;-1:-1:-1;;;;;;1595:19:249;-1:-1:-1;;;;;1595:19:249;;;;;;;;;-1:-1:-1;1653:7:249;;1626:39;;1595:19;;1653:7;;1626:39;;-1:-1:-1;1626:39:249;1482:188;:::o;14:146:351:-;-1:-1:-1;;;;;104:31:351;;94:42;;84:70;;150:1;147;140:12;84:70;14:146;:::o;165:455::-;284:6;292;345:2;333:9;324:7;320:23;316:32;313:52;;;361:1;358;351:12;313:52;393:9;387:16;412:46;452:5;412:46;:::i;:::-;527:2;512:18;;506:25;477:5;;-1:-1:-1;540:48:351;506:25;540:48;:::i;:::-;607:7;597:17;;;165:455;;;;;:::o;1465:277::-;1532:6;1585:2;1573:9;1564:7;1560:23;1556:32;1553:52;;;1601:1;1598;1591:12;1553:52;1633:9;1627:16;1686:5;1679:13;1672:21;1665:5;1662:32;1652:60;;1708:1;1705;1698:12;1652:60;1731:5;1465:277;-1:-1:-1;;;1465:277:351:o;1747:347::-;555:4108:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101365760003560e01c806379ba5097116100b2578063c0cb2d0811610081578063d0d1fc3d11610066578063d0d1fc3d146102b0578063f2fde38b146102d3578063ff2deec3146102e657600080fd5b8063c0cb2d081461028a578063cf6730f81461029d57600080fd5b806379ba50971461020a57806385572ffb146102125780638da5cb5b14610225578063b0f479a11461026457600080fd5b80635d8e7f18116101095780635dc5ebdb116100ee5780635dc5ebdb146101c4578063686fab79146101e45780637383c8fb146101f757600080fd5b80635d8e7f181461019e5780635dc02a2c146101b157600080fd5b806301ffc9a71461013b578063369f7f661461016357806341eade461461017857806352f813c31461018b575b600080fd5b61014e610149366004611fca565b610306565b60405190151581526020015b60405180910390f35b61017661017136600461202e565b61039f565b005b610176610186366004612074565b6106a1565b61017661019936600461209f565b6106ce565b6101766101ac3660046121b5565b610707565b6101766101bf36600461222b565b610982565b6101d76101d2366004612074565b6109b2565b60405161015a91906122cb565b6101766101f236600461238b565b610a4c565b6101766102053660046123f7565b610d31565b610176611011565b610176610220366004612492565b61110e565b60005473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161015a565b7f000000000000000000000000000000000000000000000000000000000000000061023f565b6101766102983660046121b5565b611330565b6101766102ab366004612492565b61160b565b6102c36102be3660046124cd565b6117c1565b60405161015a94939291906124e6565b6101766102e1366004612521565b611905565b60025461023f9073ffffffffffffffffffffffffffffffffffffffff1681565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f85572ffb00000000000000000000000000000000000000000000000000000000148061039957507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b6103a7611916565b60016103b4600584611999565b146103f3576040517fb6e78260000000000000000000000000000000000000000000000000000000008152600481018390526024015b60405180910390fd5b6104038260005b600591906119ac565b506000828152600460209081526040808320815160a08101835281548152600182015467ffffffffffffffff1693810193909352600281018054919284019161044b9061253e565b80601f01602080910402602001604051908101604052809291908181526020018280546104779061253e565b80156104c45780601f10610499576101008083540402835291602001916104c4565b820191906000526020600020905b8154815290600101906020018083116104a757829003601f168201915b505050505081526020016003820180546104dd9061253e565b80601f01602080910402602001604051908101604052809291908181526020018280546105099061253e565b80156105565780601f1061052b57610100808354040283529160200191610556565b820191906000526020600020905b81548152906001019060200180831161053957829003601f168201915b5050505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156105d95760008481526020908190206040805180820190915260028502909101805473ffffffffffffffffffffffffffffffffffffffff168252600190810154828401529083529092019101610584565b5050505081525050905060005b81608001515181101561067057610660838360800151838151811061060d5761060d612591565b6020026020010151602001518460800151848151811061062f5761062f612591565b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff166119c19092919063ffffffff16565b610669816125ef565b90506105e6565b5060405183907fef3bf8c64bc480286c4f3503b870ceb23e648d2d902e31fb7bb46680da6de8ad90600090a2505050565b6106a9611916565b67ffffffffffffffff811660009081526003602052604081206106cb91611f7c565b50565b6106d6611916565b600880547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b67ffffffffffffffff83166000908152600360205260409020805484919061072e9061253e565b9050600003610775576040517fd79f2ea400000000000000000000000000000000000000000000000000000000815267ffffffffffffffff821660048201526024016103ea565b60408051600080825260208201909252816107b2565b604080518082019091526000808252602082015281526020019060019003908161078b5790505b506040805160a081018252868152602080820187905281830184905260025473ffffffffffffffffffffffffffffffffffffffff16606083015267ffffffffffffffff891660009081526003909152918220805493945091929091608083019161081b9061253e565b80601f01602080910402602001604051908101604052809291908181526020018280546108479061253e565b80156108945780601f1061086957610100808354040283529160200191610894565b820191906000526020600020905b81548152906001019060200180831161087757829003601f168201915b5050505050815250905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166396f4e9f988846040518363ffffffff1660e01b81526004016108fb929190612627565b6020604051808303816000875af115801561091a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093e9190612739565b90507f54791b38f3859327992a1ca0590ad3c0f08feba98d1a4f56ab0dca74d203392a8160405161097191815260200190565b60405180910390a150505050505050565b61098a611916565b67ffffffffffffffff821660009081526003602052604090206109ad82826127a0565b505050565b600360205260009081526040902080546109cb9061253e565b80601f01602080910402602001604051908101604052809291908181526020018280546109f79061253e565b8015610a445780601f10610a1957610100808354040283529160200191610a44565b820191906000526020600020905b815481529060010190602001808311610a2757829003601f168201915b505050505081565b67ffffffffffffffff831660009081526003602052604090208054849190610a739061253e565b9050600003610aba576040517fd79f2ea400000000000000000000000000000000000000000000000000000000815267ffffffffffffffff821660048201526024016103ea565b60005b8251811015610cc957828181518110610ad857610ad8612591565b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330868581518110610b1357610b13612591565b60209081029190910181015101516040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815273ffffffffffffffffffffffffffffffffffffffff938416600482015292909116602483015260448201526064016020604051808303816000875af1158015610b9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bbe919061289c565b50828181518110610bd157610bd1612591565b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff1663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000858481518110610c2b57610c2b612591565b6020026020010151602001516040518363ffffffff1660e01b8152600401610c7592919073ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b6020604051808303816000875af1158015610c94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb8919061289c565b50610cc2816125ef565b9050610abd565b506040805160a0810182528481526060602080830182905282840186905260025473ffffffffffffffffffffffffffffffffffffffff168383015267ffffffffffffffff88166000908152600390915292832080549193929160808301919061081b9061253e565b67ffffffffffffffff841660009081526003602052604090208054859190610d589061253e565b9050600003610d9f576040517fd79f2ea400000000000000000000000000000000000000000000000000000000815267ffffffffffffffff821660048201526024016103ea565b60005b8251811015610fae57828181518110610dbd57610dbd612591565b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330868581518110610df857610df8612591565b60209081029190910181015101516040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815273ffffffffffffffffffffffffffffffffffffffff938416600482015292909116602483015260448201526064016020604051808303816000875af1158015610e7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea3919061289c565b50828181518110610eb657610eb6612591565b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff1663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000858481518110610f1057610f10612591565b6020026020010151602001516040518363ffffffff1660e01b8152600401610f5a92919073ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b6020604051808303816000875af1158015610f79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9d919061289c565b50610fa7816125ef565b9050610da2565b506040805160a081018252858152602080820186905281830185905260025473ffffffffffffffffffffffffffffffffffffffff16606083015267ffffffffffffffff881660009081526003909152918220805460808301919061081b9061253e565b60015473ffffffffffffffffffffffffffffffffffffffff163314611092576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4d7573742062652070726f706f736564206f776e65720000000000000000000060448201526064016103ea565b60008054337fffffffffffffffffffffffff00000000000000000000000000000000000000008083168217845560018054909116905560405173ffffffffffffffffffffffffffffffffffffffff90921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461117f576040517fd7f733340000000000000000000000000000000000000000000000000000000081523360048201526024016103ea565b61118f6040820160208301612074565b67ffffffffffffffff8116600090815260036020526040902080546111b39061253e565b90506000036111fa576040517fd79f2ea400000000000000000000000000000000000000000000000000000000815267ffffffffffffffff821660048201526024016103ea565b6040517fcf6730f8000000000000000000000000000000000000000000000000000000008152309063cf6730f8906112369085906004016129af565b600060405180830381600087803b15801561125057600080fd5b505af1925050508015611261575060015b611300573d80801561128f576040519150601f19603f3d011682016040523d82523d6000602084013e611294565b606091505b506112a1833560016103fa565b508235600090815260046020526040902083906112be8282612d96565b50506040518335907f55bc02a9ef6f146737edeeb425738006f67f077e7138de3bf84a15bde1a5b56f906112f39084906122cb565b60405180910390a2505050565b6040518235907fdf6958669026659bac75ba986685e11a7d271284989f565f2802522663e9a70f90600090a25050565b67ffffffffffffffff8316600090815260036020526040902080548491906113579061253e565b905060000361139e576040517fd79f2ea400000000000000000000000000000000000000000000000000000000815267ffffffffffffffff821660048201526024016103ea565b60408051600080825260208201909252816113db565b60408051808201909152600080825260208201528152602001906001900390816113b45790505b50905060006040518060a00160405280868152602001858152602001838152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600360008967ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020805461144c9061253e565b80601f01602080910402602001604051908101604052809291908181526020018280546114789061253e565b80156114c55780601f1061149a576101008083540402835291602001916114c5565b820191906000526020600020905b8154815290600101906020018083116114a857829003601f168201915b5050505050815250905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166396f4e9f97f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166320487ded8a866040518363ffffffff1660e01b8152600401611568929190612627565b602060405180830381865afa158015611585573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115a99190612739565b89856040518463ffffffff1660e01b81526004016115c8929190612627565b60206040518083038185885af11580156115e6573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061093e9190612739565b333014611644576040517f14d4a4e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6116546040820160208301612074565b67ffffffffffffffff8116600090815260036020526040902080546116789061253e565b90506000036116bf576040517fd79f2ea400000000000000000000000000000000000000000000000000000000815267ffffffffffffffff821660048201526024016103ea565b60085460ff16156116fc576040517f79f79e0b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b61170c6080840184612c01565b90508110156109ad576117b161173760005473ffffffffffffffffffffffffffffffffffffffff1690565b6117446080860186612c01565b8481811061175457611754612591565b9050604002016020013585806080019061176e9190612c01565b8581811061177e5761177e612591565b6117949260206040909202019081019150612521565b73ffffffffffffffffffffffffffffffffffffffff1691906119c1565b6117ba816125ef565b90506116ff565b600460205260009081526040902080546001820154600283018054929367ffffffffffffffff909216926117f49061253e565b80601f01602080910402602001604051908101604052809291908181526020018280546118209061253e565b801561186d5780601f106118425761010080835404028352916020019161186d565b820191906000526020600020905b81548152906001019060200180831161185057829003601f168201915b5050505050908060030180546118829061253e565b80601f01602080910402602001604051908101604052809291908181526020018280546118ae9061253e565b80156118fb5780601f106118d0576101008083540402835291602001916118fb565b820191906000526020600020905b8154815290600101906020018083116118de57829003601f168201915b5050505050905084565b61190d611916565b6106cb81611a4e565b60005473ffffffffffffffffffffffffffffffffffffffff163314611997576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e65720000000000000000000060448201526064016103ea565b565b60006119a58383611b43565b9392505050565b60006119b9848484611bcd565b949350505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790526109ad908490611bea565b3373ffffffffffffffffffffffffffffffffffffffff821603611acd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016103ea565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b600081815260028301602052604081205480151580611b675750611b678484611cf6565b6119a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f456e756d657261626c654d61703a206e6f6e6578697374656e74206b6579000060448201526064016103ea565b600082815260028401602052604081208290556119b98484611d02565b6000611c4c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611d0e9092919063ffffffff16565b8051909150156109ad5780806020019051810190611c6a919061289c565b6109ad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016103ea565b60006119a58383611d1d565b60006119a58383611d35565b60606119b98484600085611d84565b600081815260018301602052604081205415156119a5565b6000818152600183016020526040812054611d7c57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610399565b506000610399565b606082471015611e16576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016103ea565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611e3f9190612e96565b60006040518083038185875af1925050503d8060008114611e7c576040519150601f19603f3d011682016040523d82523d6000602084013e611e81565b606091505b5091509150611e9287838387611e9d565b979650505050505050565b60608315611f33578251600003611f2c5773ffffffffffffffffffffffffffffffffffffffff85163b611f2c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103ea565b50816119b9565b6119b98383815115611f485781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ea91906122cb565b508054611f889061253e565b6000825580601f10611f98575050565b601f0160209004906000526020600020908101906106cb91905b80821115611fc65760008155600101611fb2565b5090565b600060208284031215611fdc57600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146119a557600080fd5b73ffffffffffffffffffffffffffffffffffffffff811681146106cb57600080fd5b6000806040838503121561204157600080fd5b8235915060208301356120538161200c565b809150509250929050565b67ffffffffffffffff811681146106cb57600080fd5b60006020828403121561208657600080fd5b81356119a58161205e565b80151581146106cb57600080fd5b6000602082840312156120b157600080fd5b81356119a581612091565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561210e5761210e6120bc565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561213d5761213d6120bc565b604052919050565b600082601f83011261215657600080fd5b813567ffffffffffffffff811115612170576121706120bc565b6121836020601f19601f84011601612114565b81815284602083860101111561219857600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000606084860312156121ca57600080fd5b83356121d58161205e565b9250602084013567ffffffffffffffff808211156121f257600080fd5b6121fe87838801612145565b9350604086013591508082111561221457600080fd5b5061222186828701612145565b9150509250925092565b6000806040838503121561223e57600080fd5b82356122498161205e565b9150602083013567ffffffffffffffff81111561226557600080fd5b61227185828601612145565b9150509250929050565b60005b8381101561229657818101518382015260200161227e565b50506000910152565b600081518084526122b781602086016020860161227b565b601f01601f19169290920160200192915050565b6020815260006119a5602083018461229f565b600082601f8301126122ef57600080fd5b8135602067ffffffffffffffff82111561230b5761230b6120bc565b612319818360051b01612114565b82815260069290921b8401810191818101908684111561233857600080fd5b8286015b8481101561238057604081890312156123555760008081fd5b61235d6120eb565b81356123688161200c565b8152818501358582015283529183019160400161233c565b509695505050505050565b6000806000606084860312156123a057600080fd5b83356123ab8161205e565b9250602084013567ffffffffffffffff808211156123c857600080fd5b6123d487838801612145565b935060408601359150808211156123ea57600080fd5b50612221868287016122de565b6000806000806080858703121561240d57600080fd5b84356124188161205e565b9350602085013567ffffffffffffffff8082111561243557600080fd5b61244188838901612145565b9450604087013591508082111561245757600080fd5b61246388838901612145565b9350606087013591508082111561247957600080fd5b50612486878288016122de565b91505092959194509250565b6000602082840312156124a457600080fd5b813567ffffffffffffffff8111156124bb57600080fd5b820160a081850312156119a557600080fd5b6000602082840312156124df57600080fd5b5035919050565b84815267ffffffffffffffff8416602082015260806040820152600061250f608083018561229f565b8281036060840152611e92818561229f565b60006020828403121561253357600080fd5b81356119a58161200c565b600181811c9082168061255257607f821691505b60208210810361258b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612620576126206125c0565b5060010190565b6000604067ffffffffffffffff8516835260208181850152845160a08386015261265460e086018261229f565b9050818601517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08087840301606088015261268f838361229f565b88860151888203830160808a01528051808352908601945060009350908501905b808410156126ef578451805173ffffffffffffffffffffffffffffffffffffffff168352860151868301529385019360019390930192908601906126b0565b50606089015173ffffffffffffffffffffffffffffffffffffffff1660a08901526080890151888203830160c08a0152955061272b818761229f565b9a9950505050505050505050565b60006020828403121561274b57600080fd5b5051919050565b601f8211156109ad57600081815260208120601f850160051c810160208610156127795750805b601f850160051c820191505b8181101561279857828155600101612785565b505050505050565b815167ffffffffffffffff8111156127ba576127ba6120bc565b6127ce816127c8845461253e565b84612752565b602080601f83116001811461282157600084156127eb5750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555612798565b600085815260208120601f198616915b8281101561285057888601518255948401946001909101908401612831565b508582101561288c57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b6000602082840312156128ae57600080fd5b81516119a581612091565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126128ee57600080fd5b830160208101925035905067ffffffffffffffff81111561290e57600080fd5b80360382131561291d57600080fd5b9250929050565b818352818160208501375060006020828401015260006020601f19601f840116840101905092915050565b8183526000602080850194508260005b858110156129a45781356129728161200c565b73ffffffffffffffffffffffffffffffffffffffff16875281830135838801526040968701969091019060010161295f565b509495945050505050565b6020815281356020820152600060208301356129ca8161205e565b67ffffffffffffffff80821660408501526129e860408601866128b9565b925060a060608601526129ff60c086018483612924565b925050612a0f60608601866128b9565b601f1980878603016080880152612a27858385612924565b9450608088013592507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1883603018312612a6057600080fd5b60209288019283019235915083821115612a7957600080fd5b8160061b3603831315612a8b57600080fd5b8685030160a0870152611e9284828461294f565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612ad457600080fd5b83018035915067ffffffffffffffff821115612aef57600080fd5b60200191503681900382131561291d57600080fd5b67ffffffffffffffff831115612b1c57612b1c6120bc565b612b3083612b2a835461253e565b83612752565b6000601f841160018114612b825760008515612b4c5750838201355b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600387901b1c1916600186901b178355612bfa565b600083815260209020601f19861690835b82811015612bb35786850135825560209485019460019092019101612b93565b5086821015612bee577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612c3657600080fd5b83018035915067ffffffffffffffff821115612c5157600080fd5b6020019150600681901b360382131561291d57600080fd5b8135612c748161200c565b73ffffffffffffffffffffffffffffffffffffffff81167fffffffffffffffffffffffff000000000000000000000000000000000000000083541617825550602082013560018201555050565b68010000000000000000831115612cda57612cda6120bc565b805483825580841015612d615760017f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8083168314612d1b57612d1b6125c0565b8086168614612d2c57612d2c6125c0565b5060008381526020812086831b81019084841b015b80821015612d5c578282558284830155600282019150612d41565b505050505b5060008181526020812083915b8581101561279857612d808383612c69565b6040929092019160029190910190600101612d6e565b81358155600181016020830135612dac8161205e565b67ffffffffffffffff8082167fffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000845416178355612dec6040860186612a9f565b93509150612dfe838360028701612b04565b612e0b6060860186612a9f565b93509150612e1d838360038701612b04565b608085013592507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1853603018312612e5457600080fd5b918401918235915080821115612e6957600080fd5b506020820191508060061b3603821315612e8257600080fd5b612e90818360048601612cc1565b50505050565b60008251612ea881846020870161227b565b919091019291505056fea164736f6c6343000815000a",
    "sourceMap": "555:4108:106:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1397:209:105;;;;;;:::i;:::-;;:::i;:::-;;;516:14:351;;509:22;491:41;;479:2;464:18;1397:209:105;;;;;;;;3613:812:106;;;;;;:::i;:::-;;:::i;:::-;;3167:104:104;;;;;;:::i;:::-;;:::i;4478:91:106:-;;;;;;:::i;:::-;;:::i;4727:784:104:-;;;;;;:::i;:::-;;:::i;3031:132::-;;;;;;:::i;:::-;;:::i;2776:73::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;6747:984::-;;;;;;:::i;:::-;;:::i;5618:991::-;;;;;;:::i;:::-;;:::i;1001:265:249:-;;;:::i;1908:720:106:-;;;;;;:::i;:::-;;:::i;1317:81:249:-;1364:7;1386;;;1317:81;;;8588:42:351;8576:55;;;8558:74;;8546:2;8531:18;1317:81:249;8412:226:351;2194:86:105;2266:8;2194:86;;3899:725:104;;;;;;:::i;:::-;;:::i;2951:456:106:-;;;;;;:::i;:::-;;:::i;1241:85::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;811:98:249:-;;;;;;:::i;:::-;;:::i;1729:24:104:-;;;;;;;;;1397:209:105;1482:4;1501:56;;;1516:41;1501:56;;:100;;-1:-1:-1;1561:40:105;;;1576:25;1561:40;1501:100;1494:107;1397:209;-1:-1:-1;;1397:209:105:o;3613:812:106:-;1941:20:249;:18;:20::i;:::-;3755:15:106::1;3712:31;:16;3733:9:::0;3712:20:::1;:31::i;:::-;:59;3708:99;;3780:27;::::0;::::1;::::0;;::::1;::::0;::::1;10212:25:351::0;;;10185:18;;3780:27:106::1;;;;;;;;3708:99;3921:60;3942:9:::0;3961:18:::1;3953:27;3921:16;::::0;:60;:20:::1;:60::i;:::-;-1:-1:-1::0;4071:36:106::1;4110:28:::0;;;:17:::1;:28;::::0;;;;;;;4071:67;;::::1;::::0;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;::::1;;::::0;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;4110:28;;4071:67;;;::::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;;::::1;::::0;;;;::::1;::::0;;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;;::::0;;;;;::::1;::::0;;;::::1;::::0;;;;;;::::1;::::0;::::1;;;;;;;;;;::::0;::::1;;;4205:9;4200:182;4224:7;:24;;;:31;4220:1;:35;4200:182;;;4270:105;4325:13;4340:7;:24;;;4365:1;4340:27;;;;;;;;:::i;:::-;;;;;;;:34;;;4277:7;:24;;;4302:1;4277:27;;;;;;;;:::i;:::-;;;;;;;:33;;;4270:54;;;;:105;;;;;:::i;:::-;4257:3;::::0;::::1;:::i;:::-;;;4200:182;;;-1:-1:-1::0;4393:27:106::1;::::0;4410:9;;4393:27:::1;::::0;;;::::1;3702:723;3613:812:::0;;:::o;3167:104:104:-;1941:20:249;:18;:20::i;:::-;3243:23:104::1;::::0;::::1;;::::0;;;:8:::1;:23;::::0;;;;3236:30:::1;::::0;::::1;:::i;:::-;3167:104:::0;:::o;4478:91:106:-;1941:20:249;:18;:20::i;:::-;4541:11:106::1;:23:::0;;;::::1;::::0;::::1;;::::0;;;::::1;::::0;;4478:91::o;4727:784:104:-;7787:23;;;;;;;:8;:23;;;;;:30;;4860:17;;7787:23;:30;;;:::i;:::-;;;7821:1;7787:35;7783:75;;7831:27;;;;;11442:18:351;11430:31;;7831:27:104;;;11412:50:351;11385:18;;7831:27:104;11268:200:351;7783:75:104;4931:30:::1;::::0;;4885:43:::1;4931:30:::0;;;::::1;::::0;::::1;::::0;;;4885:43;4931:30:::1;::::0;::::1;-1:-1:-1::0;;;;;;;;;;;;;;;;;4931:30:104::1;;;;;;;;;;;;;;;-1:-1:-1::0;5006:190:104::1;::::0;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;;;;;;;5178:10:::1;::::0;::::1;;5006:190:::0;;;;5125:27:::1;::::0;::::1;4967:36;5125:27:::0;;;:8:::1;:27:::0;;;;;;5006:190;;4885:76;;-1:-1:-1;4967:36:104;;5006:190;;;;;;::::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;4967:229:::1;;5393:17;5427:8;5413:32;;;5446:17;5465:7;5413:60;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5393:80;;5484:22;5496:9;5484:22;;;;10212:25:351::0;;10200:2;10185:18;;10066:177;5484:22:104::1;;;;;;;;4879:632;;;4727:784:::0;;;;:::o;3031:132::-;1941:20:249;:18;:20::i;:::-;3123:23:104::1;::::0;::::1;;::::0;;;:8:::1;:23;::::0;;;;:35:::1;3149:9:::0;3123:23;:35:::1;:::i;:::-;;3031:132:::0;;:::o;2776:73::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6747:984::-;7787:23;;;;;;;:8;:23;;;;;:30;;6897:17;;7787:23;:30;;;:::i;:::-;;;7821:1;7787:35;7783:75;;7831:27;;;;;11442:18:351;11430:31;;7831:27:104;;;11412:50:351;11385:18;;7831:27:104;11268:200:351;7783:75:104;6927:9:::1;6922:237;6946:12;:19;6942:1;:23;6922:237;;;6987:12;7000:1;6987:15;;;;;;;;:::i;:::-;;;;;;;:21;;;6980:42;;;7023:10;7043:4;7050:12;7063:1;7050:15;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;:22:::1;::::0;6980:93:::1;::::0;;::::1;::::0;;;;;;15945:42:351;16014:15;;;6980:93:104::1;::::0;::::1;15996:34:351::0;16066:15;;;;16046:18;;;16039:43;16098:18;;;16091:34;15908:18;;6980:93:104::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7088:12;7101:1;7088:15;;;;;;;;:::i;:::-;;;;;;;:21;;;7081:37;;;7119:8;7129:12;7142:1;7129:15;;;;;;;;:::i;:::-;;;;;;;:22;;;7081:71;;;;;;;;;;;;;;;16590:42:351::0;16578:55;;;;16560:74;;16665:2;16650:18;;16643:34;16548:2;16533:18;;16386:297;7081:71:104::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;6967:3:104::1;::::0;::::1;:::i;:::-;;;6922:237;;;-1:-1:-1::0;7226:190:104::1;::::0;;::::1;::::0;::::1;::::0;;;;;7164:17:::1;7226:190;::::0;;::::1;::::0;;;;;;;;;7398:10:::1;::::0;::::1;;7226:190:::0;;;;7345:27:::1;::::0;::::1;7187:36;7345:27:::0;;;:8:::1;:27:::0;;;;;;7226:190;;7164:17;;7187:36;7226:190;;;;;7345:27;7226:190:::1;::::0;::::1;:::i;5618:991::-:0;7787:23;;;;;;;:8;:23;;;;;:30;;5798:17;;7787:23;:30;;;:::i;:::-;;;7821:1;7787:35;7783:75;;7831:27;;;;;11442:18:351;11430:31;;7831:27:104;;;11412:50:351;11385:18;;7831:27:104;11268:200:351;7783:75:104;5828:9:::1;5823:237;5847:12;:19;5843:1;:23;5823:237;;;5888:12;5901:1;5888:15;;;;;;;;:::i;:::-;;;;;;;:21;;;5881:42;;;5924:10;5944:4;5951:12;5964:1;5951:15;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;:22:::1;::::0;5881:93:::1;::::0;;::::1;::::0;;;;;;15945:42:351;16014:15;;;5881:93:104::1;::::0;::::1;15996:34:351::0;16066:15;;;;16046:18;;;16039:43;16098:18;;;16091:34;15908:18;;5881:93:104::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5989:12;6002:1;5989:15;;;;;;;;:::i;:::-;;;;;;;:21;;;5982:37;;;6020:8;6030:12;6043:1;6030:15;;;;;;;;:::i;:::-;;;;;;;:22;;;5982:71;;;;;;;;;;;;;;;16590:42:351::0;16578:55;;;;16560:74;;16665:2;16650:18;;16643:34;16548:2;16533:18;;16386:297;5982:71:104::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;5868:3:104::1;::::0;::::1;:::i;:::-;;;5823:237;;;-1:-1:-1::0;6104:190:104::1;::::0;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;;;;;;;6276:10:::1;::::0;::::1;;6104:190:::0;;;;6223:27:::1;::::0;::::1;6065:36;6223:27:::0;;;:8:::1;:27:::0;;;;;;6104:190;;;;;;6223:27;6104:190:::1;::::0;::::1;:::i;1001:265:249:-:0;1074:14;;;;1060:10;:28;1052:63;;;;;;;16890:2:351;1052:63:249;;;16872:21:351;16929:2;16909:18;;;16902:30;16968:24;16948:18;;;16941:52;17010:18;;1052:63:249;16688:346:351;1052:63:249;1122:16;1141:7;;1164:10;1154:20;;;;;;;;-1:-1:-1;1180:27:249;;;;;;;1219:42;;1141:7;;;;;1164:10;;1141:7;;1219:42;;;1046:220;1001:265::o;1908:720:106:-;2412:10:105;:31;2434:8;2412:31;;2408:69;;2452:25;;;;;2466:10;2452:25;;;8558:74:351;8531:18;;2452:25:105;8412:226:351;2408:69:105;2017:27:106::1;::::0;;;::::1;::::0;::::1;;:::i;:::-;7787:23:104;::::0;::::1;;::::0;;;:8:::1;:23;::::0;;;;:30;;::::1;::::0;::::1;:::i;:::-;;;7821:1;7787:35:::0;7783:75:::1;;7831:27;::::0;::::1;::::0;;11442:18:351;11430:31;;7831:27:104::1;::::0;::::1;11412:50:351::0;11385:18;;7831:27:104::1;11268:200:351::0;7783:75:104::1;2056:28:106::2;::::0;;;;:4:::2;::::0;:19:::2;::::0;:28:::2;::::0;2076:7;;2056:28:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;2052:526;;;::::0;;;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;2233:65:106::2;2254:17:::0;::::2;2281:15;2273:24;::::0;2233:65:::2;-1:-1:-1::0;2324:17:106;::::2;2306:36;::::0;;;:17:::2;:36;::::0;;;;2345:7;;2306:46:::2;2345:7:::0;2306:36;:46:::2;:::i;:::-;-1:-1:-1::0;;2520:37:106::2;::::0;2534:17;::::2;::::0;2520:37:::2;::::0;::::2;::::0;2553:3;;2520:37:::2;:::i;:::-;;;;;;;;2565:7;2483:1:105::1;1908:720:106::0;:::o;2052:526::-:2;2588:35;::::0;2605:17;::::2;::::0;2588:35:::2;::::0;2605:17:::2;::::0;2588:35:::2;2483:1:105::1;1908:720:106::0;:::o;3899:725:104:-;7787:23;;;;;;;:8;:23;;;;;:30;;4030:17;;7787:23;:30;;;:::i;:::-;;;7821:1;7787:35;7783:75;;7831:27;;;;;11442:18:351;11430:31;;7831:27:104;;;11412:50:351;11385:18;;7831:27:104;11268:200:351;7783:75:104;4101:30:::1;::::0;;4055:43:::1;4101:30:::0;;;::::1;::::0;::::1;::::0;;;4055:43;4101:30:::1;::::0;::::1;-1:-1:-1::0;;;;;;;;;;;;;;;;;4101:30:104::1;;;;;;;;;;;;;;;;4055:76;;4137:36;4176:245;;;;;;;;4216:8;4176:245;;;;4238:4;4176:245;;;;4264:12;4176:245;;;;4348:1;4176:245;;;;;;4295:8;:27;4304:17;4295:27;;;;;;;;;;;;;;;4176:245;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;4137:284:::1;;4427:17;4461:8;4447:32;;;4508:8;4494:30;;;4525:17;4544:7;4494:58;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4559:17;4578:7;4447:139;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2951:456:106:-:0;4603:10;4625:4;4603:27;4599:50;;4639:10;;;;;;;;;;;;;;4599:50;3052:27:::1;::::0;;;::::1;::::0;::::1;;:::i;:::-;7787:23:104;::::0;::::1;;::::0;;;:8:::1;:23;::::0;;;;:30;;::::1;::::0;::::1;:::i;:::-;;;7821:1;7787:35:::0;7783:75:::1;;7831:27;::::0;::::1;::::0;;11442:18:351;11430:31;;7831:27:104::1;::::0;::::1;11412:50:351::0;11385:18;;7831:27:104::1;11268:200:351::0;7783:75:104::1;3116:11:106::2;::::0;::::2;;3112:35;;;3136:11;;;;;;;;;;;;;;3112:35;3191:9;3186:176;3210:24;;::::0;::::2;:7:::0;:24:::2;:::i;:::-;:31;;3206:1;:35;3186:176;;;3256:99;3311:7;1364::249::0;1386;;;;1317:81;3311:7:106::2;3320:24;;::::0;::::2;:7:::0;:24:::2;:::i;:::-;3345:1;3320:27;;;;;;;:::i;:::-;;;;;;:34;;;3263:7;:24;;;;;;;;:::i;:::-;3288:1;3263:27;;;;;;;:::i;:::-;:33;::::0;::::2;:27;::::0;;::::2;;:33:::0;;::::2;::::0;-1:-1:-1;3263:33:106::2;:::i;:::-;3256:54;;::::0;:99;:54:::2;:99::i;:::-;3243:3;::::0;::::2;:::i;:::-;;;3186:176;;1241:85:::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;811:98:249:-;1941:20;:18;:20::i;:::-;882:22:::1;901:2;882:18;:22::i;1715:111::-:0;1787:7;;;;1773:10;:21;1765:56;;;;;;;26510:2:351;1765:56:249;;;26492:21:351;26549:2;26529:18;;;26522:30;26588:24;26568:18;;;26561:52;26630:18;;1765:56:249;26308:346:351;1765:56:249;1715:111::o;15766:135:345:-;15845:7;15875:20;15879:3;15891;15875;:20::i;:::-;15867:29;15766:135;-1:-1:-1;;;15766:135:345:o;13958:165::-;14063:4;14082:36;14086:3;14098;14111:5;14082:3;:36::i;:::-;14075:43;13958:165;-1:-1:-1;;;;13958:165:345:o;759:169:331:-;864:58;;;16590:42:351;16578:55;;864:58:331;;;16560:74:351;16650:18;;;;16643:34;;;864:58:331;;;;;;;;;;16533:18:351;;;;864:58:331;;;;;;;;;;887:23;864:58;;;837:86;;857:5;;837:19;:86::i;1482:188:249:-;1550:10;1544:16;;;;1536:52;;;;;;;26861:2:351;1536:52:249;;;26843:21:351;26900:2;26880:18;;;26873:30;26939:25;26919:18;;;26912:53;26982:18;;1536:52:249;26659:347:351;1536:52:249;1595:14;:19;;;;;;;;;;;;;;-1:-1:-1;1653:7:249;;1626:39;;1595:19;;1653:7;;1626:39;;-1:-1:-1;1626:39:249;1482:188;:::o;4425:233:345:-;4507:7;4538:16;;;:11;;;:16;;;;;;4568:10;;;;:32;;;4582:18;4591:3;4596;4582:8;:18::i;:::-;4560:75;;;;;;;27213:2:351;4560:75:345;;;27195:21:351;27252:2;27232:18;;;27225:30;27291:32;27271:18;;;27264:60;27341:18;;4560:75:345;27011:354:351;2485:180:345;2593:4;2605:16;;;:11;;;:16;;;;;:24;;;2642:18;2605:3;2617;2642:13;:18::i;3401:668:331:-;3804:23;3830:69;3858:4;3830:69;;;;;;;;;;;;;;;;;3838:5;3830:27;;;;:69;;;;;:::i;:::-;3909:17;;3804:95;;-1:-1:-1;3909:21:331;3905:160;;3992:10;3981:30;;;;;;;;;;;;:::i;:::-;3973:85;;;;;;;27572:2:351;3973:85:331;;;27554:21:351;27611:2;27591:18;;;27584:30;27650:34;27630:18;;;27623:62;27721:12;27701:18;;;27694:40;27751:19;;3973:85:331;27370:406:351;3046:134:345;3133:4;3152:23;:3;3171;3152:18;:23::i;5543:117:346:-;5613:4;5632:23;5637:3;5649:5;5632:4;:23::i;3695:187:332:-;3798:12;3825:52;3847:6;3855:4;3861:1;3864:12;3825:21;:52::i;6010:132:346:-;6090:4;4067:19;;;:12;;;:19;;;;;;:24;;6109:28;3975:121;2152:354;2215:4;4067:19;;;:12;;;:19;;;;;;2227:275;;-1:-1:-1;2263:23:346;;;;;;;;:11;:23;;;;;;;;;;;;;2425:18;;2403:19;;;:12;;;:19;;;;;;:40;;;;2451:11;;2227:275;-1:-1:-1;2490:5:346;2483:12;;4672:414:332;4819:12;4872:5;4847:21;:30;;4839:81;;;;;;;27983:2:351;4839:81:332;;;27965:21:351;28022:2;28002:18;;;27995:30;28061:34;28041:18;;;28034:62;28132:8;28112:18;;;28105:36;28158:19;;4839:81:332;27781:402:351;4839:81:332;4927:12;4941:23;4968:6;:11;;4987:5;4994:4;4968:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4926:73;;;;5012:69;5039:6;5047:7;5056:10;5068:12;5012:26;:69::i;:::-;5005:76;4672:414;-1:-1:-1;;;;;;;4672:414:332:o;7016:548::-;7178:12;7202:7;7198:362;;;7223:10;:17;7244:1;7223:22;7219:256;;1395:19;;;;7406:60;;;;;;;28682:2:351;7406:60:332;;;28664:21:351;28721:2;28701:18;;;28694:30;28760:31;28740:18;;;28733:59;28809:18;;7406:60:332;28480:353:351;7406:60:332;-1:-1:-1;7489:10:332;7482:17;;7198:362;7520:33;7528:10;7540:12;8181:17;;:21;8177:325;;8383:10;8377:17;8431:15;8418:10;8414:2;8410:19;8403:44;8177:325;8482:12;8475:20;;;;;;;;;;;:::i;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:332:351:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:66;223:5;219:78;212:5;209:89;199:117;;312:1;309;302:12;543:154;629:42;622:5;618:54;611:5;608:65;598:93;;687:1;684;677:12;702:315;770:6;778;831:2;819:9;810:7;806:23;802:32;799:52;;;847:1;844;837:12;799:52;883:9;870:23;860:33;;943:2;932:9;928:18;915:32;956:31;981:5;956:31;:::i;:::-;1006:5;996:15;;;702:315;;;;;:::o;1022:129::-;1107:18;1100:5;1096:30;1089:5;1086:41;1076:69;;1141:1;1138;1131:12;1156:245;1214:6;1267:2;1255:9;1246:7;1242:23;1238:32;1235:52;;;1283:1;1280;1273:12;1235:52;1322:9;1309:23;1341:30;1365:5;1341:30;:::i;1406:118::-;1492:5;1485:13;1478:21;1471:5;1468:32;1458:60;;1514:1;1511;1504:12;1529:241;1585:6;1638:2;1626:9;1617:7;1613:23;1609:32;1606:52;;;1654:1;1651;1644:12;1606:52;1693:9;1680:23;1712:28;1734:5;1712:28;:::i;1775:184::-;1827:77;1824:1;1817:88;1924:4;1921:1;1914:15;1948:4;1945:1;1938:15;1964:257;2036:4;2030:11;;;2068:17;;2115:18;2100:34;;2136:22;;;2097:62;2094:88;;;2162:18;;:::i;:::-;2198:4;2191:24;1964:257;:::o;2226:334::-;2297:2;2291:9;2353:2;2343:13;;-1:-1:-1;;2339:86:351;2327:99;;2456:18;2441:34;;2477:22;;;2438:62;2435:88;;;2503:18;;:::i;:::-;2539:2;2532:22;2226:334;;-1:-1:-1;2226:334:351:o;2565:589::-;2607:5;2660:3;2653:4;2645:6;2641:17;2637:27;2627:55;;2678:1;2675;2668:12;2627:55;2714:6;2701:20;2740:18;2736:2;2733:26;2730:52;;;2762:18;;:::i;:::-;2806:114;2914:4;-1:-1:-1;;2838:4:351;2834:2;2830:13;2826:86;2822:97;2806:114;:::i;:::-;2945:2;2936:7;2929:19;2991:3;2984:4;2979:2;2971:6;2967:15;2963:26;2960:35;2957:55;;;3008:1;3005;2998:12;2957:55;3073:2;3066:4;3058:6;3054:17;3047:4;3038:7;3034:18;3021:55;3121:1;3096:16;;;3114:4;3092:27;3085:38;;;;3100:7;2565:589;-1:-1:-1;;;2565:589:351:o;3159:672::-;3253:6;3261;3269;3322:2;3310:9;3301:7;3297:23;3293:32;3290:52;;;3338:1;3335;3328:12;3290:52;3377:9;3364:23;3396:30;3420:5;3396:30;:::i;:::-;3445:5;-1:-1:-1;3501:2:351;3486:18;;3473:32;3524:18;3554:14;;;3551:34;;;3581:1;3578;3571:12;3551:34;3604:49;3645:7;3636:6;3625:9;3621:22;3604:49;:::i;:::-;3594:59;;3706:2;3695:9;3691:18;3678:32;3662:48;;3735:2;3725:8;3722:16;3719:36;;;3751:1;3748;3741:12;3719:36;;3774:51;3817:7;3806:8;3795:9;3791:24;3774:51;:::i;:::-;3764:61;;;3159:672;;;;;:::o;3836:453::-;3912:6;3920;3973:2;3961:9;3952:7;3948:23;3944:32;3941:52;;;3989:1;3986;3979:12;3941:52;4028:9;4015:23;4047:30;4071:5;4047:30;:::i;:::-;4096:5;-1:-1:-1;4152:2:351;4137:18;;4124:32;4179:18;4168:30;;4165:50;;;4211:1;4208;4201:12;4165:50;4234:49;4275:7;4266:6;4255:9;4251:22;4234:49;:::i;:::-;4224:59;;;3836:453;;;;;:::o;4294:250::-;4379:1;4389:113;4403:6;4400:1;4397:13;4389:113;;;4479:11;;;4473:18;4460:11;;;4453:39;4425:2;4418:10;4389:113;;;-1:-1:-1;;4536:1:351;4518:16;;4511:27;4294:250::o;4549:329::-;4590:3;4628:5;4622:12;4655:6;4650:3;4643:19;4671:76;4740:6;4733:4;4728:3;4724:14;4717:4;4710:5;4706:16;4671:76;:::i;:::-;4792:2;4780:15;-1:-1:-1;;4776:88:351;4767:98;;;;4867:4;4763:109;;4549:329;-1:-1:-1;;4549:329:351:o;4883:217::-;5030:2;5019:9;5012:21;4993:4;5050:44;5090:2;5079:9;5075:18;5067:6;5050:44;:::i;5105:1067::-;5173:5;5226:3;5219:4;5211:6;5207:17;5203:27;5193:55;;5244:1;5241;5234:12;5193:55;5280:6;5267:20;5306:4;5329:18;5325:2;5322:26;5319:52;;;5351:18;;:::i;:::-;5391:36;5423:2;5418;5415:1;5411:10;5407:19;5391:36;:::i;:::-;5461:15;;;5547:1;5543:10;;;;5531:23;;5527:32;;;5492:12;;;;5571:15;;;5568:35;;;5599:1;5596;5589:12;5568:35;5635:2;5627:6;5623:15;5647:496;5663:6;5658:3;5655:15;5647:496;;;5741:4;5735:3;5730;5726:13;5722:24;5719:114;;;5787:1;5816:2;5812;5805:14;5719:114;5859:22;;:::i;:::-;5922:3;5909:17;5939:33;5964:7;5939:33;:::i;:::-;5985:22;;6056:12;;;6043:26;6027:14;;;6020:50;6083:18;;6121:12;;;;5689:4;5680:14;5647:496;;;-1:-1:-1;6161:5:351;5105:1067;-1:-1:-1;;;;;;5105:1067:351:o;6177:747::-;6320:6;6328;6336;6389:2;6377:9;6368:7;6364:23;6360:32;6357:52;;;6405:1;6402;6395:12;6357:52;6444:9;6431:23;6463:30;6487:5;6463:30;:::i;:::-;6512:5;-1:-1:-1;6568:2:351;6553:18;;6540:32;6591:18;6621:14;;;6618:34;;;6648:1;6645;6638:12;6618:34;6671:49;6712:7;6703:6;6692:9;6688:22;6671:49;:::i;:::-;6661:59;;6773:2;6762:9;6758:18;6745:32;6729:48;;6802:2;6792:8;6789:16;6786:36;;;6818:1;6815;6808:12;6786:36;;6841:77;6910:7;6899:8;6888:9;6884:24;6841:77;:::i;6929:946::-;7090:6;7098;7106;7114;7167:3;7155:9;7146:7;7142:23;7138:33;7135:53;;;7184:1;7181;7174:12;7135:53;7223:9;7210:23;7242:30;7266:5;7242:30;:::i;:::-;7291:5;-1:-1:-1;7347:2:351;7332:18;;7319:32;7370:18;7400:14;;;7397:34;;;7427:1;7424;7417:12;7397:34;7450:49;7491:7;7482:6;7471:9;7467:22;7450:49;:::i;:::-;7440:59;;7552:2;7541:9;7537:18;7524:32;7508:48;;7581:2;7571:8;7568:16;7565:36;;;7597:1;7594;7587:12;7565:36;7620:51;7663:7;7652:8;7641:9;7637:24;7620:51;:::i;:::-;7610:61;;7724:2;7713:9;7709:18;7696:32;7680:48;;7753:2;7743:8;7740:16;7737:36;;;7769:1;7766;7759:12;7737:36;;7792:77;7861:7;7850:8;7839:9;7835:24;7792:77;:::i;:::-;7782:87;;;6929:946;;;;;;;:::o;7880:395::-;7974:6;8027:2;8015:9;8006:7;8002:23;7998:32;7995:52;;;8043:1;8040;8033:12;7995:52;8083:9;8070:23;8116:18;8108:6;8105:30;8102:50;;;8148:1;8145;8138:12;8102:50;8171:22;;8227:3;8209:16;;;8205:26;8202:46;;;8244:1;8241;8234:12;8643:180;8702:6;8755:2;8743:9;8734:7;8730:23;8726:32;8723:52;;;8771:1;8768;8761:12;8723:52;-1:-1:-1;8794:23:351;;8643:180;-1:-1:-1;8643:180:351:o;8828:544::-;9075:6;9064:9;9057:25;9130:18;9122:6;9118:31;9113:2;9102:9;9098:18;9091:59;9186:3;9181:2;9170:9;9166:18;9159:31;9038:4;9213:45;9253:3;9242:9;9238:19;9230:6;9213:45;:::i;:::-;9306:9;9298:6;9294:22;9289:2;9278:9;9274:18;9267:50;9334:32;9359:6;9351;9334:32;:::i;9377:247::-;9436:6;9489:2;9477:9;9468:7;9464:23;9460:32;9457:52;;;9505:1;9502;9495:12;9457:52;9544:9;9531:23;9563:31;9588:5;9563:31;:::i;10248:437::-;10327:1;10323:12;;;;10370;;;10391:61;;10445:4;10437:6;10433:17;10423:27;;10391:61;10498:2;10490:6;10487:14;10467:18;10464:38;10461:218;;10535:77;10532:1;10525:88;10636:4;10633:1;10626:15;10664:4;10661:1;10654:15;10461:218;;10248:437;;;:::o;10690:184::-;10742:77;10739:1;10732:88;10839:4;10836:1;10829:15;10863:4;10860:1;10853:15;10879:184;10931:77;10928:1;10921:88;11028:4;11025:1;11018:15;11052:4;11049:1;11042:15;11068:195;11107:3;11138:66;11131:5;11128:77;11125:103;;11208:18;;:::i;:::-;-1:-1:-1;11255:1:351;11244:13;;11068:195::o;11473:1689::-;11657:4;11686:2;11727:18;11719:6;11715:31;11704:9;11697:50;11766:2;11804;11799;11788:9;11784:18;11777:30;11842:6;11836:13;11885:4;11880:2;11869:9;11865:18;11858:32;11913:51;11959:3;11948:9;11944:19;11930:12;11913:51;:::i;:::-;11899:65;;12013:2;12005:6;12001:15;11995:22;12036:66;12166:2;12154:9;12146:6;12142:22;12138:31;12133:2;12122:9;12118:18;12111:59;12193:40;12226:6;12210:14;12193:40;:::i;:::-;12270:15;;;12264:22;12327;;;12323:31;;12317:3;12302:19;;12295:60;12404:21;;12434:22;;;12510:23;;;;-1:-1:-1;12551:1:351;;-1:-1:-1;12472:15:351;;;;12561:303;12575:6;12572:1;12569:13;12561:303;;;12634:13;;12676:9;;12687:42;12672:58;12660:71;;12771:11;;12765:18;12751:12;;;12744:40;12839:15;;;;12597:1;12590:9;;;;;12804:12;;;;12561:303;;;-1:-1:-1;12913:2:351;12901:15;;12895:22;8357:42;8346:54;12976:4;12961:20;;8334:67;13031:3;13019:16;;13013:23;13077:19;;;13073:28;;13067:3;13052:19;;13045:57;13013:23;-1:-1:-1;13119:37:351;13081:3;13013:23;13119:37;:::i;:::-;13111:45;11473:1689;-1:-1:-1;;;;;;;;;;11473:1689:351:o;13167:184::-;13237:6;13290:2;13278:9;13269:7;13265:23;13261:32;13258:52;;;13306:1;13303;13296:12;13258:52;-1:-1:-1;13329:16:351;;13167:184;-1:-1:-1;13167:184:351:o;13481:544::-;13582:2;13577:3;13574:11;13571:448;;;13618:1;13643:5;13639:2;13632:17;13688:4;13684:2;13674:19;13758:2;13746:10;13742:19;13739:1;13735:27;13729:4;13725:38;13794:4;13782:10;13779:20;13776:47;;;-1:-1:-1;13817:4:351;13776:47;13872:2;13867:3;13863:12;13860:1;13856:20;13850:4;13846:31;13836:41;;13927:82;13945:2;13938:5;13935:13;13927:82;;;13990:17;;;13971:1;13960:13;13927:82;;;13931:3;;;13481:544;;;:::o;14261:1467::-;14385:3;14379:10;14412:18;14404:6;14401:30;14398:56;;;14434:18;;:::i;:::-;14463:96;14552:6;14512:38;14544:4;14538:11;14512:38;:::i;:::-;14506:4;14463:96;:::i;:::-;14614:4;;14678:2;14667:14;;14695:1;14690:781;;;;15515:1;15532:6;15529:89;;;-1:-1:-1;15584:19:351;;;15578:26;15529:89;14167:66;14158:1;14154:11;;;14150:84;14146:89;14136:100;14242:1;14238:11;;;14133:117;15631:81;;14660:1062;;14690:781;13428:1;13421:14;;;13465:4;13452:18;;-1:-1:-1;;14726:79:351;;;14902:236;14916:7;14913:1;14910:14;14902:236;;;15005:19;;;14999:26;14984:42;;15097:27;;;;15065:1;15053:14;;;;14932:19;;14902:236;;;14906:3;15166:6;15157:7;15154:19;15151:261;;;15227:19;;;15221:26;15328:66;15310:1;15306:14;;;15322:3;15302:24;15298:97;15294:102;15279:118;15264:134;;15151:261;-1:-1:-1;;;;;15458:1:351;15442:14;;;15438:22;15425:36;;-1:-1:-1;14261:1467:351:o;16136:245::-;16203:6;16256:2;16244:9;16235:7;16231:23;16227:32;16224:52;;;16272:1;16269;16262:12;16224:52;16304:9;16298:16;16323:28;16345:5;16323:28;:::i;17039:559::-;17097:5;17104:6;17164:3;17151:17;17246:66;17235:8;17219:14;17215:29;17211:102;17191:18;17187:127;17177:155;;17328:1;17325;17318:12;17177:155;17356:33;;17460:4;17447:18;;;-1:-1:-1;17408:21:351;;-1:-1:-1;17488:18:351;17477:30;;17474:50;;;17520:1;17517;17510:12;17474:50;17567:6;17551:14;17547:27;17540:5;17536:39;17533:59;;;17588:1;17585;17578:12;17533:59;17039:559;;;;;:::o;17603:325::-;17691:6;17686:3;17679:19;17743:6;17736:5;17729:4;17724:3;17720:14;17707:43;;17795:1;17788:4;17779:6;17774:3;17770:16;17766:27;17759:38;17661:3;17917:4;-1:-1:-1;;17842:2:351;17834:6;17830:15;17826:88;17821:3;17817:98;17813:109;17806:116;;17603:325;;;;:::o;17933:659::-;18056:6;18051:3;18044:19;18026:3;18082:4;18111:2;18106:3;18102:12;18095:19;;18137:5;18160:1;18170:397;18184:6;18181:1;18178:13;18170:397;;;18261:6;18248:20;18281:33;18306:7;18281:33;:::i;:::-;18352:42;18339:56;18327:69;;18443:15;;;18430:29;18416:12;;;18409:51;18483:4;18507:12;;;;18542:15;;;;18206:1;18199:9;18170:397;;;-1:-1:-1;18583:3:351;;17933:659;-1:-1:-1;;;;;17933:659:351:o;18597:1680::-;18794:2;18783:9;18776:21;18846:6;18833:20;18828:2;18817:9;18813:18;18806:48;18757:4;18901:2;18893:6;18889:15;18876:29;18914:30;18938:5;18914:30;:::i;:::-;18963:18;19028:2;19021:5;19017:14;19012:2;19001:9;18997:18;18990:42;19075:55;19126:2;19118:6;19114:15;19106:6;19075:55;:::i;:::-;19041:89;;19166:4;19161:2;19150:9;19146:18;19139:32;19194:74;19263:3;19252:9;19248:19;19234:12;19220;19194:74;:::i;:::-;19180:88;;;19315:55;19366:2;19358:6;19354:15;19346:6;19315:55;:::i;:::-;-1:-1:-1;;19520:2:351;19508:9;19500:6;19496:22;19492:31;19486:3;19475:9;19471:19;19464:60;19547:65;19605:6;19589:14;19573;19547:65;:::i;:::-;19533:79;;19672:3;19664:6;19660:16;19647:30;19621:56;;19753:66;19744:6;19728:14;19724:27;19720:100;19700:18;19696:125;19686:153;;19835:1;19832;19825:12;19686:153;19975:2;19863:31;;;19962:16;;;;19917:21;;-1:-1:-1;19990:14:351;;;19987:34;;;20017:1;20014;20007:12;19987:34;20073:6;20070:1;20066:14;20050;20046:35;20037:7;20033:49;20030:69;;;20095:1;20092;20085:12;20030:69;20141:22;;;20137:31;20130:4;20115:20;;20108:61;20186:85;20145:6;20256;20247:7;20186:85;:::i;20282:574::-;20353:4;20359:6;20419:11;20406:25;20509:66;20498:8;20482:14;20478:29;20474:102;20454:18;20450:127;20440:155;;20591:1;20588;20581:12;20440:155;20618:33;;20670:20;;;-1:-1:-1;20713:18:351;20702:30;;20699:50;;;20745:1;20742;20735:12;20699:50;20778:4;20766:17;;-1:-1:-1;20809:14:351;20805:27;;;20795:38;;20792:58;;;20846:1;20843;20836:12;20861:1305;20967:18;20962:3;20959:27;20956:53;;;20989:18;;:::i;:::-;21018:93;21107:3;21067:38;21099:4;21093:11;21067:38;:::i;:::-;21061:4;21018:93;:::i;:::-;21137:1;21162:2;21157:3;21154:11;21179:1;21174:734;;;;21952:1;21969:3;21966:93;;;-1:-1:-1;22025:19:351;;;22012:33;21966:93;14167:66;14158:1;14154:11;;;14150:84;14146:89;14136:100;14242:1;14238:11;;;14133:117;22072:78;;21147:1013;;21174:734;13428:1;13421:14;;;13465:4;13452:18;;-1:-1:-1;;21210:76:351;;;21369:9;21391:229;21405:7;21402:1;21399:14;21391:229;;;21494:19;;;21481:33;21466:49;;21601:4;21586:20;;;;21554:1;21542:14;;;;21421:12;21391:229;;;21395:3;21648;21639:7;21636:16;21633:219;;;21768:66;21762:3;21756;21753:1;21749:11;21745:21;21741:94;21737:99;21724:9;21719:3;21715:19;21702:33;21698:139;21690:6;21683:155;21633:219;;;21895:1;21889:3;21886:1;21882:11;21878:19;21872:4;21865:33;21147:1013;;;20861:1305;;;:::o;22171:639::-;22299:4;22305:6;22365:11;22352:25;22455:66;22444:8;22428:14;22424:29;22420:102;22400:18;22396:127;22386:155;;22537:1;22534;22527:12;22386:155;22564:33;;22616:20;;;-1:-1:-1;22659:18:351;22648:30;;22645:50;;;22691:1;22688;22681:12;22645:50;22724:4;22712:17;;-1:-1:-1;22775:1:351;22771:14;;;22755;22751:35;22741:46;;22738:66;;;22800:1;22797;22790:12;22815:430;22963:5;22950:19;22978:33;23003:7;22978:33;:::i;:::-;23135:42;23126:7;23122:56;23053:66;23046:4;23040:11;23036:84;23033:146;23027:4;23020:160;;23234:2;23227:5;23223:14;23210:28;23206:1;23200:4;23196:12;23189:50;22815:430;;:::o;23250:1315::-;23415:20;23410:3;23407:29;23404:55;;;23439:18;;:::i;:::-;23488:4;23482:11;23515:3;23509:4;23502:17;23539:6;23534:3;23531:15;23528:654;;;23579:1;23603:66;23715:2;23707:6;23703:15;23695:6;23692:27;23682:61;;23723:18;;:::i;:::-;23783:2;23778:3;23774:12;23769:3;23766:21;23756:55;;23791:18;;:::i;:::-;-1:-1:-1;23834:1:351;23848:16;;;23903:4;23889:19;;23993:12;;;23983:23;;;23941:15;;;23931:26;24019:153;24037:2;24030:5;24027:13;24019:153;;;24112:2;24105:5;24098:17;24155:2;24150;24143:5;24139:14;24132:26;24063:1;24056:5;24052:13;24043:22;;24019:153;;;24023:3;;;;23528:654;-1:-1:-1;13428:1:351;13421:14;;;13465:4;13452:18;;24205:5;;24300:259;24314:3;24311:1;24308:10;24300:259;;;24360:104;24457:6;24444:11;24360:104;:::i;:::-;24499:2;24487:15;;;;;24547:1;24530:19;;;;;24333:1;24326:9;24300:259;;24570:1544;24749:5;24736:19;24730:4;24723:33;24793:1;24787:4;24783:12;24843:2;24836:5;24832:14;24819:28;24856:32;24880:7;24856:32;:::i;:::-;24907:18;25061:2;25052:7;25048:16;24979:66;24966:10;24960:17;24956:90;24953:112;24941:10;24934:132;25109:58;25163:2;25156:5;25152:14;25145:5;25109:58;:::i;:::-;25075:92;;;;25176:97;25259:13;25246:11;25242:1;25236:4;25232:12;25176:97;:::i;:::-;25318:58;25372:2;25365:5;25361:14;25354:5;25318:58;:::i;:::-;25282:94;;;;25385:99;25470:13;25455;25451:1;25445:4;25441:12;25385:99;:::i;:::-;25543:3;25536:5;25532:15;25519:29;25493:55;;25623:66;25615:5;25599:14;25595:26;25591:99;25571:18;25567:124;25557:152;;25705:1;25702;25695:12;25557:152;25730:30;;;;25783:18;;;-1:-1:-1;25813:14:351;;;25810:34;;;25840:1;25837;25830:12;25810:34;;25877:2;25871:4;25867:13;25853:27;;25931:6;25928:1;25924:14;25908;25904:35;25896:6;25892:48;25889:68;;;25953:1;25950;25943:12;25889:68;25966:142;26101:6;26093;26089:1;26083:4;26079:12;25966:142;:::i;:::-;;;24570:1544;;:::o;28188:287::-;28317:3;28355:6;28349:13;28371:66;28430:6;28425:3;28418:4;28410:6;28406:17;28371:66;:::i;:::-;28453:16;;;;;28188:287;-1:-1:-1;;28188:287:351:o",
    "linkReferences": {},
    "immutableReferences": {
      "69902": [
        {
          "start": 614,
          "length": 32
        },
        {
          "start": 2210,
          "length": 32
        },
        {
          "start": 3066,
          "length": 32
        },
        {
          "start": 3807,
          "length": 32
        },
        {
          "start": 4390,
          "length": 32
        },
        {
          "start": 5331,
          "length": 32
        },
        {
          "start": 5391,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "acceptOwnership()": "79ba5097",
    "ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))": "85572ffb",
    "disableChain(uint64)": "41eade46",
    "enableChain(uint64,bytes)": "5dc02a2c",
    "getRouter()": "b0f479a1",
    "owner()": "8da5cb5b",
    "processMessage((bytes32,uint64,bytes,bytes,(address,uint256)[]))": "cf6730f8",
    "retryFailedMessage(bytes32,address)": "369f7f66",
    "s_chains(uint64)": "5dc5ebdb",
    "s_feeToken()": "ff2deec3",
    "s_messageContents(bytes32)": "d0d1fc3d",
    "sendDataAndTokens(uint64,bytes,bytes,(address,uint256)[])": "7383c8fb",
    "sendDataPayFeeToken(uint64,bytes,bytes)": "5d8e7f18",
    "sendDataPayNative(uint64,bytes,bytes)": "c0cb2d08",
    "sendTokens(uint64,bytes,(address,uint256)[])": "686fab79",
    "setSimRevert(bool)": "52f813c3",
    "supportsInterface(bytes4)": "01ffc9a7",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IRouterClient\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"feeToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ErrorCase\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"chainSelector\",\"type\":\"uint64\"}],\"name\":\"InvalidChain\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidConfig\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"InvalidRouter\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"}],\"name\":\"MessageNotFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlySelf\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"reason\",\"type\":\"bytes\"}],\"name\":\"MessageFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"}],\"name\":\"MessageReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"}],\"name\":\"MessageRecovered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"}],\"name\":\"MessageSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"}],\"name\":\"MessageSucceeded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sourceChainSelector\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"sender\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Client.EVMTokenAmount[]\",\"name\":\"destTokenAmounts\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Client.Any2EVMMessage\",\"name\":\"message\",\"type\":\"tuple\"}],\"name\":\"ccipReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"chainSelector\",\"type\":\"uint64\"}],\"name\":\"disableChain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"chainSelector\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"extraArgs\",\"type\":\"bytes\"}],\"name\":\"enableChain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sourceChainSelector\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"sender\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Client.EVMTokenAmount[]\",\"name\":\"destTokenAmounts\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Client.Any2EVMMessage\",\"name\":\"message\",\"type\":\"tuple\"}],\"name\":\"processMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"retryFailedMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"destChainSelector\",\"type\":\"uint64\"}],\"name\":\"s_chains\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"extraArgsBytes\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_feeToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"}],\"name\":\"s_messageContents\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sourceChainSelector\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"sender\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"destChainSelector\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"receiver\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Client.EVMTokenAmount[]\",\"name\":\"tokenAmounts\",\"type\":\"tuple[]\"}],\"name\":\"sendDataAndTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"destChainSelector\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"receiver\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"sendDataPayFeeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"destChainSelector\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"receiver\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"sendDataPayNative\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"destChainSelector\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"receiver\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Client.EVMTokenAmount[]\",\"name\":\"tokenAmounts\",\"type\":\"tuple[]\"}],\"name\":\"sendTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"simRevert\",\"type\":\"bool\"}],\"name\":\"setSimRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))\":{\"details\":\"Extremely important to ensure only router calls this.\",\"params\":{\"message\":\"The message to process.\"}},\"getRouter()\":{\"returns\":{\"_0\":\"i_router address\"}},\"processMessage((bytes32,uint64,bytes,bytes,(address,uint256)[]))\":{\"details\":\"This example just sends the tokens to the owner of this contracts. More interesting functions could be implemented.It has to be external because of the try/catch.\",\"params\":{\"message\":\"The message to process.\"}},\"retryFailedMessage(bytes32,address)\":{\"details\":\"This function is only callable by the owner.\"},\"supportsInterface(bytes4)\":{\"details\":\"Should indicate whether the contract implements IAny2EVMMessageReceiver e.g. return interfaceId == type(IAny2EVMMessageReceiver).interfaceId || interfaceId == type(IERC165).interfaceId This allows CCIP to check if ccipReceive is available before calling it. If this returns false or reverts, only tokens are transferred to the receiver. If this returns true, tokens are transferred and ccipReceive is called atomically. Additionally, if the receiver address does not have code associated with it at the time of execution (EXTCODESIZE returns 0), only tokens will be transferred.\",\"params\":{\"interfaceId\":\"The interfaceId to check\"},\"returns\":{\"_0\":\"true if the interfaceId is supported\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))\":{\"notice\":\"The entrypoint for the CCIP router to call. This function should never revert, all errors should be handled internally in this contract.\"},\"getRouter()\":{\"notice\":\"Return the current router\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"processMessage((bytes32,uint64,bytes,bytes,(address,uint256)[]))\":{\"notice\":\"This function the entrypoint for this contract to process messages.\"},\"retryFailedMessage(bytes32,address)\":{\"notice\":\"This function is callable by the owner when a message has failed to unblock the tokens that are associated with that message.\"},\"sendDataAndTokens(uint64,bytes,bytes,(address,uint256)[])\":{\"notice\":\"sends data to receiver on dest chain. Assumes address(this) has sufficient native token.\"},\"sendDataPayFeeToken(uint64,bytes,bytes)\":{\"notice\":\"sends data to receiver on dest chain. Assumes address(this) has sufficient feeToken.\"},\"sendDataPayNative(uint64,bytes,bytes)\":{\"notice\":\"sends data to receiver on dest chain. Assumes address(this) has sufficient native asset.\"},\"supportsInterface(bytes4)\":{\"notice\":\"IERC165 supports an interfaceId\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address, pending.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/v0.8/ccip/applications/DefensiveExample.sol\":\"DefensiveExample\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@ERC3643/=lib/ERC-3643/contracts/\",\":@chainlink/contracts-ccip/=src/v0.8/\",\":@chainlink/contracts/=node_modules/@chainlink/contracts/src/v0.6/\",\":@erc721a/=lib/ERC721A/contracts/\",\":@onchain-id/solidity/contracts/=lib/solidity/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/test/=lib/prb-test/src/\",\":ERC-3643/=lib/ERC-3643/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/contracts-upgradleable/=lib/openzeppelin-contracts-upgradleable/contracts/\",\":prb-test/=lib/prb-test/src/\",\":solidity/=lib/solidity/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"src/v0.8/ccip/applications/CCIPClientExample.sol\":{\"keccak256\":\"0x511f602fa658a934328b4aa95f6cf21dc451adfbc906fa5bde2056d2071d7957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e785559c7a55041a090f71f1c2bb79c170ade2a985b99f7eec0a895ee26d207\",\"dweb:/ipfs/QmZCXbRwZybnRnqqdiv4LmSiCgitsMNY5bRakeAj8pocaz\"]},\"src/v0.8/ccip/applications/CCIPReceiver.sol\":{\"keccak256\":\"0xd59dbf083bfad8fe95248cac59822ade0bc7d70e50ab05e366cb35a2b2ea99f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20205c17fa785b37acf0547c656ed60e09e806df7472e0f608129daa028f30f7\",\"dweb:/ipfs/QmcAUurGrEdn5pE66sVQek4M7EiGkdoKt38qThFpxcpGLB\"]},\"src/v0.8/ccip/applications/DefensiveExample.sol\":{\"keccak256\":\"0x75434e8dd0c88c1ff63409e75ccb276cccc6bdf5dbdad2617510d336f505cf70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://397196fb35cf69e389aada38d0f65709cb480c3afc931a95c66dda42db2408ae\",\"dweb:/ipfs/QmekwAbrTs7CLhmiWfx33QYhXDoBtUXPbCFe7Qc1c6wmXZ\"]},\"src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol\":{\"keccak256\":\"0xd2a05a4f58a453cbf8cfa6aa78f58cb8e42091b3a025f711a0aa51f584e16b48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3bb4ca50612b0150a29b9ea7c82f6228914ff54716584541bad5c0259e8fa33\",\"dweb:/ipfs/QmTnqhNtBD9bUmqVaR4YHkWrBUdSGHV3DXAgrTM193PGkH\"]},\"src/v0.8/ccip/interfaces/IRouterClient.sol\":{\"keccak256\":\"0x7f2fdd93e516b7476c6fab099f6806adf5ceaf399b0cc415f6b9ede890f2379b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://14e2547e54a0e225d1aa654d49ad47a169f966b985456612af449eec610189ea\",\"dweb:/ipfs/QmcWVnkJ6TKcUR4koDQQGiYMEt7vJ6WG9XcrwbPiPDHoP9\"]},\"src/v0.8/ccip/libraries/Client.sol\":{\"keccak256\":\"0x8af3ac1085c87342373772fb1a0107c7b90258e6bfed318ab2a601a14477e679\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://14395fefc8310c9a355262359c8f51036f83c004982fb600164c2a007629f81e\",\"dweb:/ipfs/QmeCLr8a5bDVyLQm8v947ULgV4CZmUeQPjVyWixzieBD5o\"]},\"src/v0.8/shared/access/ConfirmedOwner.sol\":{\"keccak256\":\"0x99d0b0786fe368970009c703f2249bfbc56340ddf1a28b60d2915bb58c34cd72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af0371c1af45db651823b9a3d5af761b08243c78f105166342eee28de356c8dd\",\"dweb:/ipfs/QmPnC9qNDKwJFd5unwLb9pxjrutoe8MWjm5EXHTxq2kJ4x\"]},\"src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"keccak256\":\"0x215529a99534a40e6257ef2282a91ea4a95b66debc3997866406907622efb405\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecc56a2cddb1ba6225ca0cffb07fdf6e24bcc4234cc87710c42a59c0a21ae395\",\"dweb:/ipfs/QmSpW4vkPHeRNZ14beMEk2LEtqY5JQTueNJC4sCT8JaSoc\"]},\"src/v0.8/shared/access/OwnerIsCreator.sol\":{\"keccak256\":\"0x895af02d6a3df2930bbb6ec1f2d68118b492ca6e710ba0c34fcb6b574a0906aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4c69fab5eea1c0448f856a51d7e5736454fe5cc083d36c60bf3ee23bb3d0e8e\",\"dweb:/ipfs/QmP4fYQ9k7xeZms6cwnqnQuuAkRkeE2TWewyvCD8Mrc2DZ\"]},\"src/v0.8/shared/interfaces/IOwnable.sol\":{\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921\",\"dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q\"]},\"src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x527e858729af8197f6c8f99554d32bfc4f5a72b15975489c94809363d7ae522f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6828dfa867eaff18f383aad4ca4b5aaedb93109023d74aaf418fee6c06e556c2\",\"dweb:/ipfs/QmXSQ9WnaJ6Ba9gvKvgNxDY7sa7ATJ9V55uwGSGCpBuJKu\"]},\"src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0x28d267ba89cbaca4a86577add59f1a18842ca6e7d80a05f3dbf52127928a5e2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67a26777e88ae78952713f4479ca3126db804dc9ce1a85f079ec067393a6275d\",\"dweb:/ipfs/QmNLxBkkA6os8W9vUeCsjcFsMkGhtqAZrGjPuoACTqVhbh\"]},\"src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x19d64e8f5fa895ab2625917111fd9f316d4f9314239f0712fd6dc2f5bff9d0c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://14de158ff9e64ebeac381bba59fe3500b48853063cfb27343090a3f710795fee\",\"dweb:/ipfs/QmQJE5SfDfgy8aKENnsjW4t9P4bmTSnujotFmnXnrwpfzQ\"]},\"src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/utils/Address.sol\":{\"keccak256\":\"0x172a09a55d730f20a9bb309086a4ad06b17c612151f58bab2b44efe78d583d4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f812456ddd112f09606bfc5965c6e643558d740264273017ad556122502b4e2\",\"dweb:/ipfs/QmdWE4wncanz9Lhu5ESgSo14jAR74Ss5puCM5zUGonATLw\"]},\"src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa36a31b4bb17fad88d023474893b3b895fa421650543b1ce5aefc78efbd43244\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f235b9175d95111f301d729566e214c32559e55a2b0579c947484748e20679d\",\"dweb:/ipfs/QmSsNBuPejy1wNe2u3JSt2p9wFhrjvBjFrnAaNe1nDNkEA\"]},\"src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/utils/structs/EnumerableMap.sol\":{\"keccak256\":\"0x68fb09424d69c771ebaeb5a425bcbdbb0725a236c0d83d517992b6f44bd7198d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3a036ba98e5d58911511b85abd620e1d8de7d203ab2a48b2a3d827710847df4\",\"dweb:/ipfs/QmNWrWgkfsk1AoLpWKDkbHu5CZmzEcGzrT74Ug46phm4p5\"]},\"src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9ec0d82ee53d4137be44f1f38f9a82d0d3a2027b3b8b226a5a90e4ee76e926d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f783b453420dee16bb4f0839e3d2485d753d2dcd317adbeecb7e510c39563f57\",\"dweb:/ipfs/QmUd4BeCaw6ZujaYvvMrCn2BNqmiP4bt4eA9rxiXY5od5E\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IRouterClient",
              "name": "router",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "feeToken",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ErrorCase"
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "chainSelector",
              "type": "uint64"
            }
          ],
          "type": "error",
          "name": "InvalidChain"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidConfig"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "router",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "InvalidRouter"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "messageId",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "MessageNotFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlySelf"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "messageId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "reason",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MessageFailed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "messageId",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MessageReceived",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "messageId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "MessageRecovered",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "messageId",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MessageSent",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "messageId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "MessageSucceeded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferRequested",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "struct Client.Any2EVMMessage",
              "name": "message",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "messageId",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "sourceChainSelector",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes",
                  "name": "sender",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "struct Client.EVMTokenAmount[]",
                  "name": "destTokenAmounts",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "ccipReceive"
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "chainSelector",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "disableChain"
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "chainSelector",
              "type": "uint64"
            },
            {
              "internalType": "bytes",
              "name": "extraArgs",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "enableChain"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRouter",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Client.Any2EVMMessage",
              "name": "message",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "messageId",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "sourceChainSelector",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes",
                  "name": "sender",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "struct Client.EVMTokenAmount[]",
                  "name": "destTokenAmounts",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "processMessage"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "messageId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "tokenReceiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "retryFailedMessage"
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "destChainSelector",
              "type": "uint64"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "s_chains",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "extraArgsBytes",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "s_feeToken",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "messageId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "s_messageContents",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "messageId",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "sourceChainSelector",
              "type": "uint64"
            },
            {
              "internalType": "bytes",
              "name": "sender",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "destChainSelector",
              "type": "uint64"
            },
            {
              "internalType": "bytes",
              "name": "receiver",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "struct Client.EVMTokenAmount[]",
              "name": "tokenAmounts",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "sendDataAndTokens"
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "destChainSelector",
              "type": "uint64"
            },
            {
              "internalType": "bytes",
              "name": "receiver",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "sendDataPayFeeToken"
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "destChainSelector",
              "type": "uint64"
            },
            {
              "internalType": "bytes",
              "name": "receiver",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "sendDataPayNative"
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "destChainSelector",
              "type": "uint64"
            },
            {
              "internalType": "bytes",
              "name": "receiver",
              "type": "bytes"
            },
            {
              "internalType": "struct Client.EVMTokenAmount[]",
              "name": "tokenAmounts",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "sendTokens"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "simRevert",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setSimRevert"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))": {
            "details": "Extremely important to ensure only router calls this.",
            "params": {
              "message": "The message to process."
            }
          },
          "getRouter()": {
            "returns": {
              "_0": "i_router address"
            }
          },
          "processMessage((bytes32,uint64,bytes,bytes,(address,uint256)[]))": {
            "details": "This example just sends the tokens to the owner of this contracts. More interesting functions could be implemented.It has to be external because of the try/catch.",
            "params": {
              "message": "The message to process."
            }
          },
          "retryFailedMessage(bytes32,address)": {
            "details": "This function is only callable by the owner."
          },
          "supportsInterface(bytes4)": {
            "details": "Should indicate whether the contract implements IAny2EVMMessageReceiver e.g. return interfaceId == type(IAny2EVMMessageReceiver).interfaceId || interfaceId == type(IERC165).interfaceId This allows CCIP to check if ccipReceive is available before calling it. If this returns false or reverts, only tokens are transferred to the receiver. If this returns true, tokens are transferred and ccipReceive is called atomically. Additionally, if the receiver address does not have code associated with it at the time of execution (EXTCODESIZE returns 0), only tokens will be transferred.",
            "params": {
              "interfaceId": "The interfaceId to check"
            },
            "returns": {
              "_0": "true if the interfaceId is supported"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "acceptOwnership()": {
            "notice": "Allows an ownership transfer to be completed by the recipient."
          },
          "ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))": {
            "notice": "The entrypoint for the CCIP router to call. This function should never revert, all errors should be handled internally in this contract."
          },
          "getRouter()": {
            "notice": "Return the current router"
          },
          "owner()": {
            "notice": "Get the current owner"
          },
          "processMessage((bytes32,uint64,bytes,bytes,(address,uint256)[]))": {
            "notice": "This function the entrypoint for this contract to process messages."
          },
          "retryFailedMessage(bytes32,address)": {
            "notice": "This function is callable by the owner when a message has failed to unblock the tokens that are associated with that message."
          },
          "sendDataAndTokens(uint64,bytes,bytes,(address,uint256)[])": {
            "notice": "sends data to receiver on dest chain. Assumes address(this) has sufficient native token."
          },
          "sendDataPayFeeToken(uint64,bytes,bytes)": {
            "notice": "sends data to receiver on dest chain. Assumes address(this) has sufficient feeToken."
          },
          "sendDataPayNative(uint64,bytes,bytes)": {
            "notice": "sends data to receiver on dest chain. Assumes address(this) has sufficient native asset."
          },
          "supportsInterface(bytes4)": {
            "notice": "IERC165 supports an interfaceId"
          },
          "transferOwnership(address)": {
            "notice": "Allows an owner to begin transferring ownership to a new address, pending."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ERC3643/=lib/ERC-3643/contracts/",
        "@chainlink/contracts-ccip/=src/v0.8/",
        "@chainlink/contracts/=node_modules/@chainlink/contracts/src/v0.6/",
        "@erc721a/=lib/ERC721A/contracts/",
        "@onchain-id/solidity/contracts/=lib/solidity/contracts/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@prb/test/=lib/prb-test/src/",
        "ERC-3643/=lib/ERC-3643/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/contracts-upgradleable/=lib/openzeppelin-contracts-upgradleable/contracts/",
        "prb-test/=lib/prb-test/src/",
        "solidity/=lib/solidity/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10000
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/v0.8/ccip/applications/DefensiveExample.sol": "DefensiveExample"
      },
      "libraries": {}
    },
    "sources": {
      "src/v0.8/ccip/applications/CCIPClientExample.sol": {
        "keccak256": "0x511f602fa658a934328b4aa95f6cf21dc451adfbc906fa5bde2056d2071d7957",
        "urls": [
          "bzz-raw://9e785559c7a55041a090f71f1c2bb79c170ade2a985b99f7eec0a895ee26d207",
          "dweb:/ipfs/QmZCXbRwZybnRnqqdiv4LmSiCgitsMNY5bRakeAj8pocaz"
        ],
        "license": "MIT"
      },
      "src/v0.8/ccip/applications/CCIPReceiver.sol": {
        "keccak256": "0xd59dbf083bfad8fe95248cac59822ade0bc7d70e50ab05e366cb35a2b2ea99f6",
        "urls": [
          "bzz-raw://20205c17fa785b37acf0547c656ed60e09e806df7472e0f608129daa028f30f7",
          "dweb:/ipfs/QmcAUurGrEdn5pE66sVQek4M7EiGkdoKt38qThFpxcpGLB"
        ],
        "license": "MIT"
      },
      "src/v0.8/ccip/applications/DefensiveExample.sol": {
        "keccak256": "0x75434e8dd0c88c1ff63409e75ccb276cccc6bdf5dbdad2617510d336f505cf70",
        "urls": [
          "bzz-raw://397196fb35cf69e389aada38d0f65709cb480c3afc931a95c66dda42db2408ae",
          "dweb:/ipfs/QmekwAbrTs7CLhmiWfx33QYhXDoBtUXPbCFe7Qc1c6wmXZ"
        ],
        "license": "MIT"
      },
      "src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol": {
        "keccak256": "0xd2a05a4f58a453cbf8cfa6aa78f58cb8e42091b3a025f711a0aa51f584e16b48",
        "urls": [
          "bzz-raw://e3bb4ca50612b0150a29b9ea7c82f6228914ff54716584541bad5c0259e8fa33",
          "dweb:/ipfs/QmTnqhNtBD9bUmqVaR4YHkWrBUdSGHV3DXAgrTM193PGkH"
        ],
        "license": "MIT"
      },
      "src/v0.8/ccip/interfaces/IRouterClient.sol": {
        "keccak256": "0x7f2fdd93e516b7476c6fab099f6806adf5ceaf399b0cc415f6b9ede890f2379b",
        "urls": [
          "bzz-raw://14e2547e54a0e225d1aa654d49ad47a169f966b985456612af449eec610189ea",
          "dweb:/ipfs/QmcWVnkJ6TKcUR4koDQQGiYMEt7vJ6WG9XcrwbPiPDHoP9"
        ],
        "license": "MIT"
      },
      "src/v0.8/ccip/libraries/Client.sol": {
        "keccak256": "0x8af3ac1085c87342373772fb1a0107c7b90258e6bfed318ab2a601a14477e679",
        "urls": [
          "bzz-raw://14395fefc8310c9a355262359c8f51036f83c004982fb600164c2a007629f81e",
          "dweb:/ipfs/QmeCLr8a5bDVyLQm8v947ULgV4CZmUeQPjVyWixzieBD5o"
        ],
        "license": "MIT"
      },
      "src/v0.8/shared/access/ConfirmedOwner.sol": {
        "keccak256": "0x99d0b0786fe368970009c703f2249bfbc56340ddf1a28b60d2915bb58c34cd72",
        "urls": [
          "bzz-raw://af0371c1af45db651823b9a3d5af761b08243c78f105166342eee28de356c8dd",
          "dweb:/ipfs/QmPnC9qNDKwJFd5unwLb9pxjrutoe8MWjm5EXHTxq2kJ4x"
        ],
        "license": "MIT"
      },
      "src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol": {
        "keccak256": "0x215529a99534a40e6257ef2282a91ea4a95b66debc3997866406907622efb405",
        "urls": [
          "bzz-raw://ecc56a2cddb1ba6225ca0cffb07fdf6e24bcc4234cc87710c42a59c0a21ae395",
          "dweb:/ipfs/QmSpW4vkPHeRNZ14beMEk2LEtqY5JQTueNJC4sCT8JaSoc"
        ],
        "license": "MIT"
      },
      "src/v0.8/shared/access/OwnerIsCreator.sol": {
        "keccak256": "0x895af02d6a3df2930bbb6ec1f2d68118b492ca6e710ba0c34fcb6b574a0906aa",
        "urls": [
          "bzz-raw://c4c69fab5eea1c0448f856a51d7e5736454fe5cc083d36c60bf3ee23bb3d0e8e",
          "dweb:/ipfs/QmP4fYQ9k7xeZms6cwnqnQuuAkRkeE2TWewyvCD8Mrc2DZ"
        ],
        "license": "MIT"
      },
      "src/v0.8/shared/interfaces/IOwnable.sol": {
        "keccak256": "0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767",
        "urls": [
          "bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921",
          "dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q"
        ],
        "license": "MIT"
      },
      "src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x527e858729af8197f6c8f99554d32bfc4f5a72b15975489c94809363d7ae522f",
        "urls": [
          "bzz-raw://6828dfa867eaff18f383aad4ca4b5aaedb93109023d74aaf418fee6c06e556c2",
          "dweb:/ipfs/QmXSQ9WnaJ6Ba9gvKvgNxDY7sa7ATJ9V55uwGSGCpBuJKu"
        ],
        "license": "MIT"
      },
      "src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0x28d267ba89cbaca4a86577add59f1a18842ca6e7d80a05f3dbf52127928a5e2c",
        "urls": [
          "bzz-raw://67a26777e88ae78952713f4479ca3126db804dc9ce1a85f079ec067393a6275d",
          "dweb:/ipfs/QmNLxBkkA6os8W9vUeCsjcFsMkGhtqAZrGjPuoACTqVhbh"
        ],
        "license": "MIT"
      },
      "src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x19d64e8f5fa895ab2625917111fd9f316d4f9314239f0712fd6dc2f5bff9d0c9",
        "urls": [
          "bzz-raw://14de158ff9e64ebeac381bba59fe3500b48853063cfb27343090a3f710795fee",
          "dweb:/ipfs/QmQJE5SfDfgy8aKENnsjW4t9P4bmTSnujotFmnXnrwpfzQ"
        ],
        "license": "MIT"
      },
      "src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/utils/Address.sol": {
        "keccak256": "0x172a09a55d730f20a9bb309086a4ad06b17c612151f58bab2b44efe78d583d4e",
        "urls": [
          "bzz-raw://1f812456ddd112f09606bfc5965c6e643558d740264273017ad556122502b4e2",
          "dweb:/ipfs/QmdWE4wncanz9Lhu5ESgSo14jAR74Ss5puCM5zUGonATLw"
        ],
        "license": "MIT"
      },
      "src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0xa36a31b4bb17fad88d023474893b3b895fa421650543b1ce5aefc78efbd43244",
        "urls": [
          "bzz-raw://0f235b9175d95111f301d729566e214c32559e55a2b0579c947484748e20679d",
          "dweb:/ipfs/QmSsNBuPejy1wNe2u3JSt2p9wFhrjvBjFrnAaNe1nDNkEA"
        ],
        "license": "MIT"
      },
      "src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/utils/structs/EnumerableMap.sol": {
        "keccak256": "0x68fb09424d69c771ebaeb5a425bcbdbb0725a236c0d83d517992b6f44bd7198d",
        "urls": [
          "bzz-raw://c3a036ba98e5d58911511b85abd620e1d8de7d203ab2a48b2a3d827710847df4",
          "dweb:/ipfs/QmNWrWgkfsk1AoLpWKDkbHu5CZmzEcGzrT74Ug46phm4p5"
        ],
        "license": "MIT"
      },
      "src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x9ec0d82ee53d4137be44f1f38f9a82d0d3a2027b3b8b226a5a90e4ee76e926d6",
        "urls": [
          "bzz-raw://f783b453420dee16bb4f0839e3d2485d753d2dcd317adbeecb7e510c39563f57",
          "dweb:/ipfs/QmUd4BeCaw6ZujaYvvMrCn2BNqmiP4bt4eA9rxiXY5od5E"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/v0.8/ccip/applications/DefensiveExample.sol",
    "id": 70298,
    "exportedSymbols": {
      "CCIPClientExample": [
        69887
      ],
      "Client": [
        71303
      ],
      "DefensiveExample": [
        70297
      ],
      "EnumerableMap": [
        143156
      ],
      "IERC20": [
        137559
      ],
      "IRouterClient": [
        71131
      ],
      "SafeERC20": [
        138117
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:4632:106",
    "nodes": [
      {
        "id": 70009,
        "nodeType": "PragmaDirective",
        "src": "32:23:106",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 70011,
        "nodeType": "ImportDirective",
        "src": "57:62:106",
        "nodes": [],
        "absolutePath": "src/v0.8/ccip/interfaces/IRouterClient.sol",
        "file": "../interfaces/IRouterClient.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 70298,
        "sourceUnit": 71132,
        "symbolAliases": [
          {
            "foreign": {
              "id": 70010,
              "name": "IRouterClient",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 71131,
              "src": "65:13:106",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 70013,
        "nodeType": "ImportDirective",
        "src": "121:47:106",
        "nodes": [],
        "absolutePath": "src/v0.8/ccip/libraries/Client.sol",
        "file": "../libraries/Client.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 70298,
        "sourceUnit": 71304,
        "symbolAliases": [
          {
            "foreign": {
              "id": 70012,
              "name": "Client",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 71303,
              "src": "129:6:106",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 70015,
        "nodeType": "ImportDirective",
        "src": "169:58:106",
        "nodes": [],
        "absolutePath": "src/v0.8/ccip/applications/CCIPClientExample.sol",
        "file": "./CCIPClientExample.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 70298,
        "sourceUnit": 69888,
        "symbolAliases": [
          {
            "foreign": {
              "id": 70014,
              "name": "CCIPClientExample",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 69887,
              "src": "177:17:106",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 70017,
        "nodeType": "ImportDirective",
        "src": "229:98:106",
        "nodes": [],
        "absolutePath": "src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/token/ERC20/IERC20.sol",
        "file": "../../vendor/openzeppelin-solidity/v4.8.0/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 70298,
        "sourceUnit": 137560,
        "symbolAliases": [
          {
            "foreign": {
              "id": 70016,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 137559,
              "src": "237:6:106",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 70019,
        "nodeType": "ImportDirective",
        "src": "328:110:106",
        "nodes": [],
        "absolutePath": "src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "../../vendor/openzeppelin-solidity/v4.8.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 70298,
        "sourceUnit": 138118,
        "symbolAliases": [
          {
            "foreign": {
              "id": 70018,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 138117,
              "src": "336:9:106",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 70021,
        "nodeType": "ImportDirective",
        "src": "439:114:106",
        "nodes": [],
        "absolutePath": "src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/utils/structs/EnumerableMap.sol",
        "file": "../../vendor/openzeppelin-solidity/v4.8.0/contracts/utils/structs/EnumerableMap.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 70298,
        "sourceUnit": 143157,
        "symbolAliases": [
          {
            "foreign": {
              "id": 70020,
              "name": "EnumerableMap",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 143156,
              "src": "447:13:106",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 70297,
        "nodeType": "ContractDefinition",
        "src": "555:4108:106",
        "nodes": [
          {
            "id": 70027,
            "nodeType": "UsingForDirective",
            "src": "606:55:106",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 70024,
              "name": "EnumerableMap",
              "nameLocations": [
                "612:13:106"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 143156,
              "src": "612:13:106"
            },
            "typeName": {
              "id": 70026,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 70025,
                "name": "EnumerableMap.Bytes32ToUintMap",
                "nameLocations": [
                  "630:13:106",
                  "644:16:106"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 142973,
                "src": "630:30:106"
              },
              "referencedDeclaration": 142973,
              "src": "630:30:106",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Bytes32ToUintMap_$142973_storage_ptr",
                "typeString": "struct EnumerableMap.Bytes32ToUintMap"
              }
            }
          },
          {
            "id": 70031,
            "nodeType": "UsingForDirective",
            "src": "664:27:106",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 70028,
              "name": "SafeERC20",
              "nameLocations": [
                "670:9:106"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 138117,
              "src": "670:9:106"
            },
            "typeName": {
              "id": 70030,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 70029,
                "name": "IERC20",
                "nameLocations": [
                  "684:6:106"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 137559,
                "src": "684:6:106"
              },
              "referencedDeclaration": 137559,
              "src": "684:6:106",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$137559",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 70033,
            "nodeType": "ErrorDefinition",
            "src": "695:17:106",
            "nodes": [],
            "errorSelector": "14d4a4e8",
            "name": "OnlySelf",
            "nameLocation": "701:8:106",
            "parameters": {
              "id": 70032,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "709:2:106"
            }
          },
          {
            "id": 70035,
            "nodeType": "ErrorDefinition",
            "src": "715:18:106",
            "nodes": [],
            "errorSelector": "79f79e0b",
            "name": "ErrorCase",
            "nameLocation": "721:9:106",
            "parameters": {
              "id": 70034,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "730:2:106"
            }
          },
          {
            "id": 70039,
            "nodeType": "ErrorDefinition",
            "src": "736:42:106",
            "nodes": [],
            "errorSelector": "b6e78260",
            "name": "MessageNotFailed",
            "nameLocation": "742:16:106",
            "parameters": {
              "id": 70038,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70037,
                  "mutability": "mutable",
                  "name": "messageId",
                  "nameLocation": "767:9:106",
                  "nodeType": "VariableDeclaration",
                  "scope": 70039,
                  "src": "759:17:106",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 70036,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "759:7:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "758:19:106"
            }
          },
          {
            "id": 70045,
            "nodeType": "EventDefinition",
            "src": "782:61:106",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "55bc02a9ef6f146737edeeb425738006f67f077e7138de3bf84a15bde1a5b56f",
            "name": "MessageFailed",
            "nameLocation": "788:13:106",
            "parameters": {
              "id": 70044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70041,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "messageId",
                  "nameLocation": "818:9:106",
                  "nodeType": "VariableDeclaration",
                  "scope": 70045,
                  "src": "802:25:106",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 70040,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "802:7:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70043,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "reason",
                  "nameLocation": "835:6:106",
                  "nodeType": "VariableDeclaration",
                  "scope": 70045,
                  "src": "829:12:106",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 70042,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "829:5:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "801:41:106"
            }
          },
          {
            "id": 70049,
            "nodeType": "EventDefinition",
            "src": "846:50:106",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "df6958669026659bac75ba986685e11a7d271284989f565f2802522663e9a70f",
            "name": "MessageSucceeded",
            "nameLocation": "852:16:106",
            "parameters": {
              "id": 70048,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70047,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "messageId",
                  "nameLocation": "885:9:106",
                  "nodeType": "VariableDeclaration",
                  "scope": 70049,
                  "src": "869:25:106",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 70046,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "869:7:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "868:27:106"
            }
          },
          {
            "id": 70053,
            "nodeType": "EventDefinition",
            "src": "899:50:106",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "ef3bf8c64bc480286c4f3503b870ceb23e648d2d902e31fb7bb46680da6de8ad",
            "name": "MessageRecovered",
            "nameLocation": "905:16:106",
            "parameters": {
              "id": 70052,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70051,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "messageId",
                  "nameLocation": "938:9:106",
                  "nodeType": "VariableDeclaration",
                  "scope": 70053,
                  "src": "922:25:106",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 70050,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "922:7:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "921:27:106"
            }
          },
          {
            "id": 70056,
            "nodeType": "EnumDefinition",
            "src": "1017:158:106",
            "nodes": [],
            "canonicalName": "DefensiveExample.ErrorCode",
            "members": [
              {
                "id": 70054,
                "name": "RESOLVED",
                "nameLocation": "1102:8:106",
                "nodeType": "EnumValue",
                "src": "1102:8:106"
              },
              {
                "id": 70055,
                "name": "BASIC",
                "nameLocation": "1166:5:106",
                "nodeType": "EnumValue",
                "src": "1166:5:106"
              }
            ],
            "name": "ErrorCode",
            "nameLocation": "1022:9:106"
          },
          {
            "id": 70061,
            "nodeType": "VariableDeclaration",
            "src": "1241:85:106",
            "nodes": [],
            "constant": false,
            "functionSelector": "d0d1fc3d",
            "mutability": "mutable",
            "name": "s_messageContents",
            "nameLocation": "1309:17:106",
            "scope": 70297,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Any2EVMMessage_$71268_storage_$",
              "typeString": "mapping(bytes32 => struct Client.Any2EVMMessage)"
            },
            "typeName": {
              "id": 70060,
              "keyName": "messageId",
              "keyNameLocation": "1257:9:106",
              "keyType": {
                "id": 70057,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1249:7:106",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1241:60:106",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Any2EVMMessage_$71268_storage_$",
                "typeString": "mapping(bytes32 => struct Client.Any2EVMMessage)"
              },
              "valueName": "contents",
              "valueNameLocation": "1292:8:106",
              "valueType": {
                "id": 70059,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 70058,
                  "name": "Client.Any2EVMMessage",
                  "nameLocations": [
                    "1270:6:106",
                    "1277:14:106"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 71268,
                  "src": "1270:21:106"
                },
                "referencedDeclaration": 71268,
                "src": "1270:21:106",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Any2EVMMessage_$71268_storage_ptr",
                  "typeString": "struct Client.Any2EVMMessage"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 70064,
            "nodeType": "VariableDeclaration",
            "src": "1378:56:106",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "s_failedMessages",
            "nameLocation": "1418:16:106",
            "scope": 70297,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Bytes32ToUintMap_$142973_storage",
              "typeString": "struct EnumerableMap.Bytes32ToUintMap"
            },
            "typeName": {
              "id": 70063,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 70062,
                "name": "EnumerableMap.Bytes32ToUintMap",
                "nameLocations": [
                  "1378:13:106",
                  "1392:16:106"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 142973,
                "src": "1378:30:106"
              },
              "referencedDeclaration": 142973,
              "src": "1378:30:106",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Bytes32ToUintMap_$142973_storage_ptr",
                "typeString": "struct EnumerableMap.Bytes32ToUintMap"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 70067,
            "nodeType": "VariableDeclaration",
            "src": "1510:33:106",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "s_simRevert",
            "nameLocation": "1524:11:106",
            "scope": 70297,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 70065,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1510:4:106",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 70066,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1538:5:106",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "id": 70081,
            "nodeType": "FunctionDefinition",
            "src": "1548:89:106",
            "nodes": [],
            "body": {
              "id": 70080,
              "nodeType": "Block",
              "src": "1635:2:106",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 70076,
                    "name": "router",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 70070,
                    "src": "1617:6:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRouterClient_$71131",
                      "typeString": "contract IRouterClient"
                    }
                  },
                  {
                    "id": 70077,
                    "name": "feeToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 70073,
                    "src": "1625:8:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$137559",
                      "typeString": "contract IERC20"
                    }
                  }
                ],
                "id": 70078,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 70075,
                  "name": "CCIPClientExample",
                  "nameLocations": [
                    "1599:17:106"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 69887,
                  "src": "1599:17:106"
                },
                "nodeType": "ModifierInvocation",
                "src": "1599:35:106"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 70074,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70070,
                  "mutability": "mutable",
                  "name": "router",
                  "nameLocation": "1574:6:106",
                  "nodeType": "VariableDeclaration",
                  "scope": 70081,
                  "src": "1560:20:106",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IRouterClient_$71131",
                    "typeString": "contract IRouterClient"
                  },
                  "typeName": {
                    "id": 70069,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 70068,
                      "name": "IRouterClient",
                      "nameLocations": [
                        "1560:13:106"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 71131,
                      "src": "1560:13:106"
                    },
                    "referencedDeclaration": 71131,
                    "src": "1560:13:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRouterClient_$71131",
                      "typeString": "contract IRouterClient"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70073,
                  "mutability": "mutable",
                  "name": "feeToken",
                  "nameLocation": "1589:8:106",
                  "nodeType": "VariableDeclaration",
                  "scope": 70081,
                  "src": "1582:15:106",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$137559",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 70072,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 70071,
                      "name": "IERC20",
                      "nameLocations": [
                        "1582:6:106"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 137559,
                      "src": "1582:6:106"
                    },
                    "referencedDeclaration": 137559,
                    "src": "1582:6:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$137559",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1559:39:106"
            },
            "returnParameters": {
              "id": 70079,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1635:0:106"
            },
            "scope": 70297,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 70139,
            "nodeType": "FunctionDefinition",
            "src": "1908:720:106",
            "nodes": [],
            "body": {
              "id": 70138,
              "nodeType": "Block",
              "src": "2046:582:106",
              "nodes": [],
              "statements": [
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 70099,
                        "nodeType": "Block",
                        "src": "2085:2:106",
                        "statements": []
                      },
                      "errorName": "",
                      "id": 70100,
                      "nodeType": "TryCatchClause",
                      "src": "2085:2:106"
                    },
                    {
                      "block": {
                        "id": 70130,
                        "nodeType": "Block",
                        "src": "2113:465:106",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 70107,
                                    "name": "message",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 70085,
                                    "src": "2254:7:106",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Any2EVMMessage_$71268_calldata_ptr",
                                      "typeString": "struct Client.Any2EVMMessage calldata"
                                    }
                                  },
                                  "id": 70108,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2262:9:106",
                                  "memberName": "messageId",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 71257,
                                  "src": "2254:17:106",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 70111,
                                        "name": "ErrorCode",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 70056,
                                        "src": "2281:9:106",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_enum$_ErrorCode_$70056_$",
                                          "typeString": "type(enum DefensiveExample.ErrorCode)"
                                        }
                                      },
                                      "id": 70112,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "2291:5:106",
                                      "memberName": "BASIC",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 70055,
                                      "src": "2281:15:106",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_ErrorCode_$70056",
                                        "typeString": "enum DefensiveExample.ErrorCode"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_enum$_ErrorCode_$70056",
                                        "typeString": "enum DefensiveExample.ErrorCode"
                                      }
                                    ],
                                    "id": 70110,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2273:7:106",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 70109,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2273:7:106",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 70113,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2273:24:106",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 70104,
                                  "name": "s_failedMessages",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 70064,
                                  "src": "2233:16:106",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Bytes32ToUintMap_$142973_storage",
                                    "typeString": "struct EnumerableMap.Bytes32ToUintMap storage ref"
                                  }
                                },
                                "id": 70106,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2250:3:106",
                                "memberName": "set",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 142997,
                                "src": "2233:20:106",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32ToUintMap_$142973_storage_ptr_$_t_bytes32_$_t_uint256_$returns$_t_bool_$attached_to$_t_struct$_Bytes32ToUintMap_$142973_storage_ptr_$",
                                  "typeString": "function (struct EnumerableMap.Bytes32ToUintMap storage pointer,bytes32,uint256) returns (bool)"
                                }
                              },
                              "id": 70114,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2233:65:106",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 70115,
                            "nodeType": "ExpressionStatement",
                            "src": "2233:65:106"
                          },
                          {
                            "expression": {
                              "id": 70121,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "baseExpression": {
                                  "id": 70116,
                                  "name": "s_messageContents",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 70061,
                                  "src": "2306:17:106",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Any2EVMMessage_$71268_storage_$",
                                    "typeString": "mapping(bytes32 => struct Client.Any2EVMMessage storage ref)"
                                  }
                                },
                                "id": 70119,
                                "indexExpression": {
                                  "expression": {
                                    "id": 70117,
                                    "name": "message",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 70085,
                                    "src": "2324:7:106",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Any2EVMMessage_$71268_calldata_ptr",
                                      "typeString": "struct Client.Any2EVMMessage calldata"
                                    }
                                  },
                                  "id": 70118,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2332:9:106",
                                  "memberName": "messageId",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 71257,
                                  "src": "2324:17:106",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "2306:36:106",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Any2EVMMessage_$71268_storage",
                                  "typeString": "struct Client.Any2EVMMessage storage ref"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "id": 70120,
                                "name": "message",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70085,
                                "src": "2345:7:106",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Any2EVMMessage_$71268_calldata_ptr",
                                  "typeString": "struct Client.Any2EVMMessage calldata"
                                }
                              },
                              "src": "2306:46:106",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Any2EVMMessage_$71268_storage",
                                "typeString": "struct Client.Any2EVMMessage storage ref"
                              }
                            },
                            "id": 70122,
                            "nodeType": "ExpressionStatement",
                            "src": "2306:46:106"
                          },
                          {
                            "eventCall": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 70124,
                                    "name": "message",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 70085,
                                    "src": "2534:7:106",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Any2EVMMessage_$71268_calldata_ptr",
                                      "typeString": "struct Client.Any2EVMMessage calldata"
                                    }
                                  },
                                  "id": 70125,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2542:9:106",
                                  "memberName": "messageId",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 71257,
                                  "src": "2534:17:106",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 70126,
                                  "name": "err",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 70102,
                                  "src": "2553:3:106",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 70123,
                                "name": "MessageFailed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70045,
                                "src": "2520:13:106",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                                  "typeString": "function (bytes32,bytes memory)"
                                }
                              },
                              "id": 70127,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2520:37:106",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 70128,
                            "nodeType": "EmitStatement",
                            "src": "2515:42:106"
                          },
                          {
                            "functionReturnParameters": 70094,
                            "id": 70129,
                            "nodeType": "Return",
                            "src": "2565:7:106"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 70131,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 70103,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 70102,
                            "mutability": "mutable",
                            "name": "err",
                            "nameLocation": "2108:3:106",
                            "nodeType": "VariableDeclaration",
                            "scope": 70131,
                            "src": "2095:16:106",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 70101,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "2095:5:106",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "2094:18:106"
                      },
                      "src": "2088:490:106"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "id": 70097,
                        "name": "message",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70085,
                        "src": "2076:7:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Any2EVMMessage_$71268_calldata_ptr",
                          "typeString": "struct Client.Any2EVMMessage calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Any2EVMMessage_$71268_calldata_ptr",
                          "typeString": "struct Client.Any2EVMMessage calldata"
                        }
                      ],
                      "expression": {
                        "id": 70095,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "2056:4:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DefensiveExample_$70297",
                          "typeString": "contract DefensiveExample"
                        }
                      },
                      "id": 70096,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2061:14:106",
                      "memberName": "processMessage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70189,
                      "src": "2056:19:106",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_Any2EVMMessage_$71268_memory_ptr_$returns$__$",
                        "typeString": "function (struct Client.Any2EVMMessage memory) external"
                      }
                    },
                    "id": 70098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2056:28:106",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 70132,
                  "nodeType": "TryStatement",
                  "src": "2052:526:106"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 70134,
                          "name": "message",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70085,
                          "src": "2605:7:106",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Any2EVMMessage_$71268_calldata_ptr",
                            "typeString": "struct Client.Any2EVMMessage calldata"
                          }
                        },
                        "id": 70135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2613:9:106",
                        "memberName": "messageId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 71257,
                        "src": "2605:17:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 70133,
                      "name": "MessageSucceeded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70049,
                      "src": "2588:16:106",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 70136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2588:35:106",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 70137,
                  "nodeType": "EmitStatement",
                  "src": "2583:40:106"
                }
              ]
            },
            "baseFunctions": [
              69534
            ],
            "documentation": {
              "id": 70082,
              "nodeType": "StructuredDocumentation",
              "src": "1641:264:106",
              "text": "@notice The entrypoint for the CCIP router to call. This function should\n never revert, all errors should be handled internally in this contract.\n @param message The message to process.\n @dev Extremely important to ensure only router calls this."
            },
            "functionSelector": "85572ffb",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 70089,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 70088,
                  "name": "onlyRouter",
                  "nameLocations": [
                    "1995:10:106"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 70006,
                  "src": "1995:10:106"
                },
                "nodeType": "ModifierInvocation",
                "src": "1995:10:106"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 70091,
                      "name": "message",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70085,
                      "src": "2017:7:106",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Any2EVMMessage_$71268_calldata_ptr",
                        "typeString": "struct Client.Any2EVMMessage calldata"
                      }
                    },
                    "id": 70092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2025:19:106",
                    "memberName": "sourceChainSelector",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 71259,
                    "src": "2017:27:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  }
                ],
                "id": 70093,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 70090,
                  "name": "validChain",
                  "nameLocations": [
                    "2006:10:106"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 69886,
                  "src": "2006:10:106"
                },
                "nodeType": "ModifierInvocation",
                "src": "2006:39:106"
              }
            ],
            "name": "ccipReceive",
            "nameLocation": "1917:11:106",
            "overrides": {
              "id": 70087,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1986:8:106"
            },
            "parameters": {
              "id": 70086,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70085,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "1965:7:106",
                  "nodeType": "VariableDeclaration",
                  "scope": 70139,
                  "src": "1934:38:106",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Any2EVMMessage_$71268_calldata_ptr",
                    "typeString": "struct Client.Any2EVMMessage"
                  },
                  "typeName": {
                    "id": 70084,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 70083,
                      "name": "Client.Any2EVMMessage",
                      "nameLocations": [
                        "1934:6:106",
                        "1941:14:106"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 71268,
                      "src": "1934:21:106"
                    },
                    "referencedDeclaration": 71268,
                    "src": "1934:21:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Any2EVMMessage_$71268_storage_ptr",
                      "typeString": "struct Client.Any2EVMMessage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1928:48:106"
            },
            "returnParameters": {
              "id": 70094,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2046:0:106"
            },
            "scope": 70297,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 70189,
            "nodeType": "FunctionDefinition",
            "src": "2951:456:106",
            "nodes": [],
            "body": {
              "id": 70188,
              "nodeType": "Block",
              "src": "3081:326:106",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 70152,
                    "name": "s_simRevert",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 70067,
                    "src": "3116:11:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 70156,
                  "nodeType": "IfStatement",
                  "src": "3112:35:106",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 70153,
                        "name": "ErrorCase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70035,
                        "src": "3136:9:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 70154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3136:11:106",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 70155,
                    "nodeType": "RevertStatement",
                    "src": "3129:18:106"
                  }
                },
                {
                  "body": {
                    "id": 70186,
                    "nodeType": "Block",
                    "src": "3248:114:106",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 70177,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 122387,
                                "src": "3311:5:106",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 70178,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3311:7:106",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 70179,
                                    "name": "message",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 70143,
                                    "src": "3320:7:106",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Any2EVMMessage_$71268_calldata_ptr",
                                      "typeString": "struct Client.Any2EVMMessage calldata"
                                    }
                                  },
                                  "id": 70180,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3328:16:106",
                                  "memberName": "destTokenAmounts",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 71267,
                                  "src": "3320:24:106",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$71255_calldata_ptr_$dyn_calldata_ptr",
                                    "typeString": "struct Client.EVMTokenAmount calldata[] calldata"
                                  }
                                },
                                "id": 70182,
                                "indexExpression": {
                                  "id": 70181,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 70158,
                                  "src": "3345:1:106",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3320:27:106",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_EVMTokenAmount_$71255_calldata_ptr",
                                  "typeString": "struct Client.EVMTokenAmount calldata"
                                }
                              },
                              "id": 70183,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3348:6:106",
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 71254,
                              "src": "3320:34:106",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "baseExpression": {
                                      "expression": {
                                        "id": 70170,
                                        "name": "message",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 70143,
                                        "src": "3263:7:106",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Any2EVMMessage_$71268_calldata_ptr",
                                          "typeString": "struct Client.Any2EVMMessage calldata"
                                        }
                                      },
                                      "id": 70171,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "3271:16:106",
                                      "memberName": "destTokenAmounts",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 71267,
                                      "src": "3263:24:106",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$71255_calldata_ptr_$dyn_calldata_ptr",
                                        "typeString": "struct Client.EVMTokenAmount calldata[] calldata"
                                      }
                                    },
                                    "id": 70173,
                                    "indexExpression": {
                                      "id": 70172,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 70158,
                                      "src": "3288:1:106",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3263:27:106",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_EVMTokenAmount_$71255_calldata_ptr",
                                      "typeString": "struct Client.EVMTokenAmount calldata"
                                    }
                                  },
                                  "id": 70174,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3291:5:106",
                                  "memberName": "token",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 71252,
                                  "src": "3263:33:106",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 70169,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 137559,
                                "src": "3256:6:106",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$137559_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 70175,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3256:41:106",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$137559",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 70176,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3298:12:106",
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 137868,
                            "src": "3256:54:106",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$137559_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$137559_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 70184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3256:99:106",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 70185,
                        "nodeType": "ExpressionStatement",
                        "src": "3256:99:106"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 70165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 70161,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70158,
                      "src": "3206:1:106",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 70162,
                          "name": "message",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70143,
                          "src": "3210:7:106",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Any2EVMMessage_$71268_calldata_ptr",
                            "typeString": "struct Client.Any2EVMMessage calldata"
                          }
                        },
                        "id": 70163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3218:16:106",
                        "memberName": "destTokenAmounts",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 71267,
                        "src": "3210:24:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$71255_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct Client.EVMTokenAmount calldata[] calldata"
                        }
                      },
                      "id": 70164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3235:6:106",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3210:31:106",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3206:35:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 70187,
                  "initializationExpression": {
                    "assignments": [
                      70158
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 70158,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3199:1:106",
                        "nodeType": "VariableDeclaration",
                        "scope": 70187,
                        "src": "3191:9:106",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 70157,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3191:7:106",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 70160,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 70159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3203:1:106",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3191:13:106"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 70167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "3243:3:106",
                      "subExpression": {
                        "id": 70166,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70158,
                        "src": "3245:1:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 70168,
                    "nodeType": "ExpressionStatement",
                    "src": "3243:3:106"
                  },
                  "nodeType": "ForStatement",
                  "src": "3186:176:106"
                }
              ]
            },
            "documentation": {
              "id": 70140,
              "nodeType": "StructuredDocumentation",
              "src": "2632:316:106",
              "text": "@notice This function the entrypoint for this contract to process messages.\n @param message The message to process.\n @dev This example just sends the tokens to the owner of this contracts. More\n interesting functions could be implemented.\n @dev It has to be external because of the try/catch."
            },
            "functionSelector": "cf6730f8",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 70146,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 70145,
                  "name": "onlySelf",
                  "nameLocations": [
                    "3032:8:106"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 70296,
                  "src": "3032:8:106"
                },
                "nodeType": "ModifierInvocation",
                "src": "3032:8:106"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 70148,
                      "name": "message",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70143,
                      "src": "3052:7:106",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Any2EVMMessage_$71268_calldata_ptr",
                        "typeString": "struct Client.Any2EVMMessage calldata"
                      }
                    },
                    "id": 70149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "3060:19:106",
                    "memberName": "sourceChainSelector",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 71259,
                    "src": "3052:27:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  }
                ],
                "id": 70150,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 70147,
                  "name": "validChain",
                  "nameLocations": [
                    "3041:10:106"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 69886,
                  "src": "3041:10:106"
                },
                "nodeType": "ModifierInvocation",
                "src": "3041:39:106"
              }
            ],
            "name": "processMessage",
            "nameLocation": "2960:14:106",
            "parameters": {
              "id": 70144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70143,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "3011:7:106",
                  "nodeType": "VariableDeclaration",
                  "scope": 70189,
                  "src": "2980:38:106",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Any2EVMMessage_$71268_calldata_ptr",
                    "typeString": "struct Client.Any2EVMMessage"
                  },
                  "typeName": {
                    "id": 70142,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 70141,
                      "name": "Client.Any2EVMMessage",
                      "nameLocations": [
                        "2980:6:106",
                        "2987:14:106"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 71268,
                      "src": "2980:21:106"
                    },
                    "referencedDeclaration": 71268,
                    "src": "2980:21:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Any2EVMMessage_$71268_storage_ptr",
                      "typeString": "struct Client.Any2EVMMessage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2974:48:106"
            },
            "returnParameters": {
              "id": 70151,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3081:0:106"
            },
            "scope": 70297,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 70269,
            "nodeType": "FunctionDefinition",
            "src": "3613:812:106",
            "nodes": [],
            "body": {
              "id": 70268,
              "nodeType": "Block",
              "src": "3702:723:106",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 70208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 70201,
                          "name": "messageId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70192,
                          "src": "3733:9:106",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 70199,
                          "name": "s_failedMessages",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70064,
                          "src": "3712:16:106",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Bytes32ToUintMap_$142973_storage",
                            "typeString": "struct EnumerableMap.Bytes32ToUintMap storage ref"
                          }
                        },
                        "id": 70200,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3729:3:106",
                        "memberName": "get",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 143131,
                        "src": "3712:20:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToUintMap_$142973_storage_ptr_$_t_bytes32_$returns$_t_uint256_$attached_to$_t_struct$_Bytes32ToUintMap_$142973_storage_ptr_$",
                          "typeString": "function (struct EnumerableMap.Bytes32ToUintMap storage pointer,bytes32) view returns (uint256)"
                        }
                      },
                      "id": 70202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3712:31:106",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 70205,
                            "name": "ErrorCode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70056,
                            "src": "3755:9:106",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_ErrorCode_$70056_$",
                              "typeString": "type(enum DefensiveExample.ErrorCode)"
                            }
                          },
                          "id": 70206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3765:5:106",
                          "memberName": "BASIC",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 70055,
                          "src": "3755:15:106",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ErrorCode_$70056",
                            "typeString": "enum DefensiveExample.ErrorCode"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_ErrorCode_$70056",
                            "typeString": "enum DefensiveExample.ErrorCode"
                          }
                        ],
                        "id": 70204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3747:7:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 70203,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3747:7:106",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 70207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3747:24:106",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3712:59:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 70213,
                  "nodeType": "IfStatement",
                  "src": "3708:99:106",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "id": 70210,
                          "name": "messageId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70192,
                          "src": "3797:9:106",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 70209,
                        "name": "MessageNotFailed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70039,
                        "src": "3780:16:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
                          "typeString": "function (bytes32) pure"
                        }
                      },
                      "id": 70211,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3780:27:106",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 70212,
                    "nodeType": "RevertStatement",
                    "src": "3773:34:106"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 70217,
                        "name": "messageId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70192,
                        "src": "3942:9:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 70220,
                              "name": "ErrorCode",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 70056,
                              "src": "3961:9:106",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ErrorCode_$70056_$",
                                "typeString": "type(enum DefensiveExample.ErrorCode)"
                              }
                            },
                            "id": 70221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3971:8:106",
                            "memberName": "RESOLVED",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 70054,
                            "src": "3961:18:106",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ErrorCode_$70056",
                              "typeString": "enum DefensiveExample.ErrorCode"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_ErrorCode_$70056",
                              "typeString": "enum DefensiveExample.ErrorCode"
                            }
                          ],
                          "id": 70219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3953:7:106",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 70218,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3953:7:106",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 70222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3953:27:106",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 70214,
                        "name": "s_failedMessages",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70064,
                        "src": "3921:16:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bytes32ToUintMap_$142973_storage",
                          "typeString": "struct EnumerableMap.Bytes32ToUintMap storage ref"
                        }
                      },
                      "id": 70216,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3938:3:106",
                      "memberName": "set",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 142997,
                      "src": "3921:20:106",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32ToUintMap_$142973_storage_ptr_$_t_bytes32_$_t_uint256_$returns$_t_bool_$attached_to$_t_struct$_Bytes32ToUintMap_$142973_storage_ptr_$",
                        "typeString": "function (struct EnumerableMap.Bytes32ToUintMap storage pointer,bytes32,uint256) returns (bool)"
                      }
                    },
                    "id": 70223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3921:60:106",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 70224,
                  "nodeType": "ExpressionStatement",
                  "src": "3921:60:106"
                },
                {
                  "assignments": [
                    70229
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 70229,
                      "mutability": "mutable",
                      "name": "message",
                      "nameLocation": "4100:7:106",
                      "nodeType": "VariableDeclaration",
                      "scope": 70268,
                      "src": "4071:36:106",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Any2EVMMessage_$71268_memory_ptr",
                        "typeString": "struct Client.Any2EVMMessage"
                      },
                      "typeName": {
                        "id": 70228,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 70227,
                          "name": "Client.Any2EVMMessage",
                          "nameLocations": [
                            "4071:6:106",
                            "4078:14:106"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 71268,
                          "src": "4071:21:106"
                        },
                        "referencedDeclaration": 71268,
                        "src": "4071:21:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Any2EVMMessage_$71268_storage_ptr",
                          "typeString": "struct Client.Any2EVMMessage"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 70233,
                  "initialValue": {
                    "baseExpression": {
                      "id": 70230,
                      "name": "s_messageContents",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70061,
                      "src": "4110:17:106",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Any2EVMMessage_$71268_storage_$",
                        "typeString": "mapping(bytes32 => struct Client.Any2EVMMessage storage ref)"
                      }
                    },
                    "id": 70232,
                    "indexExpression": {
                      "id": 70231,
                      "name": "messageId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70192,
                      "src": "4128:9:106",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4110:28:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Any2EVMMessage_$71268_storage",
                      "typeString": "struct Client.Any2EVMMessage storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4071:67:106"
                },
                {
                  "body": {
                    "id": 70262,
                    "nodeType": "Block",
                    "src": "4262:120:106",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 70254,
                              "name": "tokenReceiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 70194,
                              "src": "4325:13:106",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 70255,
                                    "name": "message",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 70229,
                                    "src": "4340:7:106",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Any2EVMMessage_$71268_memory_ptr",
                                      "typeString": "struct Client.Any2EVMMessage memory"
                                    }
                                  },
                                  "id": 70256,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4348:16:106",
                                  "memberName": "destTokenAmounts",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 71267,
                                  "src": "4340:24:106",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$71255_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct Client.EVMTokenAmount memory[] memory"
                                  }
                                },
                                "id": 70258,
                                "indexExpression": {
                                  "id": 70257,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 70235,
                                  "src": "4365:1:106",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4340:27:106",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_EVMTokenAmount_$71255_memory_ptr",
                                  "typeString": "struct Client.EVMTokenAmount memory"
                                }
                              },
                              "id": 70259,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4368:6:106",
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 71254,
                              "src": "4340:34:106",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "baseExpression": {
                                      "expression": {
                                        "id": 70247,
                                        "name": "message",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 70229,
                                        "src": "4277:7:106",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Any2EVMMessage_$71268_memory_ptr",
                                          "typeString": "struct Client.Any2EVMMessage memory"
                                        }
                                      },
                                      "id": 70248,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "4285:16:106",
                                      "memberName": "destTokenAmounts",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 71267,
                                      "src": "4277:24:106",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$71255_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct Client.EVMTokenAmount memory[] memory"
                                      }
                                    },
                                    "id": 70250,
                                    "indexExpression": {
                                      "id": 70249,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 70235,
                                      "src": "4302:1:106",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4277:27:106",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_EVMTokenAmount_$71255_memory_ptr",
                                      "typeString": "struct Client.EVMTokenAmount memory"
                                    }
                                  },
                                  "id": 70251,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4305:5:106",
                                  "memberName": "token",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 71252,
                                  "src": "4277:33:106",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 70246,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 137559,
                                "src": "4270:6:106",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$137559_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 70252,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4270:41:106",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$137559",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 70253,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4312:12:106",
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 137868,
                            "src": "4270:54:106",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$137559_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$137559_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 70260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4270:105:106",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 70261,
                        "nodeType": "ExpressionStatement",
                        "src": "4270:105:106"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 70242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 70238,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70235,
                      "src": "4220:1:106",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 70239,
                          "name": "message",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70229,
                          "src": "4224:7:106",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Any2EVMMessage_$71268_memory_ptr",
                            "typeString": "struct Client.Any2EVMMessage memory"
                          }
                        },
                        "id": 70240,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4232:16:106",
                        "memberName": "destTokenAmounts",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 71267,
                        "src": "4224:24:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$71255_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Client.EVMTokenAmount memory[] memory"
                        }
                      },
                      "id": 70241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4249:6:106",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4224:31:106",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4220:35:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 70263,
                  "initializationExpression": {
                    "assignments": [
                      70235
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 70235,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4213:1:106",
                        "nodeType": "VariableDeclaration",
                        "scope": 70263,
                        "src": "4205:9:106",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 70234,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4205:7:106",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 70237,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 70236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4217:1:106",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4205:13:106"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 70244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "4257:3:106",
                      "subExpression": {
                        "id": 70243,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70235,
                        "src": "4259:1:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 70245,
                    "nodeType": "ExpressionStatement",
                    "src": "4257:3:106"
                  },
                  "nodeType": "ForStatement",
                  "src": "4200:182:106"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 70265,
                        "name": "messageId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70192,
                        "src": "4410:9:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 70264,
                      "name": "MessageRecovered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70053,
                      "src": "4393:16:106",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 70266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4393:27:106",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 70267,
                  "nodeType": "EmitStatement",
                  "src": "4388:32:106"
                }
              ]
            },
            "documentation": {
              "id": 70190,
              "nodeType": "StructuredDocumentation",
              "src": "3411:199:106",
              "text": "@notice This function is callable by the owner when a message has failed\n to unblock the tokens that are associated with that message.\n @dev This function is only callable by the owner."
            },
            "functionSelector": "369f7f66",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 70197,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 70196,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3692:9:106"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 122432,
                  "src": "3692:9:106"
                },
                "nodeType": "ModifierInvocation",
                "src": "3692:9:106"
              }
            ],
            "name": "retryFailedMessage",
            "nameLocation": "3622:18:106",
            "parameters": {
              "id": 70195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70192,
                  "mutability": "mutable",
                  "name": "messageId",
                  "nameLocation": "3649:9:106",
                  "nodeType": "VariableDeclaration",
                  "scope": 70269,
                  "src": "3641:17:106",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 70191,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3641:7:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70194,
                  "mutability": "mutable",
                  "name": "tokenReceiver",
                  "nameLocation": "3668:13:106",
                  "nodeType": "VariableDeclaration",
                  "scope": 70269,
                  "src": "3660:21:106",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 70193,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3660:7:106",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3640:42:106"
            },
            "returnParameters": {
              "id": 70198,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3702:0:106"
            },
            "scope": 70297,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 70281,
            "nodeType": "FunctionDefinition",
            "src": "4478:91:106",
            "nodes": [],
            "body": {
              "id": 70280,
              "nodeType": "Block",
              "src": "4535:34:106",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 70278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 70276,
                      "name": "s_simRevert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70067,
                      "src": "4541:11:106",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 70277,
                      "name": "simRevert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70271,
                      "src": "4555:9:106",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4541:23:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 70279,
                  "nodeType": "ExpressionStatement",
                  "src": "4541:23:106"
                }
              ]
            },
            "functionSelector": "52f813c3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 70274,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 70273,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4525:9:106"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 122432,
                  "src": "4525:9:106"
                },
                "nodeType": "ModifierInvocation",
                "src": "4525:9:106"
              }
            ],
            "name": "setSimRevert",
            "nameLocation": "4487:12:106",
            "parameters": {
              "id": 70272,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70271,
                  "mutability": "mutable",
                  "name": "simRevert",
                  "nameLocation": "4505:9:106",
                  "nodeType": "VariableDeclaration",
                  "scope": 70281,
                  "src": "4500:14:106",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 70270,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4500:4:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4499:16:106"
            },
            "returnParameters": {
              "id": 70275,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4535:0:106"
            },
            "scope": 70297,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 70296,
            "nodeType": "ModifierDefinition",
            "src": "4573:88:106",
            "nodes": [],
            "body": {
              "id": 70295,
              "nodeType": "Block",
              "src": "4593:68:106",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 70289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 70283,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "4603:3:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 70284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4607:6:106",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4603:10:106",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 70287,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "4625:4:106",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DefensiveExample_$70297",
                            "typeString": "contract DefensiveExample"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_DefensiveExample_$70297",
                            "typeString": "contract DefensiveExample"
                          }
                        ],
                        "id": 70286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4617:7:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 70285,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4617:7:106",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 70288,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4617:13:106",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4603:27:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 70293,
                  "nodeType": "IfStatement",
                  "src": "4599:50:106",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 70290,
                        "name": "OnlySelf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70033,
                        "src": "4639:8:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 70291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4639:10:106",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 70292,
                    "nodeType": "RevertStatement",
                    "src": "4632:17:106"
                  }
                },
                {
                  "id": 70294,
                  "nodeType": "PlaceholderStatement",
                  "src": "4655:1:106"
                }
              ]
            },
            "name": "onlySelf",
            "nameLocation": "4582:8:106",
            "parameters": {
              "id": 70282,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4590:2:106"
            },
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 70022,
              "name": "CCIPClientExample",
              "nameLocations": [
                "584:17:106"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 69887,
              "src": "584:17:106"
            },
            "id": 70023,
            "nodeType": "InheritanceSpecifier",
            "src": "584:17:106"
          }
        ],
        "canonicalName": "DefensiveExample",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          70297,
          69887,
          122449,
          122271,
          122433,
          122895,
          70007,
          139523,
          70857
        ],
        "name": "DefensiveExample",
        "nameLocation": "564:16:106",
        "scope": 70298,
        "usedErrors": [
          69434,
          69438,
          69988,
          70033,
          70035,
          70039
        ],
        "usedEvents": [
          69442,
          69446,
          70045,
          70049,
          70053,
          122287,
          122293
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 106
}
{
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "enabled",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "signerPublicKey",
              "type": "address"
            }
          ],
          "internalType": "struct TermsOfServiceAllowList.Config",
          "name": "config",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "InvalidSignature",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidUsage",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RecipientIsBlocked",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "AddedAccess",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "BlockedAccess",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "enabled",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "signerPublicKey",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct TermsOfServiceAllowList.Config",
          "name": "config",
          "type": "tuple"
        }
      ],
      "name": "ConfigUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferRequested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "UnblockedAccess",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "acceptor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        }
      ],
      "name": "acceptTermsOfService",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "blockSender",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllAllowedSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getConfig",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "enabled",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "signerPublicKey",
              "type": "address"
            }
          ],
          "internalType": "struct TermsOfServiceAllowList.Config",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "acceptor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "getMessage",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "hasAccess",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "isBlockedSender",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "typeAndVersion",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "unblockSender",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "enabled",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "signerPublicKey",
              "type": "address"
            }
          ],
          "internalType": "struct TermsOfServiceAllowList.Config",
          "name": "config",
          "type": "tuple"
        }
      ],
      "name": "updateConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b50604051620012c4380380620012c4833981016040819052620000349162000269565b33806000816200008b5760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f000000000000000060448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b0384811691909117909155811615620000be57620000be81620000d9565b505050620000d2816200018460201b60201c565b50620002ea565b336001600160a01b03821603620001335760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000604482015260640162000082565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b6200018e6200020b565b805160058054602080850180516001600160a81b0319909316941515610100600160a81b03198116959095176101006001600160a01b039485160217909355604080519485529251909116908301527f0d22b8a99f411b3dd338c961284f608489ca0dab9cdad17366a343c361bcf80a910160405180910390a150565b6000546001600160a01b03163314620002675760405162461bcd60e51b815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000604482015260640162000082565b565b6000604082840312156200027c57600080fd5b604080519081016001600160401b0381118282101715620002ad57634e487b7160e01b600052604160045260246000fd5b60405282518015158114620002c157600080fd5b815260208301516001600160a01b0381168114620002de57600080fd5b60208201529392505050565b610fca80620002fa6000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c806382184c7b1161008c578063a39b06e311610066578063a39b06e3146101b8578063a5e1d61d146101d9578063c3f909d4146101ec578063f2fde38b1461024b57600080fd5b806382184c7b1461016a57806389f9a2c41461017d5780638da5cb5b1461019057600080fd5b80636b14daf8116100bd5780636b14daf81461012a57806379ba50971461014d578063817ef62e1461015557600080fd5b8063181f5a77146100e45780633908c4d41461010257806347663acb14610117575b600080fd5b6100ec61025e565b6040516100f99190610c4f565b60405180910390f35b610115610110366004610ce4565b61027a565b005b610115610125366004610d45565b6104f0565b61013d610138366004610d60565b61057b565b60405190151581526020016100f9565b6101156105a5565b61015d6106a7565b6040516100f99190610de3565b610115610178366004610d45565b6106b8565b61011561018b366004610e3d565b61074b565b60005460405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100f9565b6101cb6101c6366004610ec6565b610806565b6040519081526020016100f9565b61013d6101e7366004610d45565b610864565b60408051808201825260008082526020918201528151808301835260055460ff8116151580835273ffffffffffffffffffffffffffffffffffffffff6101009092048216928401928352845190815291511691810191909152016100f9565b610115610259366004610d45565b6108a5565b6040518060600160405280602c8152602001610f92602c913981565b73ffffffffffffffffffffffffffffffffffffffff841660009081526004602052604090205460ff16156102da576040517f62b7a34d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006102e68686610806565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c810191909152605c01604080518083037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001815282825280516020918201206005546000855291840180845281905260ff8616928401929092526060830187905260808301869052909250610100900473ffffffffffffffffffffffffffffffffffffffff169060019060a0016020604051602081039080840390855afa1580156103c0573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff1614610417576040517f8baa579f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff861614158061045c57503373ffffffffffffffffffffffffffffffffffffffff87161480159061045c5750333b155b15610493576040517f381cfcbd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61049e6002866108b9565b5060405173ffffffffffffffffffffffffffffffffffffffff861681527f87286ad1f399c8e82bf0c4ef4fcdc570ea2e1e92176e5c848b6413545b885db49060200160405180910390a1505050505050565b6104f86108db565b73ffffffffffffffffffffffffffffffffffffffff811660008181526004602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905590519182527f28bbd0761309a99e8fb5e5d02ada0b7b2db2e5357531ff5dbfc205c3f5b6592b91015b60405180910390a150565b60055460009060ff166105905750600161059e565b61059b60028561095e565b90505b9392505050565b60015473ffffffffffffffffffffffffffffffffffffffff16331461062b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4d7573742062652070726f706f736564206f776e65720000000000000000000060448201526064015b60405180910390fd5b60008054337fffffffffffffffffffffffff00000000000000000000000000000000000000008083168217845560018054909116905560405173ffffffffffffffffffffffffffffffffffffffff90921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b60606106b3600261098d565b905090565b6106c06108db565b6106cb60028261099a565b5073ffffffffffffffffffffffffffffffffffffffff811660008181526004602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905590519182527f337cd0f3f594112b6d830afb510072d3b08556b446514f73b8109162fd1151e19101610570565b6107536108db565b805160058054602080850180517fffffffffffffffffffffff0000000000000000000000000000000000000000009093169415157fffffffffffffffffffffff0000000000000000000000000000000000000000ff81169590951761010073ffffffffffffffffffffffffffffffffffffffff9485160217909355604080519485529251909116908301527f0d22b8a99f411b3dd338c961284f608489ca0dab9cdad17366a343c361bcf80a9101610570565b6040517fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606084811b8216602084015283901b1660348201526000906048016040516020818303038152906040528051906020012090505b92915050565b60055460009060ff1661087957506000919050565b5073ffffffffffffffffffffffffffffffffffffffff1660009081526004602052604090205460ff1690565b6108ad6108db565b6108b6816109bc565b50565b600061059e8373ffffffffffffffffffffffffffffffffffffffff8416610ab1565b60005473ffffffffffffffffffffffffffffffffffffffff16331461095c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e6572000000000000000000006044820152606401610622565b565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600183016020526040812054151561059e565b6060600061059e83610b00565b600061059e8373ffffffffffffffffffffffffffffffffffffffff8416610b5c565b3373ffffffffffffffffffffffffffffffffffffffff821603610a3b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152606401610622565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b6000818152600183016020526040812054610af85750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561085e565b50600061085e565b606081600001805480602002602001604051908101604052809291908181526020018280548015610b5057602002820191906000526020600020905b815481526020019060010190808311610b3c575b50505050509050919050565b60008181526001830160205260408120548015610c45576000610b80600183610ef9565b8554909150600090610b9490600190610ef9565b9050818114610bf9576000866000018281548110610bb457610bb4610f33565b9060005260206000200154905080876000018481548110610bd757610bd7610f33565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610c0a57610c0a610f62565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061085e565b600091505061085e565b600060208083528351808285015260005b81811015610c7c57858101830151858201604001528201610c60565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610cdf57600080fd5b919050565b600080600080600060a08688031215610cfc57600080fd5b610d0586610cbb565b9450610d1360208701610cbb565b93506040860135925060608601359150608086013560ff81168114610d3757600080fd5b809150509295509295909350565b600060208284031215610d5757600080fd5b61059e82610cbb565b600080600060408486031215610d7557600080fd5b610d7e84610cbb565b9250602084013567ffffffffffffffff80821115610d9b57600080fd5b818601915086601f830112610daf57600080fd5b813581811115610dbe57600080fd5b876020828501011115610dd057600080fd5b6020830194508093505050509250925092565b6020808252825182820181905260009190848201906040850190845b81811015610e3157835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101610dff565b50909695505050505050565b600060408284031215610e4f57600080fd5b6040516040810181811067ffffffffffffffff82111715610e99577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405282358015158114610eac57600080fd5b8152610eba60208401610cbb565b60208201529392505050565b60008060408385031215610ed957600080fd5b610ee283610cbb565b9150610ef060208401610cbb565b90509250929050565b8181038181111561085e577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfe46756e6374696f6e73205465726d73206f66205365727669636520416c6c6f77204c6973742076312e302e30a164736f6c6343000815000a",
    "sourceMap": "729:4928:161:-:0;;;2139:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2188:10;;345:1:248;2188:10:161;529:59:249;;;;-1:-1:-1;;;529:59:249;;1029:2:351;529:59:249;;;1011:21:351;1068:2;1048:18;;;1041:30;1107:26;1087:18;;;1080:54;1151:18;;529:59:249;;;;;;;;;595:7;:18;;-1:-1:-1;;;;;;595:18:249;-1:-1:-1;;;;;595:18:249;;;;;;;;;;623:26;;;619:79;;659:32;678:12;659:18;:32::i;:::-;471:231;;270:81:248;2206:20:161::1;2219:6;2206:12;;;:20;;:::i;:::-;2139:92:::0;729:4928;;1482:188:249;1550:10;-1:-1:-1;;;;;1544:16:249;;;1536:52;;;;-1:-1:-1;;;1536:52:249;;1382:2:351;1536:52:249;;;1364:21:351;1421:2;1401:18;;;1394:30;1460:25;1440:18;;;1433:53;1503:18;;1536:52:249;1180:347:351;1536:52:249;1595:14;:19;;-1:-1:-1;;;;;;1595:19:249;-1:-1:-1;;;;;1595:19:249;;;;;;;;;-1:-1:-1;1653:7:249;;1626:39;;1595:19;;1653:7;;1626:39;;-1:-1:-1;1626:39:249;1482:188;:::o;2759:121:161:-;1941:20:249;:18;:20::i;:::-;2826:17:161;;:8:::1;:17:::0;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;;;;2826:17:161;;;;::::1;;-1:-1:-1::0;;;;;;2826:17:161;;;;;;::::1;-1:-1:-1::0;;;;;2826:17:161;;::::1;;;::::0;;;2854:21:::1;::::0;;1728:48:351;;;1818:24;;1814:50;;;1792:20;;;1785:80;2854:21:161::1;::::0;1701:18:351;2854:21:161::1;;;;;;;2759:121:::0;:::o;1715:111:249:-;1787:7;;-1:-1:-1;;;;;1787:7:249;1773:10;:21;1765:56;;;;-1:-1:-1;;;1765:56:249;;2078:2:351;1765:56:249;;;2060:21:351;2117:2;2097:18;;;2090:30;2156:24;2136:18;;;2129:52;2198:18;;1765:56:249;1876:346:351;1765:56:249;1715:111::o;14:808:351:-;109:6;162:2;150:9;141:7;137:23;133:32;130:52;;;178:1;175;168:12;130:52;211:2;205:9;;;241:15;;-1:-1:-1;;;;;271:34:351;;307:22;;;268:62;265:185;;;372:10;367:3;363:20;360:1;353:31;407:4;404:1;397:15;435:4;432:1;425:15;265:185;466:2;459:22;503:16;;555:13;;548:21;538:32;;528:60;;584:1;581;574:12;528:60;597:21;;663:2;648:18;;642:25;-1:-1:-1;;;;;698:33:351;;686:46;;676:74;;746:1;743;736:12;676:74;778:2;766:15;;759:32;770:6;14:808;-1:-1:-1;;;14:808:351:o;1876:346::-;729:4928:161;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100df5760003560e01c806382184c7b1161008c578063a39b06e311610066578063a39b06e3146101b8578063a5e1d61d146101d9578063c3f909d4146101ec578063f2fde38b1461024b57600080fd5b806382184c7b1461016a57806389f9a2c41461017d5780638da5cb5b1461019057600080fd5b80636b14daf8116100bd5780636b14daf81461012a57806379ba50971461014d578063817ef62e1461015557600080fd5b8063181f5a77146100e45780633908c4d41461010257806347663acb14610117575b600080fd5b6100ec61025e565b6040516100f99190610c4f565b60405180910390f35b610115610110366004610ce4565b61027a565b005b610115610125366004610d45565b6104f0565b61013d610138366004610d60565b61057b565b60405190151581526020016100f9565b6101156105a5565b61015d6106a7565b6040516100f99190610de3565b610115610178366004610d45565b6106b8565b61011561018b366004610e3d565b61074b565b60005460405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100f9565b6101cb6101c6366004610ec6565b610806565b6040519081526020016100f9565b61013d6101e7366004610d45565b610864565b60408051808201825260008082526020918201528151808301835260055460ff8116151580835273ffffffffffffffffffffffffffffffffffffffff6101009092048216928401928352845190815291511691810191909152016100f9565b610115610259366004610d45565b6108a5565b6040518060600160405280602c8152602001610f92602c913981565b73ffffffffffffffffffffffffffffffffffffffff841660009081526004602052604090205460ff16156102da576040517f62b7a34d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006102e68686610806565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c810191909152605c01604080518083037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001815282825280516020918201206005546000855291840180845281905260ff8616928401929092526060830187905260808301869052909250610100900473ffffffffffffffffffffffffffffffffffffffff169060019060a0016020604051602081039080840390855afa1580156103c0573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff1614610417576040517f8baa579f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff861614158061045c57503373ffffffffffffffffffffffffffffffffffffffff87161480159061045c5750333b155b15610493576040517f381cfcbd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61049e6002866108b9565b5060405173ffffffffffffffffffffffffffffffffffffffff861681527f87286ad1f399c8e82bf0c4ef4fcdc570ea2e1e92176e5c848b6413545b885db49060200160405180910390a1505050505050565b6104f86108db565b73ffffffffffffffffffffffffffffffffffffffff811660008181526004602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905590519182527f28bbd0761309a99e8fb5e5d02ada0b7b2db2e5357531ff5dbfc205c3f5b6592b91015b60405180910390a150565b60055460009060ff166105905750600161059e565b61059b60028561095e565b90505b9392505050565b60015473ffffffffffffffffffffffffffffffffffffffff16331461062b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4d7573742062652070726f706f736564206f776e65720000000000000000000060448201526064015b60405180910390fd5b60008054337fffffffffffffffffffffffff00000000000000000000000000000000000000008083168217845560018054909116905560405173ffffffffffffffffffffffffffffffffffffffff90921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b60606106b3600261098d565b905090565b6106c06108db565b6106cb60028261099a565b5073ffffffffffffffffffffffffffffffffffffffff811660008181526004602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905590519182527f337cd0f3f594112b6d830afb510072d3b08556b446514f73b8109162fd1151e19101610570565b6107536108db565b805160058054602080850180517fffffffffffffffffffffff0000000000000000000000000000000000000000009093169415157fffffffffffffffffffffff0000000000000000000000000000000000000000ff81169590951761010073ffffffffffffffffffffffffffffffffffffffff9485160217909355604080519485529251909116908301527f0d22b8a99f411b3dd338c961284f608489ca0dab9cdad17366a343c361bcf80a9101610570565b6040517fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606084811b8216602084015283901b1660348201526000906048016040516020818303038152906040528051906020012090505b92915050565b60055460009060ff1661087957506000919050565b5073ffffffffffffffffffffffffffffffffffffffff1660009081526004602052604090205460ff1690565b6108ad6108db565b6108b6816109bc565b50565b600061059e8373ffffffffffffffffffffffffffffffffffffffff8416610ab1565b60005473ffffffffffffffffffffffffffffffffffffffff16331461095c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e6572000000000000000000006044820152606401610622565b565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600183016020526040812054151561059e565b6060600061059e83610b00565b600061059e8373ffffffffffffffffffffffffffffffffffffffff8416610b5c565b3373ffffffffffffffffffffffffffffffffffffffff821603610a3b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152606401610622565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b6000818152600183016020526040812054610af85750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561085e565b50600061085e565b606081600001805480602002602001604051908101604052809291908181526020018280548015610b5057602002820191906000526020600020905b815481526020019060010190808311610b3c575b50505050509050919050565b60008181526001830160205260408120548015610c45576000610b80600183610ef9565b8554909150600090610b9490600190610ef9565b9050818114610bf9576000866000018281548110610bb457610bb4610f33565b9060005260206000200154905080876000018481548110610bd757610bd7610f33565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610c0a57610c0a610f62565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061085e565b600091505061085e565b600060208083528351808285015260005b81811015610c7c57858101830151858201604001528201610c60565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610cdf57600080fd5b919050565b600080600080600060a08688031215610cfc57600080fd5b610d0586610cbb565b9450610d1360208701610cbb565b93506040860135925060608601359150608086013560ff81168114610d3757600080fd5b809150509295509295909350565b600060208284031215610d5757600080fd5b61059e82610cbb565b600080600060408486031215610d7557600080fd5b610d7e84610cbb565b9250602084013567ffffffffffffffff80821115610d9b57600080fd5b818601915086601f830112610daf57600080fd5b813581811115610dbe57600080fd5b876020828501011115610dd057600080fd5b6020830194508093505050509250925092565b6020808252825182820181905260009190848201906040850190845b81811015610e3157835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101610dff565b50909695505050505050565b600060408284031215610e4f57600080fd5b6040516040810181811067ffffffffffffffff82111715610e99577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405282358015158114610eac57600080fd5b8152610eba60208401610cbb565b60208201529392505050565b60008060408385031215610ed957600080fd5b610ee283610cbb565b9150610ef060208401610cbb565b90509250929050565b8181038181111561085e577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfe46756e6374696f6e73205465726d73206f66205365727669636520416c6c6f77204c6973742076312e302e30a164736f6c6343000815000a",
    "sourceMap": "729:4928:161:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;962:95;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3347:1047;;;;;;:::i;:::-;;:::i;:::-;;5511:144;;;;;;:::i;:::-;;:::i;4606:201::-;;;;;;:::i;:::-;;:::i;:::-;;;2413:14:351;;2406:22;2388:41;;2376:2;2361:18;4606:201:161;2248:187:351;1001:265:249;;;:::i;4441:125:161:-;;;:::i;:::-;;;;;;;:::i;5288:176::-;;;;;;:::i;:::-;;:::i;2759:121::-;;;;;;:::i;:::-;;:::i;1317:81:249:-;1364:7;1386;1317:81;;1386:7;;;;4037:74:351;;4025:2;4010:18;1317:81:249;3891:226:351;3138:162:161;;;;;;:::i;:::-;;:::i;:::-;;;4533:25:351;;;4521:2;4506:18;3138:162:161;4387:177:351;5065:176:161;;;;;;:::i;:::-;;:::i;2516:85::-;-1:-1:-1;;;;;;;;;;;;;;;;;2581:15:161;;;;;;;2588:8;2581:15;;;;;;;;;;;;;;;;;;;;;;2516:85;;4765:48:351;;;4855:24;;4851:73;4829:20;;;4822:103;;;;4738:18;2516:85:161;4569:362:351;811:98:249;;;;;;:::i;:::-;;:::i;962:95:161:-;;;;;;;;;;;;;;;;;;;:::o;3347:1047::-;3473:27;;;;;;;:16;:27;;;;;;;;3469:75;;;3517:20;;;;;;;;;;;;;;3469:75;3633:23;3729:31;3740:8;3750:9;3729:10;:31::i;:::-;3676:85;;5178:66:351;3676:85:161;;;5166:79:351;5261:12;;;5254:28;;;;5298:12;;3676:85:161;;;;;;;;;;;;;3659:108;;3676:85;3659:108;;;;3816:8;:24;;3777:35;;;;;;;;5548:25:351;;;5621:4;5609:17;;5589:18;;;5582:45;;;;5643:18;;;5636:34;;;5686:18;;;5679:34;;;3659:108:161;;-1:-1:-1;3816:24:161;;;;;;;;5520:19:351;;3777:35:161;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:63;;;3773:109;;3857:18;;;;;;;;;;;;;;3773:109;4163:10;:23;;;;;;:79;;-1:-1:-1;4191:10:161;:22;;;;;;;:50;;-1:-1:-1;4218:10:161;1395:19:332;:23;4191:50:161;4159:121;;;4259:14;;;;;;;;;;;;;;4159:121;4325:31;:16;4346:9;4325:20;:31::i;:::-;-1:-1:-1;4367:22:161;;4067:42:351;4055:55;;4037:74;;4367:22:161;;4025:2:351;4010:18;4367:22:161;;;;;;;3463:931;3347:1047;;;;;:::o;5511:144::-;1941:20:249;:18;:20::i;:::-;5584:24:161::1;::::0;::::1;5611:5;5584:24:::0;;;:16:::1;:24;::::0;;;;;;;;:32;;;::::1;::::0;;5627:23;;4037:74:351;;;5627:23:161::1;::::0;4010:18:351;5627:23:161::1;;;;;;;;5511:144:::0;:::o;4606:201::-;4715:8;:16;4698:4;;4715:16;;4710:49;;-1:-1:-1;4748:4:161;4741:11;;4710:49;4771:31;:16;4797:4;4771:25;:31::i;:::-;4764:38;;4606:201;;;;;;:::o;1001:265:249:-;1074:14;;;;1060:10;:28;1052:63;;;;;;;5926:2:351;1052:63:249;;;5908:21:351;5965:2;5945:18;;;5938:30;6004:24;5984:18;;;5977:52;6046:18;;1052:63:249;;;;;;;;;1122:16;1141:7;;1164:10;1154:20;;;;;;;;-1:-1:-1;1180:27:249;;;;;;;1219:42;;1141:7;;;;;1164:10;;1141:7;;1219:42;;;1046:220;1001:265::o;4441:125:161:-;4505:16;4536:25;:16;:23;:25::i;:::-;4529:32;;4441:125;:::o;5288:176::-;1941:20:249;:18;:20::i;:::-;5359:31:161::1;:16;5383:6:::0;5359:23:::1;:31::i;:::-;-1:-1:-1::0;5396:24:161::1;::::0;::::1;;::::0;;;:16:::1;:24;::::0;;;;;;;;:31;;;::::1;5423:4;5396:31;::::0;;5438:21;;4037:74:351;;;5438:21:161::1;::::0;4010:18:351;5438:21:161::1;3891:226:351::0;2759:121:161;1941:20:249;:18;:20::i;:::-;2826:17:161;;:8:::1;:17:::0;;::::1;::::0;;::::1;::::0;;;;;;;::::1;;::::0;;;;;;;::::1;;::::0;;::::1;;;::::0;;;2854:21:::1;::::0;;4765:48:351;;;4855:24;;4851:73;;;4829:20;;;4822:103;2854:21:161::1;::::0;4738:18:351;2854:21:161::1;4569:362:351::0;3138:162:161;3257:37;;6242:66:351;6337:2;6333:15;;;6329:24;;3257:37:161;;;6317::351;6388:15;;;6384:24;6370:12;;;6363:46;3225:7:161;;6425:12:351;;3257:37:161;;;;;;;;;;;;3247:48;;;;;;3240:55;;3138:162;;;;;:::o;5065:176::-;5155:8;:16;5138:4;;5155:16;;5150:50;;-1:-1:-1;5188:5:161;;5065:176;-1:-1:-1;5065:176:161:o;5150:50::-;-1:-1:-1;5212:24:161;;;;;;:16;:24;;;;;;;;;5065:176::o;811:98:249:-;1941:20;:18;:20::i;:::-;882:22:::1;901:2;882:18;:22::i;:::-;811:98:::0;:::o;7773:144:346:-;7843:4;7862:50;7867:3;7887:23;;;7862:4;:50::i;1715:111:249:-;1787:7;;;;1773:10;:21;1765:56;;;;;;;6650:2:351;1765:56:249;;;6632:21:351;6689:2;6669:18;;;6662:30;6728:24;6708:18;;;6701:52;6770:18;;1765:56:249;6448:346:351;1765:56:249;1715:111::o;8294:159:346:-;8423:23;;;8374:4;4067:19;;;:12;;;:19;;;;;;:24;;8393:55;3975:121;9627:268;9690:16;9714:22;9739:19;9747:3;9739:7;:19::i;8071:150::-;8144:4;8163:53;8171:3;8191:23;;;8163:7;:53::i;1482:188:249:-;1550:10;1544:16;;;;1536:52;;;;;;;7001:2:351;1536:52:249;;;6983:21:351;7040:2;7020:18;;;7013:30;7079:25;7059:18;;;7052:53;7122:18;;1536:52:249;6799:347:351;1536:52:249;1595:14;:19;;;;;;;;;;;;;;-1:-1:-1;1653:7:249;;1626:39;;1595:19;;1653:7;;1626:39;;-1:-1:-1;1626:39:249;1482:188;:::o;2152:354:346:-;2215:4;4067:19;;;:12;;;:19;;;;;;2227:275;;-1:-1:-1;2263:23:346;;;;;;;;:11;:23;;;;;;;;;;;;;2425:18;;2403:19;;;:12;;;:19;;;;;;:40;;;;2451:11;;2227:275;-1:-1:-1;2490:5:346;2483:12;;5224:103;5280:16;5311:3;:11;;5304:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5224:103;;;:::o;2660:1242::-;2726:4;2855:19;;;:12;;;:19;;;;;;2885:15;;2881:1017;;3224:21;3248:14;3261:1;3248:10;:14;:::i;:::-;3290:18;;3224:38;;-1:-1:-1;3270:17:346;;3290:22;;3311:1;;3290:22;:::i;:::-;3270:42;;3338:13;3325:9;:26;3321:352;;3363:17;3383:3;:11;;3395:9;3383:22;;;;;;;;:::i;:::-;;;;;;;;;3363:42;;3518:9;3489:3;:11;;3501:13;3489:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3585:23;;;:12;;;:23;;;;;:36;;;3321:352;3739:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3819:3;:12;;:19;3832:5;3819:19;;;;;;;;;;;3812:26;;;3854:4;3847:11;;;;;;;2881:1017;3886:5;3879:12;;;;;14:607:351;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;612:2;542:66;537:2;529:6;525:15;521:88;510:9;506:104;502:113;494:121;;;;14:607;;;;:::o;626:196::-;694:20;;754:42;743:54;;733:65;;723:93;;812:1;809;802:12;723:93;626:196;;;:::o;827:555::-;920:6;928;936;944;952;1005:3;993:9;984:7;980:23;976:33;973:53;;;1022:1;1019;1012:12;973:53;1045:29;1064:9;1045:29;:::i;:::-;1035:39;;1093:38;1127:2;1116:9;1112:18;1093:38;:::i;:::-;1083:48;;1178:2;1167:9;1163:18;1150:32;1140:42;;1229:2;1218:9;1214:18;1201:32;1191:42;;1283:3;1272:9;1268:19;1255:33;1328:4;1321:5;1317:16;1310:5;1307:27;1297:55;;1348:1;1345;1338:12;1297:55;1371:5;1361:15;;;827:555;;;;;;;;:::o;1387:186::-;1446:6;1499:2;1487:9;1478:7;1474:23;1470:32;1467:52;;;1515:1;1512;1505:12;1467:52;1538:29;1557:9;1538:29;:::i;1578:665::-;1657:6;1665;1673;1726:2;1714:9;1705:7;1701:23;1697:32;1694:52;;;1742:1;1739;1732:12;1694:52;1765:29;1784:9;1765:29;:::i;:::-;1755:39;;1845:2;1834:9;1830:18;1817:32;1868:18;1909:2;1901:6;1898:14;1895:34;;;1925:1;1922;1915:12;1895:34;1963:6;1952:9;1948:22;1938:32;;2008:7;2001:4;1997:2;1993:13;1989:27;1979:55;;2030:1;2027;2020:12;1979:55;2070:2;2057:16;2096:2;2088:6;2085:14;2082:34;;;2112:1;2109;2102:12;2082:34;2157:7;2152:2;2143:6;2139:2;2135:15;2131:24;2128:37;2125:57;;;2178:1;2175;2168:12;2125:57;2209:2;2205;2201:11;2191:21;;2231:6;2221:16;;;;;1578:665;;;;;:::o;2440:681::-;2611:2;2663:21;;;2733:13;;2636:18;;;2755:22;;;2582:4;;2611:2;2834:15;;;;2808:2;2793:18;;;2582:4;2877:218;2891:6;2888:1;2885:13;2877:218;;;2956:13;;2971:42;2952:62;2940:75;;3070:15;;;;3035:12;;;;2913:1;2906:9;2877:218;;;-1:-1:-1;3112:3:351;;2440:681;-1:-1:-1;;;;;;2440:681:351:o;3126:760::-;3210:6;3263:2;3251:9;3242:7;3238:23;3234:32;3231:52;;;3279:1;3276;3269:12;3231:52;3312:2;3306:9;3354:2;3346:6;3342:15;3423:6;3411:10;3408:22;3387:18;3375:10;3372:34;3369:62;3366:242;;;3464:77;3461:1;3454:88;3565:4;3562:1;3555:15;3593:4;3590:1;3583:15;3366:242;3624:2;3617:22;3661:23;;3720:13;;3713:21;3703:32;;3693:60;;3749:1;3746;3739:12;3693:60;3762:21;;3816:38;3850:2;3835:18;;3816:38;:::i;:::-;3811:2;3799:15;;3792:63;3803:6;3126:760;-1:-1:-1;;;3126:760:351:o;4122:260::-;4190:6;4198;4251:2;4239:9;4230:7;4226:23;4222:32;4219:52;;;4267:1;4264;4257:12;4219:52;4290:29;4309:9;4290:29;:::i;:::-;4280:39;;4338:38;4372:2;4361:9;4357:18;4338:38;:::i;:::-;4328:48;;4122:260;;;;;:::o;7151:282::-;7218:9;;;7239:11;;;7236:191;;;7283:77;7280:1;7273:88;7384:4;7381:1;7374:15;7412:4;7409:1;7402:15;7438:184;7490:77;7487:1;7480:88;7587:4;7584:1;7577:15;7611:4;7608:1;7601:15;7627:184;7679:77;7676:1;7669:88;7776:4;7773:1;7766:15;7800:4;7797:1;7790:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "acceptOwnership()": "79ba5097",
    "acceptTermsOfService(address,address,bytes32,bytes32,uint8)": "3908c4d4",
    "blockSender(address)": "82184c7b",
    "getAllAllowedSenders()": "817ef62e",
    "getConfig()": "c3f909d4",
    "getMessage(address,address)": "a39b06e3",
    "hasAccess(address,bytes)": "6b14daf8",
    "isBlockedSender(address)": "a5e1d61d",
    "owner()": "8da5cb5b",
    "transferOwnership(address)": "f2fde38b",
    "typeAndVersion()": "181f5a77",
    "unblockSender(address)": "47663acb",
    "updateConfig((bool,address))": "89f9a2c4"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signerPublicKey\",\"type\":\"address\"}],\"internalType\":\"struct TermsOfServiceAllowList.Config\",\"name\":\"config\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidUsage\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RecipientIsBlocked\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"AddedAccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"BlockedAccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signerPublicKey\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct TermsOfServiceAllowList.Config\",\"name\":\"config\",\"type\":\"tuple\"}],\"name\":\"ConfigUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"UnblockedAccess\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"acceptor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"}],\"name\":\"acceptTermsOfService\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"blockSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllAllowedSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signerPublicKey\",\"type\":\"address\"}],\"internalType\":\"struct TermsOfServiceAllowList.Config\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"acceptor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"getMessage\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"hasAccess\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"isBlockedSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"typeAndVersion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"unblockSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signerPublicKey\",\"type\":\"address\"}],\"internalType\":\"struct TermsOfServiceAllowList.Config\",\"name\":\"config\",\"type\":\"tuple\"}],\"name\":\"updateConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptTermsOfService(address,address,bytes32,bytes32,uint8)\":{\"params\":{\"acceptor\":\"- The wallet address that has accepted the Terms of Service on the UI\",\"r\":\"- ECDSA signature r data produced by the Chainlink Functions Subscription UI\",\"recipient\":\"- The recipient address that the acceptor is taking responsibility for\",\"s\":\"- ECDSA signature s produced by the Chainlink Functions Subscription UI\",\"v\":\"- ECDSA signature v produced by the Chainlink Functions Subscription UI\"}},\"blockSender(address)\":{\"params\":{\"sender\":\"- Address of the sender to block\"}},\"getAllAllowedSenders()\":{\"details\":\"WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that this function has an unbounded cost, and using it as part of a state-changing function may render the function uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\",\"returns\":{\"_0\":\"addresses - all allowed addresses\"}},\"getConfig()\":{\"returns\":{\"_0\":\"config\"}},\"getMessage(address,address)\":{\"params\":{\"acceptor\":\"- The wallet address that has accepted the Terms of Service on the UI\",\"recipient\":\"- The recipient address that the acceptor is taking responsibility for\"},\"returns\":{\"_0\":\"Hash of the message data\"}},\"isBlockedSender(address)\":{\"params\":{\"sender\":\"The transaction sender's address\"},\"returns\":{\"_0\":\"True or false\"}},\"unblockSender(address)\":{\"params\":{\"sender\":\"- Address of the sender to unblock\"}},\"updateConfig((bool,address))\":{\"params\":{\"config\":\"- See the contents of the TermsOfServiceAllowList.Config struct for more information\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"acceptTermsOfService(address,address,bytes32,bytes32,uint8)\":{\"notice\":\"Allows access to the sender based on acceptance of the Terms of Service\"},\"blockSender(address)\":{\"notice\":\"Removes a sender's access if already authorized, and disallows re-accepting the Terms of Service\"},\"getAllAllowedSenders()\":{\"notice\":\"Get a list of all allowed senders\"},\"getConfig()\":{\"notice\":\"Gets the contracts's configuration\"},\"getMessage(address,address)\":{\"notice\":\"Return the message data for the proof given to accept the Terms of Service\"},\"isBlockedSender(address)\":{\"notice\":\"Check if the address is blocked for usage\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address, pending.\"},\"unblockSender(address)\":{\"notice\":\"Re-allows a previously blocked sender to accept the Terms of Service\"},\"updateConfig((bool,address))\":{\"notice\":\"Sets the contracts's configuration\"}},\"notice\":\"A contract to handle access control of subscription management dependent on signing a Terms of Service\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/v0.8/functions/dev/v1_0_0/accessControl/TermsOfServiceAllowList.sol\":\"TermsOfServiceAllowList\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@ERC3643/=lib/ERC-3643/contracts/\",\":@chainlink/contracts-ccip/=src/v0.8/\",\":@chainlink/contracts/=node_modules/@chainlink/contracts/src/v0.6/\",\":@erc721a/=lib/ERC721A/contracts/\",\":@onchain-id/solidity/contracts/=lib/solidity/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/test/=lib/prb-test/src/\",\":ERC-3643/=lib/ERC-3643/contracts/\",\":ERC721A/=lib/ERC721A/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/contracts-upgradleable/=lib/openzeppelin-contracts-upgradleable/contracts/\",\":prb-test/=lib/prb-test/src/\",\":solidity/=lib/solidity/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"src/v0.8/functions/dev/v1_0_0/accessControl/TermsOfServiceAllowList.sol\":{\"keccak256\":\"0xb3c84ce55cd2f0f037fb3a820c8effb934fda8f889da04a8ebd6372333d80552\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d3621cd03482bc8f0de8fcd804ea8702f9a3c1f189e9ab8aca0f2a774d40cda\",\"dweb:/ipfs/QmZFuM59wjDzASkA9DRRueS9L3S9fu4JgX9BQNVmLYLCMu\"]},\"src/v0.8/functions/dev/v1_0_0/accessControl/interfaces/ITermsOfServiceAllowList.sol\":{\"keccak256\":\"0xa485228d63af400ddbdfb86ab7c5de998777f3cfd1e555bf0509ec3e23a5d6b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://822aeb07aab245d0d76c34bbf43b220a4c88ff02b7b515a2d60b9fbc77c094aa\",\"dweb:/ipfs/QmbyhzcFavxhCeWzrPk56sTqkvNHhegC9BGfNSYDw5TGgE\"]},\"src/v0.8/shared/access/ConfirmedOwner.sol\":{\"keccak256\":\"0x99d0b0786fe368970009c703f2249bfbc56340ddf1a28b60d2915bb58c34cd72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af0371c1af45db651823b9a3d5af761b08243c78f105166342eee28de356c8dd\",\"dweb:/ipfs/QmPnC9qNDKwJFd5unwLb9pxjrutoe8MWjm5EXHTxq2kJ4x\"]},\"src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"keccak256\":\"0x215529a99534a40e6257ef2282a91ea4a95b66debc3997866406907622efb405\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecc56a2cddb1ba6225ca0cffb07fdf6e24bcc4234cc87710c42a59c0a21ae395\",\"dweb:/ipfs/QmSpW4vkPHeRNZ14beMEk2LEtqY5JQTueNJC4sCT8JaSoc\"]},\"src/v0.8/shared/interfaces/IAccessController.sol\":{\"keccak256\":\"0x2bdd0e819a586c8a0f326f227157197e3ded4f0e2c75117cc04fded3cb07ed81\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e27d99e49f62a445fc415eaa7f07b9eb475f1e3fe61e2f1187391e187d7fb8a\",\"dweb:/ipfs/QmRQdCivLYqH5dv5oox7FV6vK8zYN4hPHEYAjeAort48M2\"]},\"src/v0.8/shared/interfaces/IOwnable.sol\":{\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921\",\"dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q\"]},\"src/v0.8/shared/interfaces/ITypeAndVersion.sol\":{\"keccak256\":\"0xf5827cb463c01d055021684d04f9186391c2d9ac850e0d0819f76140e4fc84ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a19c7bae07330e6d7904a0a21cf0ab0067ef096b66c1653a2e012801a931c5b9\",\"dweb:/ipfs/QmckpvSuLx8UL8zfVzAtN6ZRxyXHUSVqqz2JwYZ2jrK58h\"]},\"src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/utils/Address.sol\":{\"keccak256\":\"0x172a09a55d730f20a9bb309086a4ad06b17c612151f58bab2b44efe78d583d4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f812456ddd112f09606bfc5965c6e643558d740264273017ad556122502b4e2\",\"dweb:/ipfs/QmdWE4wncanz9Lhu5ESgSo14jAR74Ss5puCM5zUGonATLw\"]},\"src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9ec0d82ee53d4137be44f1f38f9a82d0d3a2027b3b8b226a5a90e4ee76e926d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f783b453420dee16bb4f0839e3d2485d753d2dcd317adbeecb7e510c39563f57\",\"dweb:/ipfs/QmUd4BeCaw6ZujaYvvMrCn2BNqmiP4bt4eA9rxiXY5od5E\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "struct TermsOfServiceAllowList.Config",
              "name": "config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "enabled",
                  "type": "bool"
                },
                {
                  "internalType": "address",
                  "name": "signerPublicKey",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidSignature"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidUsage"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RecipientIsBlocked"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AddedAccess",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BlockedAccess",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct TermsOfServiceAllowList.Config",
              "name": "config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "enabled",
                  "type": "bool"
                },
                {
                  "internalType": "address",
                  "name": "signerPublicKey",
                  "type": "address"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ConfigUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferRequested",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UnblockedAccess",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "acceptor",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptTermsOfService"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "blockSender"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllAllowedSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getConfig",
          "outputs": [
            {
              "internalType": "struct TermsOfServiceAllowList.Config",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "enabled",
                  "type": "bool"
                },
                {
                  "internalType": "address",
                  "name": "signerPublicKey",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "acceptor",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getMessage",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasAccess",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isBlockedSender",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "typeAndVersion",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unblockSender"
        },
        {
          "inputs": [
            {
              "internalType": "struct TermsOfServiceAllowList.Config",
              "name": "config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "enabled",
                  "type": "bool"
                },
                {
                  "internalType": "address",
                  "name": "signerPublicKey",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateConfig"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "acceptTermsOfService(address,address,bytes32,bytes32,uint8)": {
            "params": {
              "acceptor": "- The wallet address that has accepted the Terms of Service on the UI",
              "r": "- ECDSA signature r data produced by the Chainlink Functions Subscription UI",
              "recipient": "- The recipient address that the acceptor is taking responsibility for",
              "s": "- ECDSA signature s produced by the Chainlink Functions Subscription UI",
              "v": "- ECDSA signature v produced by the Chainlink Functions Subscription UI"
            }
          },
          "blockSender(address)": {
            "params": {
              "sender": "- Address of the sender to block"
            }
          },
          "getAllAllowedSenders()": {
            "details": "WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that this function has an unbounded cost, and using it as part of a state-changing function may render the function uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.",
            "returns": {
              "_0": "addresses - all allowed addresses"
            }
          },
          "getConfig()": {
            "returns": {
              "_0": "config"
            }
          },
          "getMessage(address,address)": {
            "params": {
              "acceptor": "- The wallet address that has accepted the Terms of Service on the UI",
              "recipient": "- The recipient address that the acceptor is taking responsibility for"
            },
            "returns": {
              "_0": "Hash of the message data"
            }
          },
          "isBlockedSender(address)": {
            "params": {
              "sender": "The transaction sender's address"
            },
            "returns": {
              "_0": "True or false"
            }
          },
          "unblockSender(address)": {
            "params": {
              "sender": "- Address of the sender to unblock"
            }
          },
          "updateConfig((bool,address))": {
            "params": {
              "config": "- See the contents of the TermsOfServiceAllowList.Config struct for more information"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "acceptOwnership()": {
            "notice": "Allows an ownership transfer to be completed by the recipient."
          },
          "acceptTermsOfService(address,address,bytes32,bytes32,uint8)": {
            "notice": "Allows access to the sender based on acceptance of the Terms of Service"
          },
          "blockSender(address)": {
            "notice": "Removes a sender's access if already authorized, and disallows re-accepting the Terms of Service"
          },
          "getAllAllowedSenders()": {
            "notice": "Get a list of all allowed senders"
          },
          "getConfig()": {
            "notice": "Gets the contracts's configuration"
          },
          "getMessage(address,address)": {
            "notice": "Return the message data for the proof given to accept the Terms of Service"
          },
          "isBlockedSender(address)": {
            "notice": "Check if the address is blocked for usage"
          },
          "owner()": {
            "notice": "Get the current owner"
          },
          "transferOwnership(address)": {
            "notice": "Allows an owner to begin transferring ownership to a new address, pending."
          },
          "unblockSender(address)": {
            "notice": "Re-allows a previously blocked sender to accept the Terms of Service"
          },
          "updateConfig((bool,address))": {
            "notice": "Sets the contracts's configuration"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ERC3643/=lib/ERC-3643/contracts/",
        "@chainlink/contracts-ccip/=src/v0.8/",
        "@chainlink/contracts/=node_modules/@chainlink/contracts/src/v0.6/",
        "@erc721a/=lib/ERC721A/contracts/",
        "@onchain-id/solidity/contracts/=lib/solidity/contracts/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@prb/test/=lib/prb-test/src/",
        "ERC-3643/=lib/ERC-3643/contracts/",
        "ERC721A/=lib/ERC721A/contracts/",
        "chainlink/=lib/chainlink/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/contracts-upgradleable/=lib/openzeppelin-contracts-upgradleable/contracts/",
        "prb-test/=lib/prb-test/src/",
        "solidity/=lib/solidity/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10000
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/v0.8/functions/dev/v1_0_0/accessControl/TermsOfServiceAllowList.sol": "TermsOfServiceAllowList"
      },
      "libraries": {}
    },
    "sources": {
      "src/v0.8/functions/dev/v1_0_0/accessControl/TermsOfServiceAllowList.sol": {
        "keccak256": "0xb3c84ce55cd2f0f037fb3a820c8effb934fda8f889da04a8ebd6372333d80552",
        "urls": [
          "bzz-raw://4d3621cd03482bc8f0de8fcd804ea8702f9a3c1f189e9ab8aca0f2a774d40cda",
          "dweb:/ipfs/QmZFuM59wjDzASkA9DRRueS9L3S9fu4JgX9BQNVmLYLCMu"
        ],
        "license": "MIT"
      },
      "src/v0.8/functions/dev/v1_0_0/accessControl/interfaces/ITermsOfServiceAllowList.sol": {
        "keccak256": "0xa485228d63af400ddbdfb86ab7c5de998777f3cfd1e555bf0509ec3e23a5d6b3",
        "urls": [
          "bzz-raw://822aeb07aab245d0d76c34bbf43b220a4c88ff02b7b515a2d60b9fbc77c094aa",
          "dweb:/ipfs/QmbyhzcFavxhCeWzrPk56sTqkvNHhegC9BGfNSYDw5TGgE"
        ],
        "license": "MIT"
      },
      "src/v0.8/shared/access/ConfirmedOwner.sol": {
        "keccak256": "0x99d0b0786fe368970009c703f2249bfbc56340ddf1a28b60d2915bb58c34cd72",
        "urls": [
          "bzz-raw://af0371c1af45db651823b9a3d5af761b08243c78f105166342eee28de356c8dd",
          "dweb:/ipfs/QmPnC9qNDKwJFd5unwLb9pxjrutoe8MWjm5EXHTxq2kJ4x"
        ],
        "license": "MIT"
      },
      "src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol": {
        "keccak256": "0x215529a99534a40e6257ef2282a91ea4a95b66debc3997866406907622efb405",
        "urls": [
          "bzz-raw://ecc56a2cddb1ba6225ca0cffb07fdf6e24bcc4234cc87710c42a59c0a21ae395",
          "dweb:/ipfs/QmSpW4vkPHeRNZ14beMEk2LEtqY5JQTueNJC4sCT8JaSoc"
        ],
        "license": "MIT"
      },
      "src/v0.8/shared/interfaces/IAccessController.sol": {
        "keccak256": "0x2bdd0e819a586c8a0f326f227157197e3ded4f0e2c75117cc04fded3cb07ed81",
        "urls": [
          "bzz-raw://0e27d99e49f62a445fc415eaa7f07b9eb475f1e3fe61e2f1187391e187d7fb8a",
          "dweb:/ipfs/QmRQdCivLYqH5dv5oox7FV6vK8zYN4hPHEYAjeAort48M2"
        ],
        "license": "MIT"
      },
      "src/v0.8/shared/interfaces/IOwnable.sol": {
        "keccak256": "0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767",
        "urls": [
          "bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921",
          "dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q"
        ],
        "license": "MIT"
      },
      "src/v0.8/shared/interfaces/ITypeAndVersion.sol": {
        "keccak256": "0xf5827cb463c01d055021684d04f9186391c2d9ac850e0d0819f76140e4fc84ed",
        "urls": [
          "bzz-raw://a19c7bae07330e6d7904a0a21cf0ab0067ef096b66c1653a2e012801a931c5b9",
          "dweb:/ipfs/QmckpvSuLx8UL8zfVzAtN6ZRxyXHUSVqqz2JwYZ2jrK58h"
        ],
        "license": "MIT"
      },
      "src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/utils/Address.sol": {
        "keccak256": "0x172a09a55d730f20a9bb309086a4ad06b17c612151f58bab2b44efe78d583d4e",
        "urls": [
          "bzz-raw://1f812456ddd112f09606bfc5965c6e643558d740264273017ad556122502b4e2",
          "dweb:/ipfs/QmdWE4wncanz9Lhu5ESgSo14jAR74Ss5puCM5zUGonATLw"
        ],
        "license": "MIT"
      },
      "src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x9ec0d82ee53d4137be44f1f38f9a82d0d3a2027b3b8b226a5a90e4ee76e926d6",
        "urls": [
          "bzz-raw://f783b453420dee16bb4f0839e3d2485d753d2dcd317adbeecb7e510c39563f57",
          "dweb:/ipfs/QmUd4BeCaw6ZujaYvvMrCn2BNqmiP4bt4eA9rxiXY5od5E"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/v0.8/functions/dev/v1_0_0/accessControl/TermsOfServiceAllowList.sol",
    "id": 91541,
    "exportedSymbols": {
      "Address": [
        138447
      ],
      "ConfirmedOwner": [
        122271
      ],
      "EnumerableSet": [
        143769
      ],
      "IAccessController": [
        122867
      ],
      "ITermsOfServiceAllowList": [
        91595
      ],
      "ITypeAndVersion": [
        122903
      ],
      "TermsOfServiceAllowList": [
        91540
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:5626:161",
    "nodes": [
      {
        "id": 91219,
        "nodeType": "PragmaDirective",
        "src": "32:24:161",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 91221,
        "nodeType": "ImportDirective",
        "src": "58:83:161",
        "nodes": [],
        "absolutePath": "src/v0.8/functions/dev/v1_0_0/accessControl/interfaces/ITermsOfServiceAllowList.sol",
        "file": "./interfaces/ITermsOfServiceAllowList.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 91541,
        "sourceUnit": 91596,
        "symbolAliases": [
          {
            "foreign": {
              "id": 91220,
              "name": "ITermsOfServiceAllowList",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 91595,
              "src": "66:24:161",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 91223,
        "nodeType": "ImportDirective",
        "src": "142:86:161",
        "nodes": [],
        "absolutePath": "src/v0.8/shared/interfaces/IAccessController.sol",
        "file": "../../../../shared/interfaces/IAccessController.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 91541,
        "sourceUnit": 122868,
        "symbolAliases": [
          {
            "foreign": {
              "id": 91222,
              "name": "IAccessController",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 122867,
              "src": "150:17:161",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 91225,
        "nodeType": "ImportDirective",
        "src": "229:82:161",
        "nodes": [],
        "absolutePath": "src/v0.8/shared/interfaces/ITypeAndVersion.sol",
        "file": "../../../../shared/interfaces/ITypeAndVersion.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 91541,
        "sourceUnit": 122904,
        "symbolAliases": [
          {
            "foreign": {
              "id": 91224,
              "name": "ITypeAndVersion",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 122903,
              "src": "237:15:161",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 91227,
        "nodeType": "ImportDirective",
        "src": "313:76:161",
        "nodes": [],
        "absolutePath": "src/v0.8/shared/access/ConfirmedOwner.sol",
        "file": "../../../../shared/access/ConfirmedOwner.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 91541,
        "sourceUnit": 122272,
        "symbolAliases": [
          {
            "foreign": {
              "id": 91226,
              "name": "ConfirmedOwner",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 122271,
              "src": "321:14:161",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 91229,
        "nodeType": "ImportDirective",
        "src": "391:100:161",
        "nodes": [],
        "absolutePath": "src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/utils/Address.sol",
        "file": "../../../../vendor/openzeppelin-solidity/v4.8.0/contracts/utils/Address.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 91541,
        "sourceUnit": 138448,
        "symbolAliases": [
          {
            "foreign": {
              "id": 91228,
              "name": "Address",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 138447,
              "src": "399:7:161",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 91231,
        "nodeType": "ImportDirective",
        "src": "492:120:161",
        "nodes": [],
        "absolutePath": "src/v0.8/vendor/openzeppelin-solidity/v4.8.0/contracts/utils/structs/EnumerableSet.sol",
        "file": "../../../../vendor/openzeppelin-solidity/v4.8.0/contracts/utils/structs/EnumerableSet.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 91541,
        "sourceUnit": 143770,
        "symbolAliases": [
          {
            "foreign": {
              "id": 91230,
              "name": "EnumerableSet",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 143769,
              "src": "500:13:161",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 91540,
        "nodeType": "ContractDefinition",
        "src": "729:4928:161",
        "nodes": [
          {
            "id": 91243,
            "nodeType": "UsingForDirective",
            "src": "846:26:161",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 91241,
              "name": "Address",
              "nameLocations": [
                "852:7:161"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 138447,
              "src": "852:7:161"
            },
            "typeName": {
              "id": 91242,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "864:7:161",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 91247,
            "nodeType": "UsingForDirective",
            "src": "875:49:161",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 91244,
              "name": "EnumerableSet",
              "nameLocations": [
                "881:13:161"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 143769,
              "src": "881:13:161"
            },
            "typeName": {
              "id": 91246,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 91245,
                "name": "EnumerableSet.AddressSet",
                "nameLocations": [
                  "899:13:161",
                  "913:10:161"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 143482,
                "src": "899:24:161"
              },
              "referencedDeclaration": 143482,
              "src": "899:24:161",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_AddressSet_$143482_storage_ptr",
                "typeString": "struct EnumerableSet.AddressSet"
              }
            }
          },
          {
            "id": 91252,
            "nodeType": "VariableDeclaration",
            "src": "962:95:161",
            "nodes": [],
            "baseFunctions": [
              122902
            ],
            "constant": true,
            "documentation": {
              "id": 91248,
              "nodeType": "StructuredDocumentation",
              "src": "928:31:161",
              "text": "@inheritdoc ITypeAndVersion"
            },
            "functionSelector": "181f5a77",
            "mutability": "constant",
            "name": "typeAndVersion",
            "nameLocation": "994:14:161",
            "overrides": {
              "id": 91250,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "985:8:161"
            },
            "scope": 91540,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 91249,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "962:6:161",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "46756e6374696f6e73205465726d73206f66205365727669636520416c6c6f77204c6973742076312e302e30",
              "id": 91251,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1011:46:161",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_e3de6073bf18f681a60d14ba61570d6d85fc801fa26ba6a871abe3f4b28697b3",
                "typeString": "literal_string \"Functions Terms of Service Allow List v1.0.0\""
              },
              "value": "Functions Terms of Service Allow List v1.0.0"
            },
            "visibility": "public"
          },
          {
            "id": 91255,
            "nodeType": "VariableDeclaration",
            "src": "1062:49:161",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "s_allowedSenders",
            "nameLocation": "1095:16:161",
            "scope": 91540,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_AddressSet_$143482_storage",
              "typeString": "struct EnumerableSet.AddressSet"
            },
            "typeName": {
              "id": 91254,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 91253,
                "name": "EnumerableSet.AddressSet",
                "nameLocations": [
                  "1062:13:161",
                  "1076:10:161"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 143482,
                "src": "1062:24:161"
              },
              "referencedDeclaration": 143482,
              "src": "1062:24:161",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_AddressSet_$143482_storage_ptr",
                "typeString": "struct EnumerableSet.AddressSet"
              }
            },
            "visibility": "private"
          },
          {
            "id": 91259,
            "nodeType": "VariableDeclaration",
            "src": "1115:49:161",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "s_blockedSenders",
            "nameLocation": "1148:16:161",
            "scope": 91540,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 91258,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 91256,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1123:7:161",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1115:24:161",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 91257,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1134:4:161",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 91263,
            "nodeType": "EventDefinition",
            "src": "1169:32:161",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "87286ad1f399c8e82bf0c4ef4fcdc570ea2e1e92176e5c848b6413545b885db4",
            "name": "AddedAccess",
            "nameLocation": "1175:11:161",
            "parameters": {
              "id": 91262,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91261,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1195:4:161",
                  "nodeType": "VariableDeclaration",
                  "scope": 91263,
                  "src": "1187:12:161",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 91260,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1187:7:161",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1186:14:161"
            }
          },
          {
            "id": 91267,
            "nodeType": "EventDefinition",
            "src": "1204:34:161",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "337cd0f3f594112b6d830afb510072d3b08556b446514f73b8109162fd1151e1",
            "name": "BlockedAccess",
            "nameLocation": "1210:13:161",
            "parameters": {
              "id": 91266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91265,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1232:4:161",
                  "nodeType": "VariableDeclaration",
                  "scope": 91267,
                  "src": "1224:12:161",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 91264,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1224:7:161",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1223:14:161"
            }
          },
          {
            "id": 91271,
            "nodeType": "EventDefinition",
            "src": "1241:36:161",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "28bbd0761309a99e8fb5e5d02ada0b7b2db2e5357531ff5dbfc205c3f5b6592b",
            "name": "UnblockedAccess",
            "nameLocation": "1247:15:161",
            "parameters": {
              "id": 91270,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91269,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1271:4:161",
                  "nodeType": "VariableDeclaration",
                  "scope": 91271,
                  "src": "1263:12:161",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 91268,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1263:7:161",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1262:14:161"
            }
          },
          {
            "id": 91273,
            "nodeType": "ErrorDefinition",
            "src": "1281:25:161",
            "nodes": [],
            "errorSelector": "8baa579f",
            "name": "InvalidSignature",
            "nameLocation": "1287:16:161",
            "parameters": {
              "id": 91272,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1303:2:161"
            }
          },
          {
            "id": 91275,
            "nodeType": "ErrorDefinition",
            "src": "1309:21:161",
            "nodes": [],
            "errorSelector": "381cfcbd",
            "name": "InvalidUsage",
            "nameLocation": "1315:12:161",
            "parameters": {
              "id": 91274,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1327:2:161"
            }
          },
          {
            "id": 91277,
            "nodeType": "ErrorDefinition",
            "src": "1333:27:161",
            "nodes": [],
            "errorSelector": "62b7a34d",
            "name": "RecipientIsBlocked",
            "nameLocation": "1339:18:161",
            "parameters": {
              "id": 91276,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1357:2:161"
            }
          },
          {
            "id": 91282,
            "nodeType": "StructDefinition",
            "src": "1574:283:161",
            "nodes": [],
            "canonicalName": "TermsOfServiceAllowList.Config",
            "members": [
              {
                "constant": false,
                "id": 91279,
                "mutability": "mutable",
                "name": "enabled",
                "nameLocation": "1599:7:161",
                "nodeType": "VariableDeclaration",
                "scope": 91282,
                "src": "1594:12:161",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 91278,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1594:4:161",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 91281,
                "mutability": "mutable",
                "name": "signerPublicKey",
                "nameLocation": "1772:15:161",
                "nodeType": "VariableDeclaration",
                "scope": 91282,
                "src": "1764:23:161",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 91280,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1764:7:161",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Config",
            "nameLocation": "1581:6:161",
            "scope": 91540,
            "visibility": "public"
          },
          {
            "id": 91285,
            "nodeType": "VariableDeclaration",
            "src": "1861:23:161",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "s_config",
            "nameLocation": "1876:8:161",
            "scope": 91540,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Config_$91282_storage",
              "typeString": "struct TermsOfServiceAllowList.Config"
            },
            "typeName": {
              "id": 91284,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 91283,
                "name": "Config",
                "nameLocations": [
                  "1861:6:161"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 91282,
                "src": "1861:6:161"
              },
              "referencedDeclaration": 91282,
              "src": "1861:6:161",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Config_$91282_storage_ptr",
                "typeString": "struct TermsOfServiceAllowList.Config"
              }
            },
            "visibility": "private"
          },
          {
            "id": 91290,
            "nodeType": "EventDefinition",
            "src": "1889:35:161",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "0d22b8a99f411b3dd338c961284f608489ca0dab9cdad17366a343c361bcf80a",
            "name": "ConfigUpdated",
            "nameLocation": "1895:13:161",
            "parameters": {
              "id": 91289,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91288,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "config",
                  "nameLocation": "1916:6:161",
                  "nodeType": "VariableDeclaration",
                  "scope": 91290,
                  "src": "1909:13:161",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Config_$91282_memory_ptr",
                    "typeString": "struct TermsOfServiceAllowList.Config"
                  },
                  "typeName": {
                    "id": 91287,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 91286,
                      "name": "Config",
                      "nameLocations": [
                        "1909:6:161"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 91282,
                      "src": "1909:6:161"
                    },
                    "referencedDeclaration": 91282,
                    "src": "1909:6:161",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Config_$91282_storage_ptr",
                      "typeString": "struct TermsOfServiceAllowList.Config"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1908:15:161"
            }
          },
          {
            "id": 91305,
            "nodeType": "FunctionDefinition",
            "src": "2139:92:161",
            "nodes": [],
            "body": {
              "id": 91304,
              "nodeType": "Block",
              "src": "2200:31:161",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 91301,
                        "name": "config",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91293,
                        "src": "2219:6:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Config_$91282_memory_ptr",
                          "typeString": "struct TermsOfServiceAllowList.Config memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Config_$91282_memory_ptr",
                          "typeString": "struct TermsOfServiceAllowList.Config memory"
                        }
                      ],
                      "id": 91300,
                      "name": "updateConfig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91333,
                      "src": "2206:12:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Config_$91282_memory_ptr_$returns$__$",
                        "typeString": "function (struct TermsOfServiceAllowList.Config memory)"
                      }
                    },
                    "id": 91302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2206:20:161",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91303,
                  "nodeType": "ExpressionStatement",
                  "src": "2206:20:161"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 91296,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "2188:3:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 91297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2192:6:161",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "2188:10:161",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 91298,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 91295,
                  "name": "ConfirmedOwner",
                  "nameLocations": [
                    "2173:14:161"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 122271,
                  "src": "2173:14:161"
                },
                "nodeType": "ModifierInvocation",
                "src": "2173:26:161"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 91294,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91293,
                  "mutability": "mutable",
                  "name": "config",
                  "nameLocation": "2165:6:161",
                  "nodeType": "VariableDeclaration",
                  "scope": 91305,
                  "src": "2151:20:161",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Config_$91282_memory_ptr",
                    "typeString": "struct TermsOfServiceAllowList.Config"
                  },
                  "typeName": {
                    "id": 91292,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 91291,
                      "name": "Config",
                      "nameLocations": [
                        "2151:6:161"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 91282,
                      "src": "2151:6:161"
                    },
                    "referencedDeclaration": 91282,
                    "src": "2151:6:161",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Config_$91282_storage_ptr",
                      "typeString": "struct TermsOfServiceAllowList.Config"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2150:22:161"
            },
            "returnParameters": {
              "id": 91299,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2200:0:161"
            },
            "scope": 91540,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 91315,
            "nodeType": "FunctionDefinition",
            "src": "2516:85:161",
            "nodes": [],
            "body": {
              "id": 91314,
              "nodeType": "Block",
              "src": "2575:26:161",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 91312,
                    "name": "s_config",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 91285,
                    "src": "2588:8:161",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Config_$91282_storage",
                      "typeString": "struct TermsOfServiceAllowList.Config storage ref"
                    }
                  },
                  "functionReturnParameters": 91311,
                  "id": 91313,
                  "nodeType": "Return",
                  "src": "2581:15:161"
                }
              ]
            },
            "documentation": {
              "id": 91306,
              "nodeType": "StructuredDocumentation",
              "src": "2446:67:161",
              "text": "@notice Gets the contracts's configuration\n @return config"
            },
            "functionSelector": "c3f909d4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getConfig",
            "nameLocation": "2525:9:161",
            "parameters": {
              "id": 91307,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2534:2:161"
            },
            "returnParameters": {
              "id": 91311,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91310,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 91315,
                  "src": "2560:13:161",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Config_$91282_memory_ptr",
                    "typeString": "struct TermsOfServiceAllowList.Config"
                  },
                  "typeName": {
                    "id": 91309,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 91308,
                      "name": "Config",
                      "nameLocations": [
                        "2560:6:161"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 91282,
                      "src": "2560:6:161"
                    },
                    "referencedDeclaration": 91282,
                    "src": "2560:6:161",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Config_$91282_storage_ptr",
                      "typeString": "struct TermsOfServiceAllowList.Config"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2559:15:161"
            },
            "scope": 91540,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 91333,
            "nodeType": "FunctionDefinition",
            "src": "2759:121:161",
            "nodes": [],
            "body": {
              "id": 91332,
              "nodeType": "Block",
              "src": "2820:60:161",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 91326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 91324,
                      "name": "s_config",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91285,
                      "src": "2826:8:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Config_$91282_storage",
                        "typeString": "struct TermsOfServiceAllowList.Config storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 91325,
                      "name": "config",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91319,
                      "src": "2837:6:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Config_$91282_memory_ptr",
                        "typeString": "struct TermsOfServiceAllowList.Config memory"
                      }
                    },
                    "src": "2826:17:161",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Config_$91282_storage",
                      "typeString": "struct TermsOfServiceAllowList.Config storage ref"
                    }
                  },
                  "id": 91327,
                  "nodeType": "ExpressionStatement",
                  "src": "2826:17:161"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 91329,
                        "name": "config",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91319,
                        "src": "2868:6:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Config_$91282_memory_ptr",
                          "typeString": "struct TermsOfServiceAllowList.Config memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Config_$91282_memory_ptr",
                          "typeString": "struct TermsOfServiceAllowList.Config memory"
                        }
                      ],
                      "id": 91328,
                      "name": "ConfigUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91290,
                      "src": "2854:13:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_Config_$91282_memory_ptr_$returns$__$",
                        "typeString": "function (struct TermsOfServiceAllowList.Config memory)"
                      }
                    },
                    "id": 91330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2854:21:161",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91331,
                  "nodeType": "EmitStatement",
                  "src": "2849:26:161"
                }
              ]
            },
            "documentation": {
              "id": 91316,
              "nodeType": "StructuredDocumentation",
              "src": "2605:151:161",
              "text": "@notice Sets the contracts's configuration\n @param config - See the contents of the TermsOfServiceAllowList.Config struct for more information"
            },
            "functionSelector": "89f9a2c4",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 91322,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 91321,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2810:9:161"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 122432,
                  "src": "2810:9:161"
                },
                "nodeType": "ModifierInvocation",
                "src": "2810:9:161"
              }
            ],
            "name": "updateConfig",
            "nameLocation": "2768:12:161",
            "parameters": {
              "id": 91320,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91319,
                  "mutability": "mutable",
                  "name": "config",
                  "nameLocation": "2795:6:161",
                  "nodeType": "VariableDeclaration",
                  "scope": 91333,
                  "src": "2781:20:161",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Config_$91282_memory_ptr",
                    "typeString": "struct TermsOfServiceAllowList.Config"
                  },
                  "typeName": {
                    "id": 91318,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 91317,
                      "name": "Config",
                      "nameLocations": [
                        "2781:6:161"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 91282,
                      "src": "2781:6:161"
                    },
                    "referencedDeclaration": 91282,
                    "src": "2781:6:161",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Config_$91282_storage_ptr",
                      "typeString": "struct TermsOfServiceAllowList.Config"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2780:22:161"
            },
            "returnParameters": {
              "id": 91323,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2820:0:161"
            },
            "scope": 91540,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 91353,
            "nodeType": "FunctionDefinition",
            "src": "3138:162:161",
            "nodes": [],
            "body": {
              "id": 91352,
              "nodeType": "Block",
              "src": "3234:66:161",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 91347,
                            "name": "acceptor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 91336,
                            "src": "3274:8:161",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 91348,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 91338,
                            "src": "3284:9:161",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 91345,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3257:3:161",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 91346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3261:12:161",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "3257:16:161",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 91349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3257:37:161",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 91344,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3247:9:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 91350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3247:48:161",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 91343,
                  "id": 91351,
                  "nodeType": "Return",
                  "src": "3240:55:161"
                }
              ]
            },
            "baseFunctions": [
              91553
            ],
            "documentation": {
              "id": 91334,
              "nodeType": "StructuredDocumentation",
              "src": "3095:40:161",
              "text": "@inheritdoc ITermsOfServiceAllowList"
            },
            "functionSelector": "a39b06e3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMessage",
            "nameLocation": "3147:10:161",
            "overrides": {
              "id": 91340,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3207:8:161"
            },
            "parameters": {
              "id": 91339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91336,
                  "mutability": "mutable",
                  "name": "acceptor",
                  "nameLocation": "3166:8:161",
                  "nodeType": "VariableDeclaration",
                  "scope": 91353,
                  "src": "3158:16:161",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 91335,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3158:7:161",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91338,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "3184:9:161",
                  "nodeType": "VariableDeclaration",
                  "scope": 91353,
                  "src": "3176:17:161",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 91337,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3176:7:161",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3157:37:161"
            },
            "returnParameters": {
              "id": 91343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91342,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 91353,
                  "src": "3225:7:161",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 91341,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3225:7:161",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3224:9:161"
            },
            "scope": 91540,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 91435,
            "nodeType": "FunctionDefinition",
            "src": "3347:1047:161",
            "nodes": [],
            "body": {
              "id": 91434,
              "nodeType": "Block",
              "src": "3463:931:161",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "baseExpression": {
                      "id": 91368,
                      "name": "s_blockedSenders",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91259,
                      "src": "3473:16:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 91370,
                    "indexExpression": {
                      "id": 91369,
                      "name": "recipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91358,
                      "src": "3490:9:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3473:27:161",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 91375,
                  "nodeType": "IfStatement",
                  "src": "3469:75:161",
                  "trueBody": {
                    "id": 91374,
                    "nodeType": "Block",
                    "src": "3502:42:161",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 91371,
                            "name": "RecipientIsBlocked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 91277,
                            "src": "3517:18:161",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 91372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3517:20:161",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 91373,
                        "nodeType": "RevertStatement",
                        "src": "3510:27:161"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    91377
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 91377,
                      "mutability": "mutable",
                      "name": "prefixedMessage",
                      "nameLocation": "3641:15:161",
                      "nodeType": "VariableDeclaration",
                      "scope": 91434,
                      "src": "3633:23:161",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 91376,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3633:7:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 91388,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
                            "id": 91381,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3693:34:161",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                              "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
                            },
                            "value": "\u0019Ethereum Signed Message:\n32"
                          },
                          {
                            "arguments": [
                              {
                                "id": 91383,
                                "name": "acceptor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 91356,
                                "src": "3740:8:161",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 91384,
                                "name": "recipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 91358,
                                "src": "3750:9:161",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 91382,
                              "name": "getMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 91353,
                              "src": "3729:10:161",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$returns$_t_bytes32_$",
                                "typeString": "function (address,address) pure returns (bytes32)"
                              }
                            },
                            "id": 91385,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3729:31:161",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                              "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 91379,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3676:3:161",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 91380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3680:12:161",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "3676:16:161",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 91386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3676:85:161",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 91378,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3659:9:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 91387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3659:108:161",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3633:134:161"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 91397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 91390,
                          "name": "prefixedMessage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91377,
                          "src": "3787:15:161",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 91391,
                          "name": "v",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91364,
                          "src": "3804:1:161",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "id": 91392,
                          "name": "r",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91360,
                          "src": "3807:1:161",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 91393,
                          "name": "s",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91362,
                          "src": "3810:1:161",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 91389,
                        "name": "ecrecover",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -6,
                        "src": "3777:9:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                          "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                        }
                      },
                      "id": 91394,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3777:35:161",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 91395,
                        "name": "s_config",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91285,
                        "src": "3816:8:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Config_$91282_storage",
                          "typeString": "struct TermsOfServiceAllowList.Config storage ref"
                        }
                      },
                      "id": 91396,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3825:15:161",
                      "memberName": "signerPublicKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 91281,
                      "src": "3816:24:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3777:63:161",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 91402,
                  "nodeType": "IfStatement",
                  "src": "3773:109:161",
                  "trueBody": {
                    "id": 91401,
                    "nodeType": "Block",
                    "src": "3842:40:161",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 91398,
                            "name": "InvalidSignature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 91273,
                            "src": "3857:16:161",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 91399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3857:18:161",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 91400,
                        "nodeType": "RevertStatement",
                        "src": "3850:25:161"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 91418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 91406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 91403,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4163:3:161",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 91404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4167:6:161",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4163:10:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 91405,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91358,
                        "src": "4177:9:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "4163:23:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 91416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 91410,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 91407,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4191:3:161",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 91408,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4195:6:161",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4191:10:161",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "id": 91409,
                              "name": "acceptor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 91356,
                              "src": "4205:8:161",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "4191:22:161",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 91415,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "4217:24:161",
                            "subExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "expression": {
                                    "id": 91411,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "4218:3:161",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 91412,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4222:6:161",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "4218:10:161",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 91413,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4229:10:161",
                                "memberName": "isContract",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 138135,
                                "src": "4218:21:161",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
                                  "typeString": "function (address) view returns (bool)"
                                }
                              },
                              "id": 91414,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4218:23:161",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4191:50:161",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 91417,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4190:52:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4163:79:161",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 91423,
                  "nodeType": "IfStatement",
                  "src": "4159:121:161",
                  "trueBody": {
                    "id": 91422,
                    "nodeType": "Block",
                    "src": "4244:36:161",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 91419,
                            "name": "InvalidUsage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 91275,
                            "src": "4259:12:161",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 91420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4259:14:161",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 91421,
                        "nodeType": "RevertStatement",
                        "src": "4252:21:161"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 91427,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91358,
                        "src": "4346:9:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 91424,
                        "name": "s_allowedSenders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91255,
                        "src": "4325:16:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$143482_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 91426,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4342:3:161",
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 143509,
                      "src": "4325:20:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$143482_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$143482_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                      }
                    },
                    "id": 91428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4325:31:161",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 91429,
                  "nodeType": "ExpressionStatement",
                  "src": "4325:31:161"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 91431,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91358,
                        "src": "4379:9:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 91430,
                      "name": "AddedAccess",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91263,
                      "src": "4367:11:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 91432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4367:22:161",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91433,
                  "nodeType": "EmitStatement",
                  "src": "4362:27:161"
                }
              ]
            },
            "baseFunctions": [
              91582
            ],
            "documentation": {
              "id": 91354,
              "nodeType": "StructuredDocumentation",
              "src": "3304:40:161",
              "text": "@inheritdoc ITermsOfServiceAllowList"
            },
            "functionSelector": "3908c4d4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "acceptTermsOfService",
            "nameLocation": "3356:20:161",
            "overrides": {
              "id": 91366,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3454:8:161"
            },
            "parameters": {
              "id": 91365,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91356,
                  "mutability": "mutable",
                  "name": "acceptor",
                  "nameLocation": "3385:8:161",
                  "nodeType": "VariableDeclaration",
                  "scope": 91435,
                  "src": "3377:16:161",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 91355,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3377:7:161",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91358,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "3403:9:161",
                  "nodeType": "VariableDeclaration",
                  "scope": 91435,
                  "src": "3395:17:161",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 91357,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3395:7:161",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91360,
                  "mutability": "mutable",
                  "name": "r",
                  "nameLocation": "3422:1:161",
                  "nodeType": "VariableDeclaration",
                  "scope": 91435,
                  "src": "3414:9:161",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 91359,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3414:7:161",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91362,
                  "mutability": "mutable",
                  "name": "s",
                  "nameLocation": "3433:1:161",
                  "nodeType": "VariableDeclaration",
                  "scope": 91435,
                  "src": "3425:9:161",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 91361,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3425:7:161",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91364,
                  "mutability": "mutable",
                  "name": "v",
                  "nameLocation": "3442:1:161",
                  "nodeType": "VariableDeclaration",
                  "scope": 91435,
                  "src": "3436:7:161",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 91363,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3436:5:161",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3376:68:161"
            },
            "returnParameters": {
              "id": 91367,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3463:0:161"
            },
            "scope": 91540,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 91448,
            "nodeType": "FunctionDefinition",
            "src": "4441:125:161",
            "nodes": [],
            "body": {
              "id": 91447,
              "nodeType": "Block",
              "src": "4523:43:161",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 91443,
                        "name": "s_allowedSenders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91255,
                        "src": "4536:16:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$143482_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 91444,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4553:6:161",
                      "memberName": "values",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 143635,
                      "src": "4536:23:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$143482_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$attached_to$_t_struct$_AddressSet_$143482_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (address[] memory)"
                      }
                    },
                    "id": 91445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4536:25:161",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "functionReturnParameters": 91442,
                  "id": 91446,
                  "nodeType": "Return",
                  "src": "4529:32:161"
                }
              ]
            },
            "baseFunctions": [
              91568
            ],
            "documentation": {
              "id": 91436,
              "nodeType": "StructuredDocumentation",
              "src": "4398:40:161",
              "text": "@inheritdoc ITermsOfServiceAllowList"
            },
            "functionSelector": "817ef62e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllAllowedSenders",
            "nameLocation": "4450:20:161",
            "overrides": {
              "id": 91438,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4487:8:161"
            },
            "parameters": {
              "id": 91437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4470:2:161"
            },
            "returnParameters": {
              "id": 91442,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91441,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 91448,
                  "src": "4505:16:161",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 91439,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4505:7:161",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 91440,
                    "nodeType": "ArrayTypeName",
                    "src": "4505:9:161",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4504:18:161"
            },
            "scope": 91540,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 91472,
            "nodeType": "FunctionDefinition",
            "src": "4606:201:161",
            "nodes": [],
            "body": {
              "id": 91471,
              "nodeType": "Block",
              "src": "4704:103:161",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 91461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4714:17:161",
                    "subExpression": {
                      "expression": {
                        "id": 91459,
                        "name": "s_config",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91285,
                        "src": "4715:8:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Config_$91282_storage",
                          "typeString": "struct TermsOfServiceAllowList.Config storage ref"
                        }
                      },
                      "id": 91460,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4724:7:161",
                      "memberName": "enabled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 91279,
                      "src": "4715:16:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 91465,
                  "nodeType": "IfStatement",
                  "src": "4710:49:161",
                  "trueBody": {
                    "id": 91464,
                    "nodeType": "Block",
                    "src": "4733:26:161",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 91462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4748:4:161",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 91458,
                        "id": 91463,
                        "nodeType": "Return",
                        "src": "4741:11:161"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 91468,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91451,
                        "src": "4797:4:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 91466,
                        "name": "s_allowedSenders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91255,
                        "src": "4771:16:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$143482_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 91467,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4788:8:161",
                      "memberName": "contains",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 143563,
                      "src": "4771:25:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$143482_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$143482_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
                      }
                    },
                    "id": 91469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4771:31:161",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 91458,
                  "id": 91470,
                  "nodeType": "Return",
                  "src": "4764:38:161"
                }
              ]
            },
            "baseFunctions": [
              122866
            ],
            "documentation": {
              "id": 91449,
              "nodeType": "StructuredDocumentation",
              "src": "4570:33:161",
              "text": "@inheritdoc IAccessController"
            },
            "functionSelector": "6b14daf8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hasAccess",
            "nameLocation": "4615:9:161",
            "overrides": {
              "id": 91455,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4680:8:161"
            },
            "parameters": {
              "id": 91454,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91451,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "4633:4:161",
                  "nodeType": "VariableDeclaration",
                  "scope": 91472,
                  "src": "4625:12:161",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 91450,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4625:7:161",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91453,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 91472,
                  "src": "4639:14:161",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 91452,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4639:5:161",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4624:41:161"
            },
            "returnParameters": {
              "id": 91458,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91457,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 91472,
                  "src": "4698:4:161",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 91456,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4698:4:161",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4697:6:161"
            },
            "scope": 91540,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 91493,
            "nodeType": "FunctionDefinition",
            "src": "5065:176:161",
            "nodes": [],
            "body": {
              "id": 91492,
              "nodeType": "Block",
              "src": "5144:97:161",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 91483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "5154:17:161",
                    "subExpression": {
                      "expression": {
                        "id": 91481,
                        "name": "s_config",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91285,
                        "src": "5155:8:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Config_$91282_storage",
                          "typeString": "struct TermsOfServiceAllowList.Config storage ref"
                        }
                      },
                      "id": 91482,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5164:7:161",
                      "memberName": "enabled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 91279,
                      "src": "5155:16:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 91487,
                  "nodeType": "IfStatement",
                  "src": "5150:50:161",
                  "trueBody": {
                    "id": 91486,
                    "nodeType": "Block",
                    "src": "5173:27:161",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 91484,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5188:5:161",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 91480,
                        "id": 91485,
                        "nodeType": "Return",
                        "src": "5181:12:161"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 91488,
                      "name": "s_blockedSenders",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91259,
                      "src": "5212:16:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 91490,
                    "indexExpression": {
                      "id": 91489,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91475,
                      "src": "5229:6:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5212:24:161",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 91480,
                  "id": 91491,
                  "nodeType": "Return",
                  "src": "5205:31:161"
                }
              ]
            },
            "baseFunctions": [
              91561
            ],
            "documentation": {
              "id": 91473,
              "nodeType": "StructuredDocumentation",
              "src": "5022:40:161",
              "text": "@inheritdoc ITermsOfServiceAllowList"
            },
            "functionSelector": "a5e1d61d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isBlockedSender",
            "nameLocation": "5074:15:161",
            "overrides": {
              "id": 91477,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5120:8:161"
            },
            "parameters": {
              "id": 91476,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91475,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "5098:6:161",
                  "nodeType": "VariableDeclaration",
                  "scope": 91493,
                  "src": "5090:14:161",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 91474,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5090:7:161",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5089:16:161"
            },
            "returnParameters": {
              "id": 91480,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91479,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 91493,
                  "src": "5138:4:161",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 91478,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5138:4:161",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5137:6:161"
            },
            "scope": 91540,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 91519,
            "nodeType": "FunctionDefinition",
            "src": "5288:176:161",
            "nodes": [],
            "body": {
              "id": 91518,
              "nodeType": "Block",
              "src": "5353:111:161",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 91505,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91496,
                        "src": "5383:6:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 91502,
                        "name": "s_allowedSenders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91255,
                        "src": "5359:16:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$143482_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 91504,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5376:6:161",
                      "memberName": "remove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 143536,
                      "src": "5359:23:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$143482_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$143482_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                      }
                    },
                    "id": 91506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5359:31:161",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 91507,
                  "nodeType": "ExpressionStatement",
                  "src": "5359:31:161"
                },
                {
                  "expression": {
                    "id": 91512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 91508,
                        "name": "s_blockedSenders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91259,
                        "src": "5396:16:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 91510,
                      "indexExpression": {
                        "id": 91509,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91496,
                        "src": "5413:6:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5396:24:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 91511,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5423:4:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5396:31:161",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 91513,
                  "nodeType": "ExpressionStatement",
                  "src": "5396:31:161"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 91515,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91496,
                        "src": "5452:6:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 91514,
                      "name": "BlockedAccess",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91267,
                      "src": "5438:13:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 91516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5438:21:161",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91517,
                  "nodeType": "EmitStatement",
                  "src": "5433:26:161"
                }
              ]
            },
            "baseFunctions": [
              91588
            ],
            "documentation": {
              "id": 91494,
              "nodeType": "StructuredDocumentation",
              "src": "5245:40:161",
              "text": "@inheritdoc ITermsOfServiceAllowList"
            },
            "functionSelector": "82184c7b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 91500,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 91499,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "5343:9:161"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 122432,
                  "src": "5343:9:161"
                },
                "nodeType": "ModifierInvocation",
                "src": "5343:9:161"
              }
            ],
            "name": "blockSender",
            "nameLocation": "5297:11:161",
            "overrides": {
              "id": 91498,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5334:8:161"
            },
            "parameters": {
              "id": 91497,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91496,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "5317:6:161",
                  "nodeType": "VariableDeclaration",
                  "scope": 91519,
                  "src": "5309:14:161",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 91495,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5309:7:161",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5308:16:161"
            },
            "returnParameters": {
              "id": 91501,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5353:0:161"
            },
            "scope": 91540,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 91539,
            "nodeType": "FunctionDefinition",
            "src": "5511:144:161",
            "nodes": [],
            "body": {
              "id": 91538,
              "nodeType": "Block",
              "src": "5578:77:161",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 91532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 91528,
                        "name": "s_blockedSenders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91259,
                        "src": "5584:16:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 91530,
                      "indexExpression": {
                        "id": 91529,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91522,
                        "src": "5601:6:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5584:24:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 91531,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5611:5:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "5584:32:161",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 91533,
                  "nodeType": "ExpressionStatement",
                  "src": "5584:32:161"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 91535,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91522,
                        "src": "5643:6:161",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 91534,
                      "name": "UnblockedAccess",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91271,
                      "src": "5627:15:161",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 91536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5627:23:161",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91537,
                  "nodeType": "EmitStatement",
                  "src": "5622:28:161"
                }
              ]
            },
            "baseFunctions": [
              91594
            ],
            "documentation": {
              "id": 91520,
              "nodeType": "StructuredDocumentation",
              "src": "5468:40:161",
              "text": "@inheritdoc ITermsOfServiceAllowList"
            },
            "functionSelector": "47663acb",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 91526,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 91525,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "5568:9:161"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 122432,
                  "src": "5568:9:161"
                },
                "nodeType": "ModifierInvocation",
                "src": "5568:9:161"
              }
            ],
            "name": "unblockSender",
            "nameLocation": "5520:13:161",
            "overrides": {
              "id": 91524,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5559:8:161"
            },
            "parameters": {
              "id": 91523,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91522,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "5542:6:161",
                  "nodeType": "VariableDeclaration",
                  "scope": 91539,
                  "src": "5534:14:161",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 91521,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5534:7:161",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5533:16:161"
            },
            "returnParameters": {
              "id": 91527,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5578:0:161"
            },
            "scope": 91540,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 91233,
              "name": "ITermsOfServiceAllowList",
              "nameLocations": [
                "765:24:161"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 91595,
              "src": "765:24:161"
            },
            "id": 91234,
            "nodeType": "InheritanceSpecifier",
            "src": "765:24:161"
          },
          {
            "baseName": {
              "id": 91235,
              "name": "IAccessController",
              "nameLocations": [
                "791:17:161"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 122867,
              "src": "791:17:161"
            },
            "id": 91236,
            "nodeType": "InheritanceSpecifier",
            "src": "791:17:161"
          },
          {
            "baseName": {
              "id": 91237,
              "name": "ITypeAndVersion",
              "nameLocations": [
                "810:15:161"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 122903,
              "src": "810:15:161"
            },
            "id": 91238,
            "nodeType": "InheritanceSpecifier",
            "src": "810:15:161"
          },
          {
            "baseName": {
              "id": 91239,
              "name": "ConfirmedOwner",
              "nameLocations": [
                "827:14:161"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 122271,
              "src": "827:14:161"
            },
            "id": 91240,
            "nodeType": "InheritanceSpecifier",
            "src": "827:14:161"
          }
        ],
        "canonicalName": "TermsOfServiceAllowList",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 91232,
          "nodeType": "StructuredDocumentation",
          "src": "614:115:161",
          "text": "@notice A contract to handle access control of subscription management dependent on signing a Terms of Service"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          91540,
          122271,
          122433,
          122895,
          122903,
          122867,
          91595
        ],
        "name": "TermsOfServiceAllowList",
        "nameLocation": "738:23:161",
        "scope": 91541,
        "usedErrors": [
          91273,
          91275,
          91277
        ],
        "usedEvents": [
          91263,
          91267,
          91271,
          91290,
          122287,
          122293
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 161
}